{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,kKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-8 w-8\", // Adjusted icon size for better fit in tables etc.\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n\n    "],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,iKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,iKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,8OAAC,iKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;AACA,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,iKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,8OAAC,4LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,iKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,iKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,8OAAC,iIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,8OAAC,iIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,8OAAC;4BAAI,WAAU;;gCACZ,uBAAS,8OAAC,iIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,8OAAC,iIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,8OAAC,iIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,8OAAC,iIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB","debugId":null}},
    {"offset": {"line": 483, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/Navigation.tsx"],"sourcesContent":["\n\"use client\";\ninterface NavigationProps {\n  activeTab: string;\n  setActiveTab: (tab: string) => void;\n}\n\nexport function Navigation({ activeTab, setActiveTab }: NavigationProps) {\n  // Removed 'another-page' from navItems\n  const navItems = [\n    { id: \"daily-report\", label: \"Activité TSUD\", icon: \"fas fa-file-alt\" },\n    { id: \"activity-report\", label: \"Activité TNR\", icon: \"fas fa-chart-line\" },\n    { id: \"r0-report\", label: \"Rapport R0\", icon: \"fas fa-file\" }, // Changed ID\n    { id: \"truck-tracking\", label: \"Pointage Camions\", icon: \"fas fa-truck\" },\n   ];\n\n  return (\n    <nav className=\"border-b overflow-x-auto whitespace-nowrap mb-6\">\n      <div className=\"flex space-x-1\">\n        {navItems.map((item) => (\n          <button\n            key={item.id}\n            role=\"tab\"\n            aria-selected={activeTab === item.id}\n            className={`px-4 py-2 font-medium text-sm rounded-t-md transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-1 ${\n              activeTab === item.id\n                ? \"border-b-2 border-primary text-primary bg-primary/10\"\n                : \"text-muted-foreground hover:text-foreground hover:bg-muted/50\"\n            }`}\n            onClick={() => setActiveTab(item.id)}\n          >\n            {/* If you have icons, you can add them here, e.g., using lucide-react */}\n            {/* <i className={`${item.icon} mr-2`}></i> */}\n            {item.label}\n          </button>\n        ))}\n      </div>\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;AAMO,SAAS,WAAW,EAAE,SAAS,EAAE,YAAY,EAAmB;IACrE,uCAAuC;IACvC,MAAM,WAAW;QACf;YAAE,IAAI;YAAgB,OAAO;YAAiB,MAAM;QAAkB;QACtE;YAAE,IAAI;YAAmB,OAAO;YAAgB,MAAM;QAAoB;QAC1E;YAAE,IAAI;YAAa,OAAO;YAAc,MAAM;QAAc;QAC5D;YAAE,IAAI;YAAkB,OAAO;YAAoB,MAAM;QAAe;KACxE;IAEF,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,SAAS,GAAG,CAAC,CAAC,qBACb,8OAAC;oBAEC,MAAK;oBACL,iBAAe,cAAc,KAAK,EAAE;oBACpC,WAAW,CAAC,0JAA0J,EACpK,cAAc,KAAK,EAAE,GACjB,yDACA,iEACJ;oBACF,SAAS,IAAM,aAAa,KAAK,EAAE;8BAIlC,KAAK,KAAK;mBAZN,KAAK,EAAE;;;;;;;;;;;;;;;AAkBxB","debugId":null}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 939, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1049, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/DailyReport.tsx"],"sourcesContent":["\n\"use client\";\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Trash } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\ninterface DailyReportProps {\n  currentDate: Date; // Use Date object\n}\n\ninterface ModuleStop {\n  id: string; // Add unique id for key prop\n  duration: string;\n  nature: string;\n  hm: string;\n  ha: string;\n}\n\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\n\n// Helper function to parse duration strings into minutes\nfunction parseDurationToMinutes(duration: string): number {\n  if (!duration) return 0;\n\n  // Clean the string: remove anything not a digit, H, h, :, ·\n  // Allow spaces for flexibility e.g., \"1 H 20\"\n  const cleaned = duration.replace(/[^0-9Hh:·\\s]/g, '').trim();\n\n  let hours = 0;\n  let minutes = 0;\n\n  // Match formats like HH:MM, HH·MM, HH H MM, H:MM, H·MM, H H MM\n   let match = cleaned.match(/^(?:(\\d{1,2})\\s?[Hh:·]\\s?)?(\\d{1,2})$/);\n   if (match) {\n     hours = match[1] ? parseInt(match[1], 10) : 0;\n     minutes = parseInt(match[2], 10);\n     return (hours * 60) + minutes;\n   }\n\n\n   // Match formats like HH H, H H\n   match = cleaned.match(/^(\\d{1,2})\\s?[Hh]$/);\n    if (match) {\n      hours = parseInt(match[1], 10);\n      return hours * 60;\n    }\n\n  // Match only numbers (assume minutes)\n  match = cleaned.match(/^(\\d+)$/);\n  if (match) {\n    minutes = parseInt(match[1], 10);\n    return minutes;\n  }\n\n  console.warn(`Could not parse duration: \"${duration}\"`);\n  return 0; // Return 0 if parsing fails\n}\n\n\n// Helper function to format minutes into HHh MMm string\nfunction formatMinutesToHoursMinutes(totalMinutes: number): string {\n    if (isNaN(totalMinutes) || totalMinutes < 0) return \"0h 0m\";\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = totalMinutes % 60;\n    return `${hours}h ${minutes}m`;\n}\n\n\nexport function DailyReport({ currentDate }: DailyReportProps) {\n  const TOTAL_SHIFT_MINUTES = 8 * 60; // 8-hour shift\n\n  const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Default to 1er Poste\n\n  const [module1Stops, setModule1Stops] = useState<ModuleStop[]>([\n    {\n      id: crypto.randomUUID(),\n      duration: \"1·20\",\n      nature: \"Marque produit d'agissant steril\",\n      hm: \"6H·20\",\n      ha: \"1·40\",\n    },\n    { id: crypto.randomUUID(), duration: \"20\", nature: \"\", hm: \"\", ha: \"\" },\n  ]);\n  const [module2Stops, setModule2Stops] = useState<ModuleStop[]>([\n    { id: crypto.randomUUID(), duration: \"40\", nature: \"Lancement Vol. G3\", hm: \"6·H·55\", ha: \"55\" },\n  ]);\n\n  const [module1TotalDowntime, setModule1TotalDowntime] = useState(0);\n  const [module2TotalDowntime, setModule2TotalDowntime] = useState(0);\n  const [module1OperatingTime, setModule1OperatingTime] = useState(TOTAL_SHIFT_MINUTES);\n  const [module2OperatingTime, setModule2OperatingTime] = useState(TOTAL_SHIFT_MINUTES);\n\n   // Format date string once\n   const formattedDate = currentDate.toLocaleDateString(\"fr-FR\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  });\n\n\n   useEffect(() => {\n    const calculateTotals = (stops: ModuleStop[]) => {\n      const totalDowntime = stops.reduce((acc, stop) => acc + parseDurationToMinutes(stop.duration), 0);\n      // Calculate operating time based on a standard 8-hour shift\n      const operatingTime = TOTAL_SHIFT_MINUTES - totalDowntime;\n      return { totalDowntime, operatingTime };\n    };\n\n    const { totalDowntime: m1Downtime, operatingTime: m1Operating } = calculateTotals(module1Stops);\n    setModule1TotalDowntime(m1Downtime);\n    setModule1OperatingTime(m1Operating >= 0 ? m1Operating : 0); // Ensure non-negative\n\n    const { totalDowntime: m2Downtime, operatingTime: m2Operating } = calculateTotals(module2Stops);\n    setModule2TotalDowntime(m2Downtime);\n    setModule2OperatingTime(m2Operating >= 0 ? m2Operating : 0); // Ensure non-negative\n\n  }, [module1Stops, module2Stops, TOTAL_SHIFT_MINUTES]);\n\n\n  const addStop = (module: number) => {\n    const newStop: ModuleStop = { id: crypto.randomUUID(), duration: \"\", nature: \"\", hm: \"\", ha: \"\" };\n    if (module === 1) {\n      setModule1Stops([...module1Stops, newStop]);\n    } else {\n      setModule2Stops([...module2Stops, newStop]);\n    }\n  };\n\n  const deleteStop = (module: number, id: string) => {\n    if (module === 1) {\n      setModule1Stops(module1Stops.filter(stop => stop.id !== id));\n    } else {\n       setModule2Stops(module2Stops.filter(stop => stop.id !== id));\n    }\n  };\n\n  const updateStop = (module: number, id: string, field: keyof Omit<ModuleStop, 'id'>, value: string) => {\n     const updater = (stops: ModuleStop[]) => {\n        return stops.map(stop => {\n            if (stop.id === id) {\n                return { ...stop, [field]: value };\n            }\n            return stop;\n        });\n    };\n\n    if (module === 1) {\n        setModule1Stops(updater(module1Stops));\n    } else {\n        setModule2Stops(updater(module2Stops));\n    }\n  };\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          RAPPORT JOURNALIER (Activité TSUD)\n        </CardTitle>\n        <span className=\"text-sm text-muted-foreground\">{formattedDate}</span>\n      </CardHeader>\n\n      <CardContent className=\"p-0 space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Site Selection */}\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"site-select\" className=\"text-foreground\">Site</Label>\n            <Select defaultValue=\"USINE SUD\">\n              <SelectTrigger id=\"site-select\" className=\"w-full\">\n                <SelectValue placeholder=\"Select Site\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"USINE SUD\">USINE SUD</SelectItem>\n                <SelectItem value=\"USINE NORD\">USINE NORD</SelectItem>\n                <SelectItem value=\"USINE CENTRALE\">USINE CENTRALE</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Poste Selection */}\n          <div className=\"space-y-2\">\n            <Label className=\"text-foreground\">Poste</Label>\n            <RadioGroup\n              value={selectedPoste} // Controlled component\n              onValueChange={(value: Poste) => setSelectedPoste(value)}\n              className=\"flex space-x-4 pt-2\"\n            >\n              {POSTE_ORDER.map((poste) => ( // Use defined order\n                <div key={poste} className=\"flex items-center space-x-2\">\n                  <RadioGroupItem value={poste} id={`poste-${poste}`} />\n                  <Label htmlFor={`poste-${poste}`} className=\"font-normal\">\n                    {poste} Poste <span className=\"text-muted-foreground text-xs\">({POSTE_TIMES[poste]})</span>\n                  </Label>\n                </div>\n              ))}\n            </RadioGroup>\n          </div>\n        </div>\n\n\n        {/* Module 1 Section */}\n        <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"font-semibold text-lg text-foreground\">Module 1 - Arrêts</h3>\n            <Button variant=\"link\" className=\"text-primary text-sm p-0 h-auto\" onClick={() => addStop(1)}>\n              + Ajouter Arrêt\n            </Button>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader className=\"bg-muted/50\">\n                <TableRow>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[120px]\">\n                    Durée (ex: 1h 30)\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                    Nature\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[100px]\">\n                    HM\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[100px]\">\n                    HA\n                  </TableHead>\n                  <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {module1Stops.map((stop) => (\n                  <TableRow key={stop.id} className=\"hover:bg-muted/50\">\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.duration}\n                        placeholder=\"ex: 1h 30\"\n                        onChange={(e) =>\n                          updateStop(1, stop.id, \"duration\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.nature}\n                        onChange={(e) =>\n                          updateStop(1, stop.id, \"nature\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.hm}\n                        onChange={(e) => updateStop(1, stop.id, \"hm\", e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.ha}\n                        onChange={(e) => updateStop(1, stop.id, \"ha\", e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2 text-right\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteStop(1, stop.id)}\n                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                        <span className=\"sr-only\">Supprimer</span>\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                 {module1Stops.length === 0 && (\n                    <TableRow>\n                        <TableCell colSpan={5} className=\"text-center text-muted-foreground p-4\">\n                            Aucun arrêt ajouté pour le Module 1.\n                        </TableCell>\n                    </TableRow>\n                 )}\n              </TableBody>\n            </Table>\n          </div>\n           <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n              Total Arrêts Module 1: <strong>{formatMinutesToHoursMinutes(module1TotalDowntime)}</strong>\n           </div>\n        </div>\n\n        {/* Module 2 Section */}\n         <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"font-semibold text-lg text-foreground\">Module 2 - Arrêts</h3>\n            <Button variant=\"link\" className=\"text-primary text-sm p-0 h-auto\" onClick={() => addStop(2)}>\n              + Ajouter Arrêt\n            </Button>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n             <Table>\n               <TableHeader className=\"bg-muted/50\">\n                <TableRow>\n                   <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[120px]\">\n                    Durée (ex: 1h 30)\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                    Nature\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[100px]\">\n                    HM\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[100px]\">\n                    HA\n                  </TableHead>\n                  <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {module2Stops.map((stop) => (\n                  <TableRow key={stop.id} className=\"hover:bg-muted/50\">\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.duration}\n                        placeholder=\"ex: 1h 30\"\n                        onChange={(e) =>\n                          updateStop(2, stop.id, \"duration\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.nature}\n                        onChange={(e) =>\n                          updateStop(2, stop.id, \"nature\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.hm}\n                        onChange={(e) => updateStop(2, stop.id, \"hm\", e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.ha}\n                        onChange={(e) => updateStop(2, stop.id, \"ha\", e.target.value)}\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2 text-right\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteStop(2, stop.id)}\n                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                         <span className=\"sr-only\">Supprimer</span>\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                {module2Stops.length === 0 && (\n                    <TableRow>\n                        <TableCell colSpan={5} className=\"text-center text-muted-foreground p-4\">\n                            Aucun arrêt ajouté pour le Module 2.\n                        </TableCell>\n                    </TableRow>\n                 )}\n              </TableBody>\n            </Table>\n          </div>\n           <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n              Total Arrêts Module 2: <strong>{formatMinutesToHoursMinutes(module2TotalDowntime)}</strong>\n           </div>\n        </div>\n\n        {/* Totaux Section */}\n        <div className=\"p-4 border rounded-lg bg-muted/30\">\n          <h3 className=\"font-semibold text-lg text-foreground mb-4\">Totaux Temps de Fonctionnement (8h - Arrêts)</h3>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"total-m1-operating\" className=\"text-sm text-muted-foreground\">\n                Module 1 Fonctionnement\n              </Label>\n              <Input id=\"total-m1-operating\" type=\"text\" value={formatMinutesToHoursMinutes(module1OperatingTime)} className=\"h-9 bg-input font-medium\" readOnly />\n            </div>\n             <div className=\"space-y-1\">\n              <Label htmlFor=\"total-m2-operating\" className=\"text-sm text-muted-foreground\">\n                Module 2 Fonctionnement\n              </Label>\n              <Input id=\"total-m2-operating\" type=\"text\" value={formatMinutesToHoursMinutes(module2OperatingTime)} className=\"h-9 bg-input font-medium\" readOnly />\n            </div>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"mt-8 flex justify-end space-x-3\">\n          <Button variant=\"outline\">Enregistrer Brouillon</Button>\n          <Button>Soumettre Rapport</Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2047, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/ActivityReport.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Trash } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\n\ninterface ActivityReportProps {\n  currentDate: string;\n}\n\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\ninterface Stop {\n  id: string;\n  duration: string;\n  nature: string;\n  hm: string;\n  ha: string;\n}\n\ninterface Counter {\n    id: string;\n    post: string;\n    start: string;\n    end: string;\n    total: string;\n}\n\nexport function ActivityReport({ currentDate }: ActivityReportProps) {\n  const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Default to 1er Poste\n\n  const [stops, setStops] = useState<Stop[]>([\n    { id: crypto.randomUUID(), duration: \"4:1o\", nature: \"Manque Produit\", hm: \"66H\", ha: \"17H\" },\n    {\n      id: crypto.randomUUID(),\n      duration: \"4:1v\",\n      nature: \"Attent Saturation SiCo\",\n      hm: \"55\",\n      ha: \"15H\",\n    },\n  ]);\n\n  const [counters, setCounters] = useState<Counter[]>([\n    { id: crypto.randomUUID(), post: \"Poste3\", start: \"93h41r\", end: \"9395,30\", total: \"0:45\" },\n  ]);\n\n  const addStop = () => {\n    setStops([...stops, { id: crypto.randomUUID(), duration: \"\", nature: \"\", hm: \"\", ha: \"\" }]);\n  };\n\n  const addCounter = () => {\n    setCounters([...counters, { id: crypto.randomUUID(), post: \"\", start: \"\", end: \"\", total: \"\" }]);\n  };\n\n  const deleteStop = (id: string) => {\n    setStops(stops.filter(stop => stop.id !== id));\n  };\n\n  const deleteCounter = (id: string) => {\n    setCounters(counters.filter(counter => counter.id !== id));\n  };\n\n const updateStop = (id: string, field: keyof Omit<Stop, 'id'>, value: string) => {\n    setStops(stops.map(stop => stop.id === id ? { ...stop, [field]: value } : stop));\n };\n\n const updateCounter = (id: string, field: keyof Omit<Counter, 'id'>, value: string) => {\n    setCounters(counters.map(counter => counter.id === id ? { ...counter, [field]: value } : counter));\n };\n\n\n  return (\n    <Card className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b dark:border-gray-700 mb-6\">\n        <CardTitle className=\"text-xl font-bold text-gray-800 dark:text-gray-200\">\n          RAPPORT D'ACTIVITÉ TNR\n        </CardTitle>\n        <span className=\"text-sm text-gray-500 dark:text-gray-400\">{currentDate}</span>\n      </CardHeader>\n\n      <CardContent className=\"p-0\">\n         {/* Poste Selection */}\n         <div className=\"mb-6 space-y-2\">\n            <Label className=\"text-foreground dark:text-gray-300\">Poste</Label>\n            <RadioGroup\n              value={selectedPoste} // Controlled component\n              onValueChange={(value: Poste) => setSelectedPoste(value)}\n              className=\"flex flex-wrap space-x-4 pt-2\"\n            >\n              {POSTE_ORDER.map((poste) => ( // Use defined order\n                <div key={poste} className=\"flex items-center space-x-2 mb-2\">\n                  <RadioGroupItem value={poste} id={`activity-poste-${poste}`} />\n                  <Label htmlFor={`activity-poste-${poste}`} className=\"font-normal text-foreground dark:text-gray-300\">\n                    {poste} Poste <span className=\"text-muted-foreground dark:text-gray-400 text-xs\">({POSTE_TIMES[poste]})</span>\n                  </Label>\n                </div>\n              ))}\n            </RadioGroup>\n          </div>\n\n        <div className=\"mb-6\">\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">Arrêts</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse\">\n              <thead className=\"bg-gray-100 dark:bg-gray-700\">\n                <tr>\n                  <th className=\"p-2 text-left text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Durée\n                  </th>\n                  <th className=\"p-2 text-left text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Nature\n                  </th>\n                  <th className=\"p-2 text-left text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    HM\n                  </th>\n                  <th className=\"p-2 text-left text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    HA\n                  </th>\n                  <th className=\"p-2 text-right text-sm font-medium text-gray-600 dark:text-gray-400 w-[50px]\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {stops.map((stop) => (\n                  <tr key={stop.id} className=\"border-b dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700/50\">\n                    <td className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-24 h-8 text-sm\"\n                        value={stop.duration}\n                        onChange={(e) =>\n                          updateStop(stop.id, \"duration\", e.target.value)\n                        }\n                      />\n                    </td>\n                    <td className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.nature}\n                        onChange={(e) =>\n                          updateStop(stop.id, \"nature\", e.target.value)\n                        }\n                      />\n                    </td>\n                    <td className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-20 h-8 text-sm\"\n                        value={stop.hm}\n                        onChange={(e) => updateStop(stop.id, \"hm\", e.target.value)}\n                      />\n                    </td>\n                    <td className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-20 h-8 text-sm\"\n                        value={stop.ha}\n                        onChange={(e) => updateStop(stop.id, \"ha\", e.target.value)}\n                      />\n                    </td>\n                    <td className=\"p-2 text-right\">\n                       <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteStop(stop.id)}\n                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                         <span className=\"sr-only\">Supprimer</span>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n                 {stops.length === 0 && (\n                    <tr className=\"border-b dark:border-gray-700\">\n                        <td colSpan={5} className=\"text-center text-muted-foreground dark:text-gray-500 p-4\">\n                            Aucun arrêt ajouté.\n                        </td>\n                    </tr>\n                 )}\n              </tbody>\n            </table>\n          </div>\n          <Button variant=\"link\" onClick={addStop} className=\"text-primary dark:text-blue-400 text-sm mt-2 p-0 h-auto\">\n            + Ajouter Arrêt\n          </Button>\n        </div>\n\n        <div className=\"mb-6\">\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">Compteurs Vibreurs</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse\">\n              <thead className=\"bg-gray-100 dark:bg-gray-700\">\n                <tr>\n                  <th className=\"p-2 text-left text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Poste\n                  </th>\n                  <th className=\"p-2 text-left text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Début\n                  </th>\n                  <th className=\"p-2 text-left text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Fin\n                  </th>\n                  <th className=\"p-2 text-left text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    Total\n                  </th>\n                  <th className=\"p-2 text-right text-sm font-medium text-gray-600 dark:text-gray-400 w-[50px]\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {counters.map((counter) => (\n                  <tr key={counter.id} className=\"border-b dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700/50\">\n                    <td className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={counter.post}\n                        onChange={(e) =>\n                          updateCounter(counter.id, \"post\", e.target.value)\n                        }\n                      />\n                    </td>\n                    <td className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={counter.start}\n                        onChange={(e) =>\n                          updateCounter(counter.id, \"start\", e.target.value)\n                        }\n                      />\n                    </td>\n                    <td className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                         className=\"w-full h-8 text-sm\"\n                        value={counter.end}\n                        onChange={(e) =>\n                          updateCounter(counter.id, \"end\", e.target.value)\n                        }\n                      />\n                    </td>\n                    <td className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                         className=\"w-24 h-8 text-sm\"\n                        value={counter.total}\n                        onChange={(e) =>\n                          updateCounter(counter.id, \"total\", e.target.value)\n                        }\n                      />\n                    </td>\n                    <td className=\"p-2 text-right\">\n                       <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteCounter(counter.id)}\n                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                        <span className=\"sr-only\">Supprimer</span>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n                 {counters.length === 0 && (\n                    <tr className=\"border-b dark:border-gray-700\">\n                        <td colSpan={5} className=\"text-center text-muted-foreground dark:text-gray-500 p-4\">\n                            Aucun compteur ajouté.\n                        </td>\n                    </tr>\n                 )}\n              </tbody>\n            </table>\n          </div>\n          <div className=\"mt-2 flex justify-between items-center\">\n            <Button variant=\"link\" className=\"text-primary dark:text-blue-400 text-sm p-0 h-auto\" onClick={addCounter}>\n              + Ajouter Vibreur\n            </Button>\n            <div className=\"flex items-center\">\n              <span className=\"text-sm text-gray-600 dark:text-gray-400 mr-2\">\n                Total Vibreurs:\n              </span>\n              <Input type=\"text\" className=\"w-24 h-8 text-sm\" defaultValue=\"06H55\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mb-6\">\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">Stock</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg border dark:border-gray-600\">\n              <h4 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">PARK 1</h4>\n              <div className=\"grid grid-cols-3 gap-2\">\n                <div>\n                  <label className=\"block text-gray-600 dark:text-gray-400 text-xs mb-1\">\n                    NORMAL\n                  </label>\n                  <Input type=\"text\" className=\"h-8 text-sm\"/>\n                </div>\n                <div>\n                  <label className=\"block text-gray-600 dark:text-gray-400 text-xs mb-1\">\n                    OCEANE\n                  </label>\n                  <Input type=\"text\" className=\"h-8 text-sm\"/>\n                </div>\n                <div>\n                  <label className=\"block text-gray-600 dark:text-gray-400 text-xs mb-1\">\n                    PB30\n                  </label>\n                  <Input type=\"text\" className=\"h-8 text-sm\"/>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-3 rounded-lg border dark:border-gray-600\">\n              <h4 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">PARK 2</h4>\n              <div className=\"grid grid-cols-3 gap-2\">\n                <div>\n                  <label className=\"block text-gray-600 dark:text-gray-400 text-xs mb-1\">\n                    NORMAL\n                  </label>\n                  <Input type=\"text\" className=\"h-8 text-sm\"/>\n                </div>\n                <div>\n                  <label className=\"block text-gray-600 dark:text-gray-400 text-xs mb-1\">\n                    OCEANE\n                  </label>\n                  <Input type=\"text\" className=\"h-8 text-sm\"/>\n                </div>\n                <div>\n                  <label className=\"block text-gray-600 dark:text-gray-400 text-xs mb-1\">\n                    PB30\n                  </label>\n                  <Input type=\"text\" className=\"h-8 text-sm\"/>\n                </div>\n              </div>\n              <div className=\"mt-2\">\n                <label className=\"block text-gray-600 dark:text-gray-400 text-xs mb-1\">\n                  Poste\n                </label>\n                <Input type=\"text\" className=\"h-8 text-sm\" defaultValue=\"3+1+2\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-6 flex justify-end space-x-3\">\n          <Button variant=\"outline\">Enregistrer</Button>\n          <Button>Soumettre</Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3035, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/TruckTracking.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Table, TableBody, TableCaption, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\n\ninterface TruckTrackingProps {\n  currentDate: string;\n}\n\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\ninterface TruckData {\n    id: string;\n    truckNumber: string;\n    driver: string;\n    counts: string[]; // Array for 15 counts\n    tSud: string;\n    tNord: string;\n    stock: string;\n    total: string;\n    hour: string;\n    location: string;\n}\n\n\nexport function TruckTracking({ currentDate }: TruckTrackingProps) {\n  const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Default to 1er Poste\n\n  const [truckData, setTruckData] = useState<TruckData[]>([\n    {\n      id: crypto.randomUUID(),\n      truckNumber: \"\",\n      driver: \"\",\n      counts: Array(15).fill(\"\"),\n      tSud: \"\",\n      tNord: \"\",\n      stock: \"\",\n      total: \"\", // Should this be calculated?\n      hour: \"\",\n      location: \"\",\n    },\n  ]);\n\n  const addTruck = () => {\n    setTruckData([\n      ...truckData,\n      {\n        id: crypto.randomUUID(),\n        truckNumber: \"\",\n        driver: \"\",\n        counts: Array(15).fill(\"\"),\n        tSud: \"\",\n        tNord: \"\",\n        stock: \"\",\n        total: \"\",\n        hour: \"\",\n        location: \"\",\n      },\n    ]);\n  };\n\n const updateTruckData = (\n    id: string,\n    field: keyof Omit<TruckData, 'id' | 'counts'> | 'counts', // Allow 'counts' specifically\n    value: string,\n    countIndex?: number // Only needed if field is 'counts'\n  ) => {\n    setTruckData(prevData =>\n      prevData.map(truck => {\n        if (truck.id === id) {\n          if (field === 'counts' && countIndex !== undefined) {\n            const newCounts = [...truck.counts];\n            newCounts[countIndex] = value;\n            return { ...truck, counts: newCounts };\n          } else if (field !== 'counts') {\n             // Create a temporary mutable copy for type safety\n             let mutableTruck: Partial<TruckData> = { ...truck };\n             // Assign value using the field name as key\n             (mutableTruck as any)[field] = value;\n             // Return the updated object\n             return mutableTruck as TruckData;\n          }\n        }\n        return truck;\n      })\n    );\n  };\n\n\n   const deleteTruck = (id: string) => {\n        setTruckData(truckData.filter(truck => truck.id !== id));\n    };\n\n  // Example calculation for total (sum of counts, tSud, tNord, stock)\n    const calculateTotal = (truck: TruckData): string => {\n        const countsSum = truck.counts.reduce((acc, count) => acc + (parseInt(count, 10) || 0), 0);\n        const tSudNum = parseInt(truck.tSud, 10) || 0;\n        const tNordNum = parseInt(truck.tNord, 10) || 0;\n        const stockNum = parseInt(truck.stock, 10) || 0;\n        return (countsSum + tSudNum + tNordNum + stockNum).toString();\n    };\n\n    // Update total whenever relevant fields change\n    // This could be done within updateTruckData or using useEffect\n    // For simplicity, let's display the calculated total directly in the table\n\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          POINTAGE DES CAMIONS\n        </CardTitle>\n        <span className=\"text-sm text-muted-foreground\">{currentDate}</span>\n      </CardHeader>\n\n      <CardContent className=\"p-0\">\n\n        {/* Poste Selection */}\n         <div className=\"mb-6 space-y-2\">\n            <Label className=\"text-foreground\">Poste</Label>\n            <RadioGroup\n              value={selectedPoste} // Controlled component\n              onValueChange={(value: Poste) => setSelectedPoste(value)}\n              className=\"flex flex-wrap space-x-4 pt-2\"\n            >\n              {POSTE_ORDER.map((poste) => ( // Use defined order\n                <div key={poste} className=\"flex items-center space-x-2 mb-2\">\n                  <RadioGroupItem value={poste} id={`truck-poste-${poste}`} />\n                  <Label htmlFor={`truck-poste-${poste}`} className=\"font-normal text-foreground\">\n                    {poste} Poste <span className=\"text-muted-foreground text-xs\">({POSTE_TIMES[poste]})</span>\n                  </Label>\n                </div>\n              ))}\n            </RadioGroup>\n          </div>\n\n\n        <div className=\"mb-6\">\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-3\">\n            Informations Générales\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <Label htmlFor=\"direction\" className=\"block text-muted-foreground text-sm mb-1\">\n                Direction\n              </Label>\n              <Input id=\"direction\" type=\"text\" defaultValue=\"phosboucraa\" className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"division\" className=\"block text-muted-foreground text-sm mb-1\">\n                Division\n              </Label>\n              <Input id=\"division\" type=\"text\" defaultValue=\"Extraction\" className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"oib-ee\" className=\"block text-muted-foreground text-sm mb-1\">OIB/EE</Label>\n              <Input id=\"oib-ee\" type=\"text\" className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"mine\" className=\"block text-muted-foreground text-sm mb-1\">Mine</Label>\n              <Input id=\"mine\" type=\"text\" className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"sortie\" className=\"block text-muted-foreground text-sm mb-1\">Sortie</Label>\n              <Input id=\"sortie\" type=\"text\" className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"distance\" className=\"block text-muted-foreground text-sm mb-1\">\n                Distance\n              </Label>\n              <Input id=\"distance\" type=\"text\" className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"qualite\" className=\"block text-muted-foreground text-sm mb-1\">\n                Qualité\n              </Label>\n              <Input id=\"qualite\" type=\"text\" className=\"h-9\"/>\n            </div>\n             <div className=\"md:col-span-2\">\n              <Label htmlFor=\"machine-engins-track\" className=\"block text-muted-foreground text-sm mb-1\">\n                Machine ou Engins\n              </Label>\n              <Input id=\"machine-engins-track\" type=\"text\" className=\"h-9\"/>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mb-6\">\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-3\">\n            Tableau de Pointage\n          </h3>\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader className=\"bg-muted/50\">\n                <TableRow>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground sticky left-0 bg-muted/50 z-10 w-[80px]\">\n                    N° Camion\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground sticky left-[80px] bg-muted/50 z-10 w-[150px]\">\n                    Conducteur\n                  </TableHead>\n                  {/* Count Headers */}\n                  {Array.from({ length: 15 }, (_, i) => (\n                    <TableHead\n                      key={i}\n                      className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[50px]\"\n                    >\n                      {i + 1}\n                    </TableHead>\n                  ))}\n                  {/* Summary Headers */}\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[60px]\">\n                    T.sud\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[60px]\">\n                    T.nord\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[60px]\">\n                    Stock\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[70px] font-semibold\">\n                    Total\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[70px]\">\n                    Heure\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[80px]\">\n                    Lieu\n                  </TableHead>\n                   <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground sticky right-0 bg-muted/50 z-10 w-[50px]\">\n                    {/* Actions */}\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {truckData.map((truck) => (\n                  <TableRow key={truck.id} className=\"border-b hover:bg-muted/50 h-10\">\n                    {/* Sticky Truck Number */}\n                    <TableCell className=\"p-1 sticky left-0 bg-card hover:bg-muted/50 z-10\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm min-w-[60px]\"\n                        value={truck.truckNumber}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"truckNumber\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    {/* Sticky Driver */}\n                     <TableCell className=\"p-1 sticky left-[80px] bg-card hover:bg-muted/50 z-10\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm min-w-[130px]\"\n                        value={truck.driver}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"driver\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    {/* Count Inputs */}\n                    {truck.counts.map((count, i) => (\n                      <TableCell key={i} className=\"p-1\">\n                        <Input\n                          type=\"text\" // Use type=\"number\" for better input validation?\n                          inputMode=\"numeric\" // Hint for mobile keyboards\n                          className=\"w-full h-8 text-sm text-center min-w-[40px]\"\n                          value={count}\n                          onChange={(e) =>\n                            updateTruckData(truck.id, \"counts\", e.target.value, i)\n                          }\n                        />\n                      </TableCell>\n                    ))}\n                    {/* Summary Inputs */}\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\" inputMode=\"numeric\"\n                        className=\"w-full h-8 text-sm text-center min-w-[50px]\"\n                        value={truck.tSud}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"tSud\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\" inputMode=\"numeric\"\n                        className=\"w-full h-8 text-sm text-center min-w-[50px]\"\n                        value={truck.tNord}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"tNord\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\" inputMode=\"numeric\"\n                        className=\"w-full h-8 text-sm text-center min-w-[50px]\"\n                        value={truck.stock}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"stock\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    {/* Calculated Total (Read Only) */}\n                     <TableCell className=\"p-1 font-semibold text-center align-middle\">\n                         {calculateTotal(truck)}\n                       {/* Or use a read-only input\n                       <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm text-center min-w-[60px] bg-muted/70 font-semibold\"\n                        value={calculateTotal(truck)}\n                        readOnly\n                        tabIndex={-1} // Prevent tabbing into read-only\n                      /> */}\n                    </TableCell>\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\" // Consider type=\"time\"?\n                        className=\"w-full h-8 text-sm text-center min-w-[60px]\"\n                        value={truck.hour}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"hour\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm text-center min-w-[70px]\"\n                        value={truck.location}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"location\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                     {/* Delete Button */}\n                     <TableCell className=\"p-1 sticky right-0 bg-card hover:bg-muted/50 z-10\">\n                        <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                            onClick={() => deleteTruck(truck.id)}\n                            >\n                             <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-trash-2\"><path d=\"M3 6h18\"/><path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"/><path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"/><line x1=\"10\" x2=\"10\" y1=\"11\" y2=\"17\"/><line x1=\"14\" x2=\"14\" y1=\"11\" y2=\"17\"/></svg>\n                            <span className=\"sr-only\">Supprimer Camion</span>\n                        </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                {truckData.length === 0 && (\n                     <tr>\n                        <td colSpan={21} className=\"text-center text-muted-foreground p-4\">\n                            Aucun camion ajouté. Cliquez sur \"+ Ajouter Camion\" pour commencer.\n                        </td>\n                    </tr>\n                )}\n              </TableBody>\n               {/* Add a footer for column totals if needed */}\n                 {/* <TableFooter>\n                    <TableRow>\n                       <TableCell colSpan={2} className=\"font-semibold sticky left-0 bg-muted/80 z-10\">Total</TableCell>\n                       {Array.from({ length: 15 }).map((_, i) => <TableCell key={`foot-count-${i}`} className=\"text-center font-semibold\">Sum {i+1}</TableCell>)}\n                       <TableCell className=\"text-center font-semibold\">Sum Sud</TableCell>\n                       <TableCell className=\"text-center font-semibold\">Sum Nord</TableCell>\n                       <TableCell className=\"text-center font-semibold\">Sum Stock</TableCell>\n                       <TableCell className=\"text-center font-semibold\">Grand Total</TableCell>\n                       <TableCell colSpan={2}></TableCell>\n                       <TableCell className=\"sticky right-0 bg-muted/80 z-10\"></TableCell>\n                    </TableRow>\n                 </TableFooter> */}\n            </Table>\n          </div>\n        </div>\n        <Button onClick={addTruck} variant=\"outline\" size=\"sm\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"lucide lucide-plus mr-2 h-4 w-4\"><path d=\"M5 12h14\"/><path d=\"M12 5v14\"/></svg>\n            Ajouter Camion\n        </Button>\n        <div className=\"mt-6 flex justify-end space-x-3\">\n          <Button variant=\"outline\">Enregistrer</Button>\n          <Button>Soumettre</Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAgBA,gCAAgC;AAChC,MAAM,cAAqC;IACzC,QAAQ;IACR,OAAO;IACP,QAAQ;AACV;AACA,MAAM,cAAuB;IAAC;IAAQ;IAAO;CAAO;AAgB7C,SAAS,cAAc,EAAE,WAAW,EAAsB;IAC/D,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,QAAQ,uBAAuB;IAEzF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;QACtD;YACE,IAAI,OAAO,UAAU;YACrB,aAAa;YACb,QAAQ;YACR,QAAQ,MAAM,IAAI,IAAI,CAAC;YACvB,MAAM;YACN,OAAO;YACP,OAAO;YACP,OAAO;YACP,MAAM;YACN,UAAU;QACZ;KACD;IAED,MAAM,WAAW;QACf,aAAa;eACR;YACH;gBACE,IAAI,OAAO,UAAU;gBACrB,aAAa;gBACb,QAAQ;gBACR,QAAQ,MAAM,IAAI,IAAI,CAAC;gBACvB,MAAM;gBACN,OAAO;gBACP,OAAO;gBACP,OAAO;gBACP,MAAM;gBACN,UAAU;YACZ;SACD;IACH;IAED,MAAM,kBAAkB,CACrB,IACA,OACA,OACA,WAAoB,mCAAmC;;QAEvD,aAAa,CAAA,WACX,SAAS,GAAG,CAAC,CAAA;gBACX,IAAI,MAAM,EAAE,KAAK,IAAI;oBACnB,IAAI,UAAU,YAAY,eAAe,WAAW;wBAClD,MAAM,YAAY;+BAAI,MAAM,MAAM;yBAAC;wBACnC,SAAS,CAAC,WAAW,GAAG;wBACxB,OAAO;4BAAE,GAAG,KAAK;4BAAE,QAAQ;wBAAU;oBACvC,OAAO,IAAI,UAAU,UAAU;wBAC5B,kDAAkD;wBAClD,IAAI,eAAmC;4BAAE,GAAG,KAAK;wBAAC;wBAClD,2CAA2C;wBAC1C,YAAoB,CAAC,MAAM,GAAG;wBAC/B,4BAA4B;wBAC5B,OAAO;oBACV;gBACF;gBACA,OAAO;YACT;IAEJ;IAGC,MAAM,cAAc,CAAC;QAChB,aAAa,UAAU,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;IACxD;IAEF,oEAAoE;IAClE,MAAM,iBAAiB,CAAC;QACpB,MAAM,YAAY,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,CAAC,SAAS,OAAO,OAAO,CAAC,GAAG;QACxF,MAAM,UAAU,SAAS,MAAM,IAAI,EAAE,OAAO;QAC5C,MAAM,WAAW,SAAS,MAAM,KAAK,EAAE,OAAO;QAC9C,MAAM,WAAW,SAAS,MAAM,KAAK,EAAE,OAAO;QAC9C,OAAO,CAAC,YAAY,UAAU,WAAW,QAAQ,EAAE,QAAQ;IAC/D;IAEA,+CAA+C;IAC/C,+DAA+D;IAC/D,2EAA2E;IAG7E,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAoB;;;;;;kCAGzC,8OAAC;wBAAK,WAAU;kCAAiC;;;;;;;;;;;;0BAGnD,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCAGpB,8OAAC;wBAAI,WAAU;;0CACZ,8OAAC,iIAAA,CAAA,QAAK;gCAAC,WAAU;0CAAkB;;;;;;0CACnC,8OAAC,0IAAA,CAAA,aAAU;gCACT,OAAO;gCACP,eAAe,CAAC,QAAiB,iBAAiB;gCAClD,WAAU;0CAET,YAAY,GAAG,CAAC,CAAC,sBAChB,8OAAC;wCAAgB,WAAU;;0DACzB,8OAAC,0IAAA,CAAA,iBAAc;gDAAC,OAAO;gDAAO,IAAI,CAAC,YAAY,EAAE,OAAO;;;;;;0DACxD,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAS,CAAC,YAAY,EAAE,OAAO;gDAAE,WAAU;;oDAC/C;oDAAM;kEAAO,8OAAC;wDAAK,WAAU;;4DAAgC;4DAAE,WAAW,CAAC,MAAM;4DAAC;;;;;;;;;;;;;;uCAH7E;;;;;;;;;;;;;;;;kCAWlB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAoD;;;;;;0CAGlE,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAY,WAAU;0DAA2C;;;;;;0DAGhF,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAY,MAAK;gDAAO,cAAa;gDAAc,WAAU;;;;;;;;;;;;kDAEzE,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAW,WAAU;0DAA2C;;;;;;0DAG/E,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAW,MAAK;gDAAO,cAAa;gDAAa,WAAU;;;;;;;;;;;;kDAEvE,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAS,WAAU;0DAA2C;;;;;;0DAC7E,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAS,MAAK;gDAAO,WAAU;;;;;;;;;;;;kDAE3C,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAO,WAAU;0DAA2C;;;;;;0DAC3E,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAO,MAAK;gDAAO,WAAU;;;;;;;;;;;;kDAEzC,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAS,WAAU;0DAA2C;;;;;;0DAC7E,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAS,MAAK;gDAAO,WAAU;;;;;;;;;;;;kDAE3C,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAW,WAAU;0DAA2C;;;;;;0DAG/E,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAW,MAAK;gDAAO,WAAU;;;;;;;;;;;;kDAE7C,8OAAC;;0DACC,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAU,WAAU;0DAA2C;;;;;;0DAG9E,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAU,MAAK;gDAAO,WAAU;;;;;;;;;;;;kDAE3C,8OAAC;wCAAI,WAAU;;0DACd,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;gDAAuB,WAAU;0DAA2C;;;;;;0DAG3F,8OAAC,iIAAA,CAAA,QAAK;gDAAC,IAAG;gDAAuB,MAAK;gDAAO,WAAU;;;;;;;;;;;;;;;;;;;;;;;;kCAK7D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAoD;;;;;;0CAGlE,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,iIAAA,CAAA,QAAK;;sDACJ,8OAAC,iIAAA,CAAA,cAAW;4CAAC,WAAU;sDACrB,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;kEACP,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAoG;;;;;;kEAGzH,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;kEAA0G;;;;;;oDAI9H,MAAM,IAAI,CAAC;wDAAE,QAAQ;oDAAG,GAAG,CAAC,GAAG,kBAC9B,8OAAC,iIAAA,CAAA,YAAS;4DAER,WAAU;sEAET,IAAI;2DAHA;;;;;kEAOT,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAqE;;;;;;kEAG1F,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAqE;;;;;;kEAG1F,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAqE;;;;;;kEAG1F,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAmF;;;;;;kEAGxG,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAqE;;;;;;kEAG1F,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;kEAAqE;;;;;;kEAGzF,8OAAC,iIAAA,CAAA,YAAS;wDAAC,WAAU;;;;;;;;;;;;;;;;;sDAK1B,8OAAC,iIAAA,CAAA,YAAS;;gDACP,UAAU,GAAG,CAAC,CAAC,sBACd,8OAAC,iIAAA,CAAA,WAAQ;wDAAgB,WAAU;;0EAEjC,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EACnB,cAAA,8OAAC,iIAAA,CAAA,QAAK;oEACJ,MAAK;oEACL,WAAU;oEACV,OAAO,MAAM,WAAW;oEACxB,UAAU,CAAC,IACT,gBAAgB,MAAM,EAAE,EAAE,eAAe,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;0EAK5D,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EACpB,cAAA,8OAAC,iIAAA,CAAA,QAAK;oEACJ,MAAK;oEACL,WAAU;oEACV,OAAO,MAAM,MAAM;oEACnB,UAAU,CAAC,IACT,gBAAgB,MAAM,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;4DAKvD,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,kBACxB,8OAAC,iIAAA,CAAA,YAAS;oEAAS,WAAU;8EAC3B,cAAA,8OAAC,iIAAA,CAAA,QAAK;wEACJ,MAAK,OAAO,iDAAiD;;wEAC7D,WAAU,UAAU,4BAA4B;;wEAChD,WAAU;wEACV,OAAO;wEACP,UAAU,CAAC,IACT,gBAAgB,MAAM,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE;;;;;;mEAP1C;;;;;0EAalB,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EACnB,cAAA,8OAAC,iIAAA,CAAA,QAAK;oEACJ,MAAK;oEAAO,WAAU;oEACtB,WAAU;oEACV,OAAO,MAAM,IAAI;oEACjB,UAAU,CAAC,IACT,gBAAgB,MAAM,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;0EAItD,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EACnB,cAAA,8OAAC,iIAAA,CAAA,QAAK;oEACJ,MAAK;oEAAO,WAAU;oEACtB,WAAU;oEACV,OAAO,MAAM,KAAK;oEAClB,UAAU,CAAC,IACT,gBAAgB,MAAM,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;0EAIvD,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EACnB,cAAA,8OAAC,iIAAA,CAAA,QAAK;oEACJ,MAAK;oEAAO,WAAU;oEACtB,WAAU;oEACV,OAAO,MAAM,KAAK;oEAClB,UAAU,CAAC,IACT,gBAAgB,MAAM,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;0EAKtD,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EAChB,eAAe;;;;;;0EAUrB,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EACnB,cAAA,8OAAC,iIAAA,CAAA,QAAK;oEACJ,MAAK,OAAO,wBAAwB;;oEACpC,WAAU;oEACV,OAAO,MAAM,IAAI;oEACjB,UAAU,CAAC,IACT,gBAAgB,MAAM,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;0EAItD,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EACnB,cAAA,8OAAC,iIAAA,CAAA,QAAK;oEACJ,MAAK;oEACL,WAAU;oEACV,OAAO,MAAM,QAAQ;oEACrB,UAAU,CAAC,IACT,gBAAgB,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;0EAKzD,8OAAC,iIAAA,CAAA,YAAS;gEAAC,WAAU;0EAClB,cAAA,8OAAC,kIAAA,CAAA,SAAM;oEACH,SAAQ;oEACR,MAAK;oEACL,WAAU;oEACV,SAAS,IAAM,YAAY,MAAM,EAAE;;sFAElC,8OAAC;4EAAI,OAAM;4EAA6B,OAAM;4EAAK,QAAO;4EAAK,SAAQ;4EAAY,MAAK;4EAAO,QAAO;4EAAe,aAAY;4EAAI,eAAc;4EAAQ,gBAAe;4EAAQ,WAAU;;8FAAwB,8OAAC;oFAAK,GAAE;;;;;;8FAAW,8OAAC;oFAAK,GAAE;;;;;;8FAAyC,8OAAC;oFAAK,GAAE;;;;;;8FAAsC,8OAAC;oFAAK,IAAG;oFAAK,IAAG;oFAAK,IAAG;oFAAK,IAAG;;;;;;8FAAM,8OAAC;oFAAK,IAAG;oFAAK,IAAG;oFAAK,IAAG;oFAAK,IAAG;;;;;;;;;;;;sFAC/Y,8OAAC;4EAAK,WAAU;sFAAU;;;;;;;;;;;;;;;;;;uDA7GrB,MAAM,EAAE;;;;;gDAkHxB,UAAU,MAAM,KAAK,mBACjB,8OAAC;8DACE,cAAA,8OAAC;wDAAG,SAAS;wDAAI,WAAU;kEAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAsBnF,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAU,SAAQ;wBAAU,MAAK;;0CAC9C,8OAAC;gCAAI,OAAM;gCAA6B,OAAM;gCAAK,QAAO;gCAAK,SAAQ;gCAAY,MAAK;gCAAO,QAAO;gCAAe,aAAY;gCAAI,eAAc;gCAAQ,gBAAe;gCAAQ,WAAU;;kDAAkC,8OAAC;wCAAK,GAAE;;;;;;kDAAY,8OAAC;wCAAK,GAAE;;;;;;;;;;;;4BAAkB;;;;;;;kCAGhR,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;0CAAU;;;;;;0CAC1B,8OAAC,kIAAA,CAAA,SAAM;0CAAC;;;;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}},
    {"offset": {"line": 3959, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/R0Report.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from \"react\"; // Import useEffect\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\n\ninterface R0ReportProps {\n  currentDate: string;\n}\n\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\n// Define types for form data sections\ninterface RepartitionItem {\n  chantier: string;\n  temps: string;\n  imputation: string;\n}\n\n// Define type for Index Compteur per Poste\ninterface IndexCompteurPoste {\n    debut: string;\n    fin: string;\n}\n\ninterface FormData {\n  entree: string;\n  secteur: string;\n  rapportNo: string;\n  machineEngins: string;\n  sa: string;\n  unite: string;\n  indexCompteurs: IndexCompteurPoste[]; // Array for debut/fin per poste\n  shifts: string[]; // Assuming shifts corresponds to postes 1er, 2eme, 3eme\n  ventilation: { code: number; label: string; duree: string }[]; // Updated ventilation structure\n  exploitation: Record<string, string>; // Use a record for exploitation data\n  bulls: string[]; // Corresponds to 1er, 2eme, 3eme D manque bull - NOW USED FOR DISPLAYING GROSS HOURS\n  repartitionTravail: RepartitionItem[];\n  tricone: {\n    pose: string;\n    depose: string;\n    causeDepose: string;\n    indexCompteur: string; // Added index compteur for Tricone\n  };\n  gasoil: {\n    lieuAppoint: string;\n    indexCompteur: string; // Specific index for gasoil\n    quantiteDelivree: string;\n  };\n  personnel: {\n    conducteur: string;\n    graisseur: string;\n    matricules: string;\n  };\n  machineMarque: string;\n  machineSerie: string;\n  machineType: string;\n  machineDiametre: string;\n}\n\n// Sample data structure based on user input (assuming this structure)\n const ventilationData = [\n    { code: 121, label: \"ARRET CARREAU INDUSTRIEL\" },\n    { code: 122, label: \"COUPURE GENERALE DU COURANT\" },\n    { code: 123, label: \"GREVE\" },\n    { code: 124, label: \"INTEMPERIES\" },\n    { code: 125, label: \"STOCKS PLEINS\" },\n    { code: 126, label: \"J. FERIES OU HEBDOMADAIRES\" }, // Corrected FÊRIES to FERIES\n    { code: 127, label: \"ARRET PAR LA CENTRALE (ENERGIE)\" }, // Corrected (E.M.E.) based on latest prompt\n    { code: 230, label: \"CONTROLE\" },\n    { code: 231, label: \"DEFAUT ELEC. (C. CRAME, RESEAU)\" }, // Corrected C.RAME & RESAU\n    { code: 232, label: \"PANNE MECANIQUE\" },\n    { code: 233, label: \"PANNE ELECTRIQUE\" }, // Was PANNE ATELIER in previous data, corrected based on context\n    { code: 234, label: \"INTERVENTION ATELIER PNEUMATIQUE\" },\n    { code: 235, label: \"ENTRETIEN SYSTEMATIQUE\" },\n    { code: 236, label: \"APPOINT (HUILE, GAZOL, EAU)\" }, // Corrected GAZOIL to GAZOL\n    { code: 237, label: \"GRAISSAGE\" },\n    { code: 238, label: \"ARRET ELEC. INSTALLATION FIXES\" },\n    { code: 239, label: \"MANQUE CAMIONS\" },\n    { code: 240, label: \"MANQUE BULL\" },\n    { code: 241, label: \"MANQUE MECANICIEN\" },\n    { code: 242, label: \"MANQUE OUTILS DE TRAVAIL\" },\n    { code: 243, label: \"MACHINE A L'ARRET\" },\n    { code: 244, label: \"PANNE ENGIN DEVANT MACHINE\" },\n    { code: 441, label: \"RELEVE\" },\n    { code: 442, label: \"EXECUTION PLATE FORME\" },\n    { code: 443, label: \"DEPLACEMENT\" },\n    { code: 444, label: \"TIR ET SAUTAGE\" }, // Corrected MISE EN SAUTAGE\n    { code: 445, label: \"MOUV. DE CABLE\" }, // Corrected MOV.\n    { code: 446, label: \"ARRET DECIDE\" },\n    { code: 447, label: \"MANQUE CONDUCTEUR\" },\n    { code: 448, label: \"BRIQUET\" },\n    { code: 449, label: \"PERTES (INTEMPERIES EXCLUES)\" }, // Corrected PISTES\n    { code: 450, label: \"ARRETS MECA. INSTALLATIONS FIXES\" },\n    { code: 451, label: \"TELESCOPAGE\" },\n    // Assuming the last two codes were typos and should be distinct\n    { code: 452, label: \"EXCAVATION PURE\" }, // Previously 452\n    { code: 453, label: \"TERRASSEMENT PUR\" }, // Previously 453\n ];\n\n const exploitationLabels = [\n    \"HEURES COMPTEUR\", // This will be calculated\n    \"METRAGE FORE\",\n    \"NOMBRE DE TROUS FORES\",\n    \"NOMBRE DE VOYAGES\",\n    \"NOMBRE D'ECAPAGES\", // Corrected DECAPAGES\n    \"TONNAGE\",\n    \"NOMBRE T.K.J\", // Corrected T.K.U\n ];\n\n const personnelLabels = [\"CONDUCTEUR\", \"GRAISSEUR\", \"MATRICULES\"];\n\n const causeDeposeOptions = [\n    \"T1 CORPS USE\",\n    \"T2 MOLLETTES USEES\", // Corrected MOLETTES\n    \"T3 MOLLETTES PERDUES\",\n    \"T4 ROULEMENT CASSE\",\n    \"T5 CORPS FISSURE\",\n    \"T6 ROULEMENT COINCE\",\n    \"T7 FILAGE ABIME\",\n    \"T8 TRICONE PERDU\", // Corrected TRONCON PERDU\n ];\n\n\n// Helper function to parse duration strings into minutes\nfunction parseDurationToMinutes(duration: string): number {\n  if (!duration) return 0;\n\n  // Clean the string: remove anything not a digit, H, h, :, ·, M, m\n  // Allow spaces for flexibility e.g., \"1 H 20 M\"\n  const cleaned = duration.replace(/[^0-9Hh:·Mm\\s]/g, '').trim().toUpperCase();\n\n  let hours = 0;\n  let minutes = 0;\n\n  // Match formats like HH:MM, HH·MM, HH H MM M, HH H MM, H:MM, H·MM, H H MM M, H H MM\n  let match = cleaned.match(/^(?:(\\d{1,2})\\s?[H:·]\\s?)?(\\d{1,2})\\s?M?$/);\n   if (match) {\n     hours = match[1] ? parseInt(match[1], 10) : 0;\n     minutes = parseInt(match[2], 10);\n     return (hours * 60) + minutes;\n   }\n\n\n   // Match formats like HH H, H H\n   match = cleaned.match(/^(\\d{1,2})\\s?H$/);\n    if (match) {\n      hours = parseInt(match[1], 10);\n      return hours * 60;\n    }\n\n  // Match only numbers (assume minutes)\n  match = cleaned.match(/^(\\d+)\\s?M?$/);\n  if (match) {\n    minutes = parseInt(match[1], 10);\n    return minutes;\n  }\n\n  console.warn(`Could not parse duration: \"${duration}\"`);\n  return 0; // Return 0 if parsing fails\n}\n\n\n// Helper function to format minutes into HHh MMm string\nfunction formatMinutesToHoursMinutes(totalMinutes: number): string {\n    if (isNaN(totalMinutes) || totalMinutes <= 0) return \"0h 0m\";\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.round(totalMinutes % 60); // Round minutes\n    return `${hours}h ${minutes}m`;\n}\n\n// Helper function to format hours (float) into HHh MMm string\nfunction formatHoursToHoursMinutes(totalHours: number): string {\n    if (isNaN(totalHours) || totalHours <= 0) return \"0h 0m\";\n    const hours = Math.floor(totalHours);\n    const minutes = Math.round((totalHours - hours) * 60);\n    return `${hours}h ${minutes}m`;\n}\n\n\nexport function R0Report({ currentDate }: R0ReportProps) {\n   const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Default to 1er Poste\n   // State to hold calculated gross hours per poste and total\n   const [calculatedHours, setCalculatedHours] = useState<{ poste: number[]; total: number }>({ poste: [0, 0, 0], total: 0 });\n   // State to hold total stop duration in minutes\n   const [totalStopMinutes, setTotalStopMinutes] = useState(0);\n   // State to hold net working hours (total gross hours - total stop hours)\n   const [netWorkingHours, setNetWorkingHours] = useState(0);\n\n  const [formData, setFormData] = useState<FormData>({\n    entree: \"\",\n    secteur: \"\",\n    rapportNo: \"\",\n    machineEngins: \"\",\n    sa: \"\",\n    unite: \"\",\n    indexCompteurs: Array(3).fill(null).map(() => ({ debut: \"\", fin: \"\" })), // Initialize for 3 postes\n    shifts: [\"\", \"\", \"\"], // Corresponds to 1er, 2eme, 3eme D/F times\n    ventilation: ventilationData.map(item => ({ ...item, duree: \"\" })), // Initialize duration for ventilation items\n    exploitation: exploitationLabels.reduce((acc, label) => ({ ...acc, [label]: \"\" }), {}), // Initialize exploitation fields\n    bulls: [\"\", \"\", \"\"], // Corresponds to 1er, 2eme, 3eme - NOW DISPLAYING GROSS HOURS\n    repartitionTravail: Array(3).fill(null).map(() => ({ chantier: \"\", temps: \"\", imputation: \"\" })), // Create distinct objects\n    tricone: {\n      pose: \"\",\n      depose: \"\",\n      causeDepose: \"\",\n      indexCompteur: \"\", // Added field\n    },\n    gasoil: {\n      lieuAppoint: \"\",\n      indexCompteur: \"\", // Gasoil specific index\n      quantiteDelivree: \"\",\n    },\n    personnel: { // Initialize personnel object\n        conducteur: \"\",\n        graisseur: \"\",\n        matricules: \"\",\n    },\n    machineMarque: \"\",\n    machineSerie: \"\",\n    machineType: \"\",\n    machineDiametre: \"\",\n  });\n\n  const handleInputChange = (\n      e: React.ChangeEvent<HTMLInputElement>,\n      section: keyof FormData | 'ventilation' | 'repartitionTravail' | 'tricone' | 'gasoil' | 'shifts' | 'bulls' | 'indexCompteurs' | 'exploitation' | 'personnel',\n      indexOrField?: number | string,\n      fieldOrNestedField?: keyof RepartitionItem | keyof FormData['tricone'] | keyof FormData['gasoil'] | keyof IndexCompteurPoste | keyof FormData['personnel'] // Added personnel keys\n    ) => {\n      const { name, value } = e.target;\n       // Use name attribute for top-level fields if available and section matches a key in FormData\n      const targetName = (name && section in formData && typeof (formData as any)[section] === 'string') ? name : section;\n\n      setFormData(prevData => {\n          let newData = { ...prevData };\n\n          if (section === 'ventilation' && typeof indexOrField === 'number') {\n              const newVentilation = [...newData.ventilation];\n              if (newVentilation[indexOrField]) {\n                 newVentilation[indexOrField] = { ...newVentilation[indexOrField], duree: value };\n                 newData.ventilation = newVentilation;\n              }\n          } else if (section === 'repartitionTravail' && typeof indexOrField === 'number' && fieldOrNestedField && fieldOrNestedField in newData.repartitionTravail[0]) {\n              if (newData.repartitionTravail && newData.repartitionTravail[indexOrField]) {\n                  const newRepartition = [...newData.repartitionTravail];\n                  newRepartition[indexOrField] = { ...newRepartition[indexOrField], [fieldOrNestedField]: value };\n                  newData.repartitionTravail = newRepartition;\n              }\n          } else if (section === 'indexCompteurs' && typeof indexOrField === 'number' && fieldOrNestedField && fieldOrNestedField in newData.indexCompteurs[0]) {\n             if (newData.indexCompteurs && newData.indexCompteurs[indexOrField]) {\n                const newIndexCompteurs = [...newData.indexCompteurs];\n                newIndexCompteurs[indexOrField] = { ...newIndexCompteurs[indexOrField], [fieldOrNestedField as keyof IndexCompteurPoste]: value };\n                newData.indexCompteurs = newIndexCompteurs;\n            }\n          } else if (section === 'tricone' && fieldOrNestedField && typeof fieldOrNestedField === 'string' && fieldOrNestedField in newData.tricone) {\n              newData.tricone = { ...newData.tricone, [fieldOrNestedField as keyof typeof newData.tricone]: value };\n          } else if (section === 'gasoil' && fieldOrNestedField && typeof fieldOrNestedField === 'string' && fieldOrNestedField in newData.gasoil) {\n               newData.gasoil = { ...newData.gasoil, [fieldOrNestedField as keyof typeof newData.gasoil]: value };\n          } else if (section === 'shifts' && typeof indexOrField === 'number') {\n              const newShifts = [...newData.shifts];\n              newShifts[indexOrField] = value;\n              newData.shifts = newShifts;\n          }\n          // NOTE: Removed bulls section handler as it's now display-only\n          // else if (section === 'bulls' && typeof indexOrField === 'number') {\n          //      const newBulls = [...newData.bulls];\n          //     newBulls[indexOrField] = value;\n          //     newData.bulls = newBulls;\n          // }\n          // Handle exploitation fields\n          else if (section === 'exploitation' && typeof indexOrField === 'string' && indexOrField in newData.exploitation) {\n              newData.exploitation = { ...newData.exploitation, [indexOrField]: value };\n          }\n           // Handle personnel fields\n          else if (section === 'personnel' && fieldOrNestedField && typeof fieldOrNestedField === 'string' && fieldOrNestedField in newData.personnel) {\n             newData.personnel = { ...newData.personnel, [fieldOrNestedField as keyof typeof newData.personnel]: value };\n          }\n          // Handle top-level string fields directly\n          else if (typeof targetName === 'string' && targetName in newData && typeof (newData as any)[targetName] === 'string') {\n             (newData as any)[targetName] = value;\n          }\n          else {\n             console.warn(\"Unhandled input change:\", { section, indexOrField, fieldOrNestedField, name, value });\n          }\n          return newData;\n      });\n  };\n\n   const handleSelectChange = (\n      value: string,\n      section: keyof FormData | 'tricone', // Specify sections where select is used\n      field: keyof FormData['tricone'] | keyof FormData['gasoil'] // Allow gasoil fields too\n      // Add other fields if needed\n    ) => {\n     setFormData(prevData => {\n        let newData = { ...prevData };\n        if (section === 'tricone' && field && typeof field === 'string' && field in newData.tricone) {\n            newData.tricone = { ...newData.tricone, [field as keyof typeof newData.tricone]: value };\n        } else if (section === 'gasoil' && field && typeof field === 'string' && field in newData.gasoil) {\n             newData.gasoil = { ...newData.gasoil, [field as keyof typeof newData.gasoil]: value };\n        }\n        // Add other select handlers here if needed\n        return newData;\n     });\n    };\n\n    // Function to calculate working hours from index compteurs\n    const calculateCompteurHours = () => {\n        const posteHours = formData.indexCompteurs.map(compteur => {\n            const debut = parseFloat(compteur.debut);\n            const fin = parseFloat(compteur.fin);\n            if (!isNaN(debut) && !isNaN(fin) && fin >= debut) {\n                return fin - debut;\n            }\n            return 0;\n        });\n        const totalHours = posteHours.reduce((sum, hours) => sum + hours, 0);\n        setCalculatedHours({ poste: posteHours, total: totalHours });\n\n        // Update the 'bulls' array in formData with formatted gross hours for display\n        const formattedGrossHours = posteHours.map(hours => formatHoursToHoursMinutes(hours));\n        setFormData(prevData => ({\n            ...prevData,\n            bulls: formattedGrossHours // Use bulls to display formatted gross hours\n        }));\n    };\n\n    // Function to calculate total stop duration\n    const calculateTotalStops = () => {\n        const totalMinutes = formData.ventilation.reduce((acc, item) => {\n            return acc + parseDurationToMinutes(item.duree);\n        }, 0);\n        setTotalStopMinutes(totalMinutes);\n    };\n\n     // Calculate Net Working Hours\n    const calculateNetWorkingHours = () => {\n        const totalGrossHours = calculatedHours.total; // From index compteurs\n        const totalStopHours = totalStopMinutes / 60;\n        const netHours = totalGrossHours - totalStopHours;\n        setNetWorkingHours(netHours >= 0 ? netHours : 0); // Ensure non-negative\n    };\n\n\n    // Recalculate on index compteur change\n    useEffect(() => {\n        calculateCompteurHours();\n    }, [formData.indexCompteurs]);\n\n     // Recalculate on ventilation duration change\n    useEffect(() => {\n        calculateTotalStops();\n    }, [formData.ventilation]);\n\n    // Recalculate net hours when gross hours or stop hours change\n    useEffect(() => {\n        calculateNetWorkingHours();\n         // Update the HEURES COMPTEUR field in exploitation data\n        setFormData(prevData => ({\n            ...prevData,\n            exploitation: {\n                ...prevData.exploitation,\n                \"HEURES COMPTEUR\": formatHoursToHoursMinutes(netWorkingHours) // Format the net hours\n            }\n        }));\n    }, [calculatedHours.total, totalStopMinutes]); // Removed netWorkingHours dependency to prevent loop\n\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          Rapport Journalier Détaillé (R0)\n        </CardTitle>\n        <span className=\"text-sm text-muted-foreground\">{currentDate}</span>\n      </CardHeader>\n\n      <CardContent className=\"p-0 space-y-6\">\n         {/* Section: Entête Info */}\n         <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 border-b pb-4\">\n              <div>\n                <Label htmlFor=\"entree\">Entrée</Label>\n                <Input id=\"entree\" name=\"entree\" placeholder=\"ENTREE\" value={formData.entree} onChange={(e) => handleInputChange(e, 'entree')} className=\"h-8\"/>\n              </div>\n              <div>\n                <Label htmlFor=\"secteur\">Secteur</Label>\n                <Input id=\"secteur\" name=\"secteur\" placeholder=\"SECTEUR\" value={formData.secteur} onChange={(e) => handleInputChange(e, 'secteur')} className=\"h-8\"/>\n              </div>\n               <div>\n                <Label htmlFor=\"rapport-no\">Rapport (R°)</Label>\n                <Input id=\"rapport-no\" name=\"rapportNo\" placeholder=\"N°\" value={formData.rapportNo} onChange={(e) => handleInputChange(e, 'rapportNo')} className=\"h-8\"/>\n              </div>\n              <div>\n                <Label htmlFor=\"machine-engins\">Machine / Engins</Label>\n                <Input id=\"machine-engins\" name=\"machineEngins\" placeholder=\"Nom ou Code\" value={formData.machineEngins} onChange={(e) => handleInputChange(e, 'machineEngins')} className=\"h-8\"/>\n              </div>\n               <div>\n                <Label htmlFor=\"sa\">S.A</Label>\n                <Input id=\"sa\" name=\"sa\" placeholder=\"S.A\" value={formData.sa} onChange={(e) => handleInputChange(e, 'sa')} className=\"h-8\"/>\n              </div>\n            </div>\n\n\n        {/* Section: Unite & Index Compteur per Poste */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <div className=\"md:col-span-1\">\n            <Label htmlFor=\"unite\">Unité</Label>\n            <Input\n              id=\"unite\"\n              name=\"unite\"\n              value={formData.unite}\n              onChange={(e) => handleInputChange(e, \"unite\")}\n              className=\"h-8\"\n            />\n          </div>\n           {/* Index Compteur per Poste */}\n           <div className=\"md:col-span-3 grid grid-cols-3 gap-4 border p-4 rounded-md bg-muted/30\">\n                {POSTE_ORDER.map((poste, index) => (\n                    <div key={`index-${poste}`} className=\"space-y-2\">\n                         <Label className=\"font-medium\">{poste} Poste</Label>\n                         <div>\n                            <Label htmlFor={`index-debut-${poste}`} className=\"text-xs text-muted-foreground\">Début</Label>\n                            <Input\n                                id={`index-debut-${poste}`}\n                                type=\"number\"\n                                step=\"0.01\"\n                                value={formData.indexCompteurs[index]?.debut || ''}\n                                onChange={(e) => handleInputChange(e, \"indexCompteurs\", index, 'debut')}\n                                placeholder=\"Index début\"\n                                className=\"h-8\"\n                            />\n                         </div>\n                         <div>\n                             <Label htmlFor={`index-fin-${poste}`} className=\"text-xs text-muted-foreground\">Fin</Label>\n                            <Input\n                                id={`index-fin-${poste}`}\n                                type=\"number\"\n                                step=\"0.01\"\n                                value={formData.indexCompteurs[index]?.fin || ''}\n                                onChange={(e) => handleInputChange(e, \"indexCompteurs\", index, 'fin')}\n                                placeholder=\"Index fin\"\n                                className=\"h-8\"\n                            />\n                         </div>\n                          <div className=\"text-xs text-muted-foreground pt-1\">\n                             Heures Brutes: {formatHoursToHoursMinutes(calculatedHours.poste[index])}\n                         </div>\n                    </div>\n                ))}\n                <div className=\"col-span-3 mt-2 text-right font-semibold\">\n                    Total Heures Brutes (24h): {formatHoursToHoursMinutes(calculatedHours.total)}\n                 </div>\n           </div>\n        </div>\n\n        {/* Section: Poste Selection & Shifts */}\n        <div className=\"space-y-2\">\n           <Label className=\"text-foreground\">Poste Actuel</Label>\n            <RadioGroup\n              value={selectedPoste} // Controlled component\n              onValueChange={(value: Poste) => setSelectedPoste(value)}\n              className=\"flex flex-wrap space-x-4 pt-2\"\n            >\n              {POSTE_ORDER.map((poste) => ( // Use defined order\n                <div key={poste} className=\"flex items-center space-x-2 mb-2\">\n                  <RadioGroupItem value={poste} id={`r0-poste-${poste}`} />\n                  <Label htmlFor={`r0-poste-${poste}`} className=\"font-normal text-foreground\">\n                    {poste} Poste <span className=\"text-muted-foreground text-xs\">({POSTE_TIMES[poste]})</span>\n                  </Label>\n                </div>\n              ))}\n            </RadioGroup>\n\n            {/* Shift Input Fields (Example - adjust based on actual meaning) */}\n           <div className=\"grid grid-cols-3 gap-4 pt-2\">\n                {POSTE_ORDER.map((poste, index) => (\n                  <div key={poste}>\n                    <Label htmlFor={`shift-${poste}`} className=\"text-muted-foreground text-xs\">{`${poste} D/F`}</Label>\n                     <Input\n                      id={`shift-${poste}`}\n                      type=\"text\"\n                      value={formData.shifts[index]} // Assuming index matches POSTE_ORDER\n                      onChange={(e) => handleInputChange(e, \"shifts\", index)}\n                      placeholder={POSTE_TIMES[poste]} // Use times as placeholder\n                      className=\"h-8\"\n                    />\n                  </div>\n                ))}\n            </div>\n        </div>\n\n        {/* Section: Ventilation */}\n        <div className=\"space-y-4\">\n          <h3 className=\"font-semibold text-lg text-foreground\">Ventilation des Arrêts</h3>\n           <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader className=\"bg-muted/50\">\n                    <TableRow>\n                      <TableHead className=\"w-[80px]\">Code</TableHead>\n                      <TableHead>Nature de l'Arrêt (Extérieurs, Matériel, Exploitation)</TableHead>\n                      {/* Add columns for 1er, 2eme, 3eme shifts if needed */}\n                      <TableHead className=\"text-right w-[150px]\">Durée Totale</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {formData.ventilation.map((item, index) => (\n                      <TableRow key={item.code} className=\"hover:bg-muted/50\">\n                        <TableCell className=\"font-medium\">{item.code}</TableCell>\n                        <TableCell>{item.label}</TableCell>\n                        {/* Add cells for shift-specific durations if needed */}\n                        <TableCell className=\"text-right\">\n                          <Input\n                            type=\"text\"\n                            className=\"h-8 text-sm text-right w-full\"\n                            placeholder=\"ex: 1h 30m\"\n                            value={item.duree}\n                            onChange={(e) => handleInputChange(e, \"ventilation\", index)}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                    {/* Add Total Row */}\n                     <TableRow className=\"bg-muted/80 font-semibold\">\n                         <TableCell colSpan={2}>TOTAL Arrêts</TableCell>\n                         <TableCell className=\"text-right\">\n                             <Input\n                                type=\"text\"\n                                className=\"h-8 text-sm text-right w-full bg-transparent font-semibold border-none focus-visible:ring-0 focus-visible:ring-offset-0\"\n                                readOnly\n                                value={formatMinutesToHoursMinutes(totalStopMinutes)}\n                              />\n                         </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n            </div>\n        </div>\n\n         {/* Section: Exploitation Metrics */}\n         <div className=\"space-y-4 p-4 border rounded-lg bg-muted/30\">\n              <h3 className=\"font-semibold text-lg text-foreground mb-4\">Données d'Exploitation</h3>\n               <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    {exploitationLabels.map((item) => (\n                         <div key={item} className=\"space-y-1\">\n                            <Label htmlFor={`expl-${item.toLowerCase().replace(/\\s/g, '-')}`} className=\"text-sm text-muted-foreground\">\n                                {item}\n                            </Label>\n                            <Input\n                                id={`expl-${item.toLowerCase().replace(/\\s/g, '-')}`}\n                                type=\"text\"\n                                className={`h-8 ${item === \"HEURES COMPTEUR\" ? 'bg-muted font-medium' : ''}`}\n                                value={formData.exploitation[item]}\n                                onChange={(e) => handleInputChange(e, 'exploitation', item)}\n                                readOnly={item === \"HEURES COMPTEUR\"} // Make Heures Compteur read-only\n                                disabled={item === \"HEURES COMPTEUR\"} // Visually indicate it's disabled\n                            />\n                         </div>\n                    ))}\n               </div>\n               <div className=\"mt-4 text-right font-semibold\">\n                    Heures de Travail Net (Total Brutes - Total Arrêts): {formatHoursToHoursMinutes(netWorkingHours)}\n               </div>\n         </div>\n\n\n        {/* Section: Heures Brutes par Poste (Replacing Manque Bull) */}\n        <div className=\"space-y-2 p-4 border rounded-lg bg-muted/30\">\n          <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">Heures Brutes par Poste (Calculé)</h3>\n          <div className=\"grid grid-cols-3 gap-4\">\n            {POSTE_ORDER.map((poste, index) => (\n              <div key={poste}>\n                <Label htmlFor={`gross-hours-${poste}`} className=\"text-muted-foreground text-xs\">{`${poste} Poste`}</Label>\n                <Input\n                  id={`gross-hours-${poste}`}\n                  type=\"text\"\n                  value={formData.bulls[index]} // Display formatted gross hours from bulls array\n                  readOnly\n                  className=\"h-8 bg-muted font-medium\" // Style as read-only\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n\n\n        {/* Section: Répartition du Temps de Travail Pur */}\n        <div className=\"space-y-4\">\n          <h3 className=\"font-semibold text-lg text-foreground\">Répartition du Temps de Travail Pur</h3>\n            {POSTE_ORDER.map((poste, index) => ( // Ensure index matches the intended poste data\n                <div key={poste} className=\"p-4 border rounded-lg space-y-3\">\n                     <h4 className=\"font-medium text-foreground\">{poste} Poste</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                        <div>\n                            <Label htmlFor={`chantier-${poste}`}>Chantier</Label>\n                            <Input\n                                id={`chantier-${poste}`}\n                                type=\"text\"\n                                value={formData.repartitionTravail[index]?.chantier || ''}\n                                onChange={(e) => handleInputChange(e, 'repartitionTravail', index, 'chantier')}\n                                className=\"h-8\"\n                            />\n                        </div>\n                        <div>\n                            <Label htmlFor={`temps-${poste}`}>Temps</Label>\n                            <Input\n                                id={`temps-${poste}`}\n                                type=\"text\"\n                                placeholder=\"ex: 7h 00m\"\n                                value={formData.repartitionTravail[index]?.temps || ''}\n                                onChange={(e) => handleInputChange(e, 'repartitionTravail', index, 'temps')}\n                                className=\"h-8\"\n                            />\n                        </div>\n                        <div>\n                            <Label htmlFor={`imputation-${poste}`}>Imputation</Label>\n                            <Input\n                                id={`imputation-${poste}`}\n                                type=\"text\"\n                                value={formData.repartitionTravail[index]?.imputation || ''}\n                                onChange={(e) => handleInputChange(e, 'repartitionTravail', index, 'imputation')}\n                                className=\"h-8\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n\n         {/* Section: Personnel */}\n         <div className=\"space-y-4 p-4 border rounded-lg bg-muted/30\">\n              <h3 className=\"font-semibold text-lg text-foreground mb-4\">Personnel</h3>\n               <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                   {personnelLabels.map(role => (\n                        <div key={role} className=\"space-y-1\">\n                            <Label htmlFor={`personnel-${role.toLowerCase()}`}>{role}</Label>\n                            <Input\n                                id={`personnel-${role.toLowerCase()}`}\n                                type=\"text\"\n                                className=\"h-8\"\n                                name={role.toLowerCase()} // Set name for direct mapping\n                                value={formData.personnel[role.toLowerCase() as keyof FormData['personnel']]}\n                                onChange={(e) => handleInputChange(e, 'personnel', undefined, role.toLowerCase() as keyof FormData['personnel'])}\n                            />\n                        </div>\n                   ))}\n               </div>\n         </div>\n\n        {/* Section: Suivi Consommation */}\n        <div className=\"space-y-6\">\n           <h3 className=\"font-semibold text-lg text-foreground\">Suivi Consommation</h3>\n\n           {/* Tricone Sub-section */}\n           <div className=\"p-4 border rounded-lg space-y-4\">\n                <h4 className=\"font-medium text-foreground\">Tricone</h4>\n                 {/* Machine Info for Tricone */}\n                 <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                     <div>\n                        <Label htmlFor=\"tricone-marque\">Marque</Label>\n                        <Input id=\"tricone-marque\" name=\"machineMarque\" value={formData.machineMarque} onChange={(e) => handleInputChange(e, 'machineMarque')} className=\"h-8\"/>\n                     </div>\n                     <div>\n                        <Label htmlFor=\"tricone-serie\">N° de Série</Label>\n                        <Input id=\"tricone-serie\" name=\"machineSerie\" value={formData.machineSerie} onChange={(e) => handleInputChange(e, 'machineSerie')} className=\"h-8\"/>\n                     </div>\n                     <div>\n                        <Label htmlFor=\"tricone-type\">Type</Label>\n                        <Input id=\"tricone-type\" name=\"machineType\" value={formData.machineType} onChange={(e) => handleInputChange(e, 'machineType')} className=\"h-8\"/>\n                     </div>\n                     <div>\n                        <Label htmlFor=\"tricone-diametre\">Diamètre</Label>\n                        <Input id=\"tricone-diametre\" name=\"machineDiametre\" value={formData.machineDiametre} onChange={(e) => handleInputChange(e, 'machineDiametre')} className=\"h-8\"/>\n                     </div>\n                 </div>\n\n                {/* Pose / Depose */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n                    <div>\n                        <Label htmlFor=\"tricone-pose\">Posé (N°)</Label>\n                        <Input\n                            id=\"tricone-pose\"\n                            type=\"text\"\n                            name=\"pose\"\n                            value={formData.tricone.pose}\n                            onChange={(e) => handleInputChange(e, 'tricone', undefined, 'pose')}\n                             className=\"h-8\"\n                        />\n                    </div>\n                    <div>\n                        <Label htmlFor=\"tricone-depose\">Déposé (N°)</Label>\n                        <Input\n                            id=\"tricone-depose\"\n                            type=\"text\"\n                            name=\"depose\"\n                            value={formData.tricone.depose}\n                            onChange={(e) => handleInputChange(e, 'tricone', undefined, 'depose')}\n                             className=\"h-8\"\n                        />\n                    </div>\n                     <div>\n                        <Label htmlFor=\"tricone-cause\">Cause de Dépose</Label>\n                        <Select\n                            value={formData.tricone.causeDepose}\n                            onValueChange={(value) => handleSelectChange(value, 'tricone', 'causeDepose')}\n                            >\n                          <SelectTrigger id=\"tricone-cause\" className=\"w-full h-8\">\n                            <SelectValue placeholder=\"Sélectionner Cause\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {causeDeposeOptions.map((cause, index) => (\n                              <SelectItem key={index} value={cause}>{cause}</SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                    </div>\n                </div>\n                 <div>\n                    <Label htmlFor=\"tricone-index-compteur\">Index Compteur (Tricone)</Label>\n                    <Input\n                        id=\"tricone-index-compteur\"\n                        type=\"text\"\n                        placeholder=\"Index au moment de la dépose\"\n                        name=\"indexCompteur\"\n                        value={formData.tricone.indexCompteur}\n                        onChange={(e) => handleInputChange(e, 'tricone', undefined, 'indexCompteur')}\n                        className=\"h-8\"\n                     />\n                </div>\n           </div>\n\n           {/* Gasoil Sub-section */}\n           <div className=\"p-4 border rounded-lg space-y-4\">\n                <h4 className=\"font-medium text-foreground\">Gasoil</h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <div>\n                        <Label htmlFor=\"gasoil-lieu\">Lieu d'Appoint</Label>\n                        <Input\n                            id=\"gasoil-lieu\"\n                            type=\"text\"\n                            name=\"lieuAppoint\"\n                            value={formData.gasoil.lieuAppoint}\n                            onChange={(e) => handleInputChange(e, 'gasoil', undefined, 'lieuAppoint')}\n                             className=\"h-8\"\n                        />\n                    </div>\n                    <div>\n                        <Label htmlFor=\"gasoil-index\">Index Compteur (Gasoil)</Label>\n                        <Input\n                            id=\"gasoil-index\"\n                            type=\"text\"\n                            name=\"indexCompteur\"\n                            value={formData.gasoil.indexCompteur}\n                             onChange={(e) => handleInputChange(e, 'gasoil', undefined, 'indexCompteur')}\n                              className=\"h-8\"\n                        />\n                    </div>\n                    <div>\n                        <Label htmlFor=\"gasoil-quantite\">Quantité Délivrée</Label>\n                        <Input\n                            id=\"gasoil-quantite\"\n                            type=\"text\"\n                             name=\"quantiteDelivree\"\n                            value={formData.gasoil.quantiteDelivree}\n                            onChange={(e) => handleInputChange(e, 'gasoil', undefined, 'quantiteDelivree')}\n                             placeholder=\"en Litres\" // Added placeholder\n                              className=\"h-8\"\n                        />\n                    </div>\n                </div>\n           </div>\n        </div>\n\n\n        {/* Action Buttons */}\n        <div className=\"mt-8 flex justify-end space-x-3\">\n            <Button variant=\"outline\">Enregistrer Brouillon</Button>\n            <Button>Soumettre Rapport</Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5779, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/index.tsx"],"sourcesContent":["export { Navigation } from \"./Navigation\";\nexport { DailyReport } from \"./DailyReport\";\nexport { ActivityReport } from \"./ActivityReport\";\nexport { TruckTracking } from \"./TruckTracking\";\nexport { R0Report } from \"./R0Report\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 5833, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from \"react\"; // Import useEffect\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Bell } from \"lucide-react\";\nimport { Toaster } from \"@/components/ui/toaster\";\n\nimport {\n  Navigation,\n  DailyReport,\n  ActivityReport,\n  TruckTracking,\n  R0Report,\n} from \"@/components/sections\"; // Removed AnotherPageReport import\nimport Link from \"next/link\";\n\nconst userName = \"JD\"; // Replace with actual user data if available\n\n// Type for Poste\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\n\nexport default function Home() {\n  const [activeTab, setActiveTab] = useState(\"daily-report\");\n  const [currentDate, setCurrentDate] = useState<Date | null>(null); // Initialize with null\n  const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Default Poste\n\n   // Use useEffect to set the date only on the client side\n  useEffect(() => {\n    setCurrentDate(new Date());\n  }, []); // Empty dependency array ensures this runs once on mount\n\n\n  // Helper function to get formatted date string, handles null case\n  const getFormattedDate = (date: Date | null, options: Intl.DateTimeFormatOptions): string => {\n    if (!date) return \"Loading...\"; // Or some placeholder\n    return date.toLocaleDateString(\"fr-FR\", options);\n  };\n\n  const dateOptions: Intl.DateTimeFormatOptions = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <div className=\"container mx-auto px-4 py-6 max-w-7xl\"> {/* Increased max-width */}\n        {/* Header */}\n        <header className=\"mb-8 border-b pb-4\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-2xl font-bold\">ReportZen</h1>\n              <p className=\"text-muted-foreground\">Application de rapport quotidien</p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Button className=\"rounded-full\" variant=\"ghost\" size=\"icon\">\n                <Bell className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Notifications</span>\n              </Button>\n              <Avatar className=\"w-10 h-10\">\n                 <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"@shadcn\" />\n                <AvatarFallback className=\"bg-primary text-primary-foreground font-bold\">\n                   {userName}\n                </AvatarFallback>\n              </Avatar>\n              {/* Link to admin page - Adjust route as needed */}\n              <Link href=\"/admin\" passHref>\n                  <Button variant=\"outline\">Admin Panel</Button>\n              </Link>\n            </div>\n          </div>\n        </header>\n\n        {/* Navigation Tabs */}\n        <Navigation activeTab={activeTab} setActiveTab={setActiveTab} />\n\n        {/* Tab Content */}\n        <main id=\"tab-content\" className=\"mt-6\">\n           {/* Render content only when currentDate is available */}\n           {currentDate && (\n               <>\n                  {activeTab === \"daily-report\" && (\n                    <DailyReport currentDate={currentDate} />\n                  )}\n                  {activeTab === \"activity-report\" && (\n                    <ActivityReport currentDate={getFormattedDate(currentDate, dateOptions)} />\n                  )}\n                   {activeTab === \"r0-report\" && ( // Changed ID to match navigation\n                    <R0Report currentDate={getFormattedDate(currentDate, dateOptions)} />\n                  )}\n                  {activeTab === \"truck-tracking\" && (\n                    <TruckTracking currentDate={getFormattedDate(currentDate, dateOptions)} />\n                  )}\n                  {/* Removed rendering condition for another-page */}\n               </>\n           )}\n            {!currentDate && (\n                 <div className=\"flex justify-center items-center h-64\">\n                    <p className=\"text-muted-foreground\">Chargement des données...</p>\n                 </div>\n            )}\n        </main>\n\n        <Toaster />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA,oVAA6C,mBAAmB;AAChE;AACA;AACA;AACA;AAEA,6RAMgC,mCAAmC;AANnE;AAAA;AAAA;AAAA;AAAA;AAOA;AAfA;;;;;;;;;AAiBA,MAAM,WAAW,MAAM,6CAA6C;AAKpE,gCAAgC;AAChC,MAAM,cAAqC;IACzC,QAAQ;IACR,OAAO;IACP,QAAQ;AACV;AACA,MAAM,cAAuB;IAAC;IAAQ;IAAO;CAAO;AAGrC,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,OAAO,uBAAuB;IAC1F,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,QAAQ,gBAAgB;IAEjF,wDAAwD;IACzD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe,IAAI;IACrB,GAAG,EAAE,GAAG,yDAAyD;IAGjE,kEAAkE;IAClE,MAAM,mBAAmB,CAAC,MAAmB;QAC3C,IAAI,CAAC,MAAM,OAAO,cAAc,sBAAsB;QACtD,OAAO,KAAK,kBAAkB,CAAC,SAAS;IAC1C;IAEA,MAAM,cAA0C;QAC5C,MAAM;QACN,OAAO;QACP,KAAK;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;gBAAwC;8BAErD,8OAAC;oBAAO,WAAU;8BAChB,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,8OAAC;wCAAE,WAAU;kDAAwB;;;;;;;;;;;;0CAEvC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,kIAAA,CAAA,SAAM;wCAAC,WAAU;wCAAe,SAAQ;wCAAQ,MAAK;;0DACpD,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;0DAChB,8OAAC;gDAAK,WAAU;0DAAU;;;;;;;;;;;;kDAE5B,8OAAC,kIAAA,CAAA,SAAM;wCAAC,WAAU;;0DACf,8OAAC,kIAAA,CAAA,cAAW;gDAAC,KAAI;gDAAgC,KAAI;;;;;;0DACtD,8OAAC,kIAAA,CAAA,iBAAc;gDAAC,WAAU;0DACtB;;;;;;;;;;;;kDAIN,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAS,QAAQ;kDACxB,cAAA,8OAAC,kIAAA,CAAA,SAAM;4CAAC,SAAQ;sDAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAOpC,8OAAC,4IAAA,CAAA,aAAU;oBAAC,WAAW;oBAAW,cAAc;;;;;;8BAGhD,8OAAC;oBAAK,IAAG;oBAAc,WAAU;;wBAE7B,6BACG;;gCACI,cAAc,gCACb,8OAAC,6IAAA,CAAA,cAAW;oCAAC,aAAa;;;;;;gCAE3B,cAAc,mCACb,8OAAC,gJAAA,CAAA,iBAAc;oCAAC,aAAa,iBAAiB,aAAa;;;;;;gCAE3D,cAAc,6BACd,8OAAC,0IAAA,CAAA,WAAQ;oCAAC,aAAa,iBAAiB,aAAa;;;;;;gCAEtD,cAAc,kCACb,8OAAC,+IAAA,CAAA,gBAAa;oCAAC,aAAa,iBAAiB,aAAa;;;;;;;;wBAKjE,CAAC,6BACG,8OAAC;4BAAI,WAAU;sCACZ,cAAA,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;;;;;;8BAKjD,8OAAC,mIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;AAIhB","debugId":null}}]
}