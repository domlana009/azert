{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/useAuth.tsx"],"sourcesContent":["\n\"use client\"; // Ensure this is a client component\n\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode, // Import ReactNode for children prop type\n} from 'react';\nimport {\n  onAuthStateChanged,\n  signOut,\n  User as FirebaseUser, // Rename Firebase User type\n} from 'firebase/auth';\nimport { auth } from '@/lib/firebase/config'; // Adjust path as necessary\n\n// Define a User type for your application, potentially extending FirebaseUser\n// Add custom properties like 'role' here\ninterface User extends FirebaseUser {\n  role?: 'admin' | 'user'; // Example: Add a role property\n}\n\n// Define the context type\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  logout: () => Promise<void>;\n}\n\n// Create the context with a default value\n// The default value is used when a component tries to access the context outside of a provider\nconst AuthContext = createContext<AuthContextType>({\n  user: null,\n  loading: true,\n  logout: async () => {}, // Default logout does nothing\n});\n\n// Define the provider props type\ninterface AuthProviderProps {\n  children: ReactNode; // Type for children prop\n}\n\n// Create the AuthProvider component\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Subscribe to Firebase auth state changes\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n      if (firebaseUser) {\n        // User is signed in\n        // TODO: Fetch additional user data (like role) from your backend/database if needed\n        // Example: const userRole = await fetchUserRole(firebaseUser.uid);\n        const appUser: User = {\n          ...firebaseUser,\n          // Uncomment and replace with actual role fetching logic\n          // role: userRole || 'user', // Default to 'user' if role is not found\n          role: 'admin', // TEMPORARY: Assign admin role for testing\n        };\n        setUser(appUser);\n      } else {\n        // User is signed out\n        setUser(null);\n      }\n      setLoading(false); // Set loading to false once auth state is determined\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []); // Empty dependency array ensures this runs only once on mount\n\n  // Logout function\n  const logout = async () => {\n    setLoading(true); // Optionally set loading state during logout\n    try {\n      await signOut(auth);\n      setUser(null); // Clear user state immediately\n    } catch (error) {\n      console.error(\"Error signing out: \", error);\n      // Handle logout errors if necessary\n    } finally {\n      setLoading(false); // Ensure loading is false after attempt\n    }\n  };\n\n  // Value object passed to the provider\n  const value: AuthContextType = { user, loading, logout };\n\n  // Correcting the return statement to ensure proper JSX syntax\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n\n// Custom hook to use the auth context\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    // Ensure the hook is used within an AuthProvider\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAGA;AAOA;AAAA;AAAA;;;;;;;;AATA,cAAc,oCAAoC;;;;AA6BlD,0CAA0C;AAC1C,+FAA+F;AAC/F,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,MAAM;IACN,SAAS;IACT,QAAQ,WAAa;AACvB;AAQO,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;;IACpE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,2CAA2C;YAC3C,MAAM,cAAc,CAAA,GAAA,oPAAA,CAAA,qBAAkB,AAAD,EAAE;sDAAM,OAAO;oBAClD,IAAI,cAAc;wBAChB,oBAAoB;wBACpB,oFAAoF;wBACpF,mEAAmE;wBACnE,MAAM,UAAgB;4BACpB,GAAG,YAAY;4BACf,wDAAwD;4BACxD,sEAAsE;4BACtE,MAAM;wBACR;wBACA,QAAQ;oBACV,OAAO;wBACL,qBAAqB;wBACrB,QAAQ;oBACV;oBACA,WAAW,QAAQ,qDAAqD;gBAC1E;;YAEA,kCAAkC;YAClC;0CAAO,IAAM;;QACf;iCAAG,EAAE,GAAG,8DAA8D;IAEtE,kBAAkB;IAClB,MAAM,SAAS;QACb,WAAW,OAAO,6CAA6C;QAC/D,IAAI;YACF,MAAM,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;YACd,QAAQ,OAAO,+BAA+B;QAChD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,oCAAoC;QACtC,SAAU;YACR,WAAW,QAAQ,wCAAwC;QAC7D;IACF;IAEA,sCAAsC;IACtC,MAAM,QAAyB;QAAE;QAAM;QAAS;IAAO;IAEvD,8DAA8D;IAC9D,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAC1B;;;;;;AAGP;GApDa;KAAA;AAwDN,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,iDAAiD;QACjD,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IAPa","debugId":null}}]
}