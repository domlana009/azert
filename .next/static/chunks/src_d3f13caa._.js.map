{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-8 w-8\", // Adjusted icon size for better fit in tables etc.\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n\n    "],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/Navigation.tsx"],"sourcesContent":["\n\"use client\";\n\ninterface NavItem {\n    id: string;\n    label: string;\n}\n\ninterface NavigationProps {\n  activeTab: string;\n  setActiveTab: (tab: string) => void;\n  allowedSections: NavItem[]; // Receive allowed sections dynamically\n}\n\nexport function Navigation({ activeTab, setActiveTab, allowedSections }: NavigationProps) {\n\n  return (\n    <nav className=\"border-b overflow-x-auto whitespace-nowrap mb-6\">\n      <div className=\"flex space-x-1\">\n        {allowedSections.map((item) => ( // Map over allowedSections\n          <button\n            key={item.id}\n            role=\"tab\"\n            aria-selected={activeTab === item.id}\n            className={`px-4 py-2 font-medium text-sm rounded-t-md transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-1 ${\n              activeTab === item.id\n                ? \"border-b-2 border-primary text-primary bg-primary/10\"\n                : \"text-muted-foreground hover:text-foreground hover:bg-muted/50\"\n            }`}\n            onClick={() => setActiveTab(item.id)}\n          >\n            {/* If you have icons, you can add them here, e.g., using lucide-react */}\n            {/* <i className={`${item.icon} mr-2`}></i> */}\n            {item.label}\n          </button>\n        ))}\n        {/* Optional: Add a message if no sections are allowed */}\n         {allowedSections.length === 0 && (\n            <div className=\"px-4 py-2 text-sm text-muted-foreground\">Aucune section disponible.</div>\n         )}\n      </div>\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;AAaO,SAAS,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,eAAe,EAAmB;IAEtF,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;gBACZ,gBAAgB,GAAG,CAAC,CAAC,qBACpB,6LAAC;wBAEC,MAAK;wBACL,iBAAe,cAAc,KAAK,EAAE;wBACpC,WAAW,CAAC,0JAA0J,EACpK,cAAc,KAAK,EAAE,GACjB,yDACA,iEACJ;wBACF,SAAS,IAAM,aAAa,KAAK,EAAE;kCAIlC,KAAK,KAAK;uBAZN,KAAK,EAAE;;;;;gBAgBd,gBAAgB,MAAM,KAAK,mBACzB,6LAAC;oBAAI,WAAU;8BAA0C;;;;;;;;;;;;;;;;;AAKrE;KA7BgB","debugId":null}},
    {"offset": {"line": 732, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, children, ...props }, ref) => ( // Accept children prop\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  >{children}</tr> // Render children directly without extra whitespace\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;kBACT;;;;;aAAe,oDAAoD;;;AAEvE,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1050, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1265, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/DailyReport.tsx"],"sourcesContent":["\n\"use client\";\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Trash } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport {\n    Select,\n    SelectContent,\n    SelectItem,\n    SelectTrigger,\n    SelectValue,\n} from \"@/components/ui/select\"; // Import Select components\n\ninterface DailyReportProps {\n  selectedDate: Date; // Changed prop name and kept type as Date\n}\n\ninterface ModuleStop {\n  id: string; // Add unique id for key prop\n  poste: Poste | ''; // Added Poste selection\n  duration: string;\n  nature: string;\n}\n\n// Keep Poste constants for potential context or future use\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\n\n// Helper function to parse duration strings into minutes\nfunction parseDurationToMinutes(duration: string): number {\n  if (!duration) return 0;\n\n  // Clean the string: remove anything not a digit, H, h, :, ·\n  // Allow spaces for flexibility e.g., \"1 H 20\"\n  const cleaned = duration.replace(/[^0-9Hh:·\\s]/g, '').trim();\n\n  let hours = 0;\n  let minutes = 0;\n\n  // Match formats like HH:MM, HH·MM, HH H MM, H:MM, H·MM, H H MM\n   let match = cleaned.match(/^(?:(\\d{1,2})\\s?[Hh:·]\\s?)?(\\d{1,2})$/);\n   if (match) {\n     hours = match[1] ? parseInt(match[1], 10) : 0;\n     minutes = parseInt(match[2], 10);\n     // Validate parsed numbers\n     if (isNaN(hours) || isNaN(minutes)) return 0;\n     return (hours * 60) + minutes;\n   }\n\n\n   // Match formats like HH H, H H\n   match = cleaned.match(/^(\\d{1,2})\\s?[Hh]$/);\n    if (match) {\n      hours = parseInt(match[1], 10);\n      if (isNaN(hours)) return 0;\n      return hours * 60;\n    }\n\n  // Match only numbers (assume minutes)\n  match = cleaned.match(/^(\\d+)$/);\n  if (match) {\n    minutes = parseInt(match[1], 10);\n    if (isNaN(minutes)) return 0;\n    return minutes;\n  }\n\n  console.warn(`Could not parse duration: \"${duration}\"`);\n  return 0; // Return 0 if parsing fails\n}\n\n\n// Helper function to format minutes into HHh MMm string\nfunction formatMinutesToHoursMinutes(totalMinutes: number): string {\n    if (isNaN(totalMinutes) || totalMinutes <= 0) return \"0h 0m\"; // Return 0 if non-positive or NaN\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.round(totalMinutes % 60); // Round minutes\n    return `${hours}h ${minutes}m`;\n}\n\n\nexport function DailyReport({ selectedDate }: DailyReportProps) { // Updated prop name\n  const TOTAL_PERIOD_MINUTES = 24 * 60; // 24-hour period\n\n\n  const [module1Stops, setModule1Stops] = useState<ModuleStop[]>([\n    {\n      id: crypto.randomUUID(),\n      poste: \"\", // Added poste\n      duration: \"\",\n      nature: \"\",\n    },\n  ]);\n  const [module2Stops, setModule2Stops] = useState<ModuleStop[]>([\n    { id: crypto.randomUUID(), poste: \"\", duration: \"\", nature: \"\" }, // Added poste\n  ]);\n\n  const [module1TotalDowntime, setModule1TotalDowntime] = useState(0);\n  const [module2TotalDowntime, setModule2TotalDowntime] = useState(0);\n  const [module1OperatingTime, setModule1OperatingTime] = useState(TOTAL_PERIOD_MINUTES);\n  const [module2OperatingTime, setModule2OperatingTime] = useState(TOTAL_PERIOD_MINUTES);\n\n   // Format date string once using the selectedDate prop\n   const formattedDate = selectedDate.toLocaleDateString(\"fr-FR\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  });\n\n\n   useEffect(() => {\n    const calculateTotals = (stops: ModuleStop[]) => {\n      const totalDowntime = stops.reduce((acc, stop) => {\n          const minutes = parseDurationToMinutes(stop.duration);\n          // Check if parsing resulted in NaN and handle it (e.g., treat as 0 or log error)\n          if (isNaN(minutes)) {\n              console.warn(`Invalid duration format for stop ${stop.id}: \"${stop.duration}\"`);\n              return acc; // Skip invalid durations\n          }\n          return acc + minutes;\n      }, 0);\n      // Calculate operating time based on a standard 24-hour period\n      const operatingTime = TOTAL_PERIOD_MINUTES - totalDowntime;\n      return { totalDowntime, operatingTime };\n    };\n\n    const { totalDowntime: m1Downtime, operatingTime: m1Operating } = calculateTotals(module1Stops);\n    setModule1TotalDowntime(m1Downtime);\n    setModule1OperatingTime(m1Operating >= 0 ? m1Operating : 0); // Ensure non-negative\n\n    const { totalDowntime: m2Downtime, operatingTime: m2Operating } = calculateTotals(module2Stops);\n    setModule2TotalDowntime(m2Downtime);\n    setModule2OperatingTime(m2Operating >= 0 ? m2Operating : 0); // Ensure non-negative\n\n  }, [module1Stops, module2Stops, TOTAL_PERIOD_MINUTES]);\n\n\n  const addStop = (module: number) => {\n    const newStop: ModuleStop = { id: crypto.randomUUID(), poste: '', duration: \"\", nature: \"\" }; // Added poste\n    if (module === 1) {\n      setModule1Stops([...module1Stops, newStop]);\n    } else {\n      setModule2Stops([...module2Stops, newStop]);\n    }\n  };\n\n  const deleteStop = (module: number, id: string) => {\n    if (module === 1) {\n      setModule1Stops(module1Stops.filter(stop => stop.id !== id));\n    } else {\n       setModule2Stops(module2Stops.filter(stop => stop.id !== id));\n    }\n  };\n\n  // Updated updateStop to include poste\n  const updateStop = (module: number, id: string, field: keyof Omit<ModuleStop, 'id'>, value: string | Poste) => {\n     const updater = (stops: ModuleStop[]) => {\n        return stops.map(stop => {\n            if (stop.id === id) {\n                // Type assertion for Poste if field is 'poste'\n                if (field === 'poste') {\n                    return { ...stop, [field]: value as Poste };\n                }\n                // Basic validation for duration (e.g., check if parseable) - can be enhanced\n                if (field === 'duration') {\n                   // Optionally add immediate feedback or validation styling here\n                }\n                return { ...stop, [field]: value };\n            }\n            return stop;\n        });\n    };\n\n    if (module === 1) {\n        setModule1Stops(updater(module1Stops));\n    } else {\n        setModule2Stops(updater(module2Stops));\n    }\n  };\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          RAPPORT JOURNALIER (Activité TSUD)\n        </CardTitle>\n        {/* Display the formatted date from the prop */}\n        <span className=\"text-sm text-muted-foreground\">{formattedDate}</span>\n      </CardHeader>\n\n      <CardContent className=\"p-0 space-y-6\">\n\n        {/* Module 1 Section */}\n        <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"font-semibold text-lg text-foreground\">Module 1 - Arrêts</h3>\n            <Button variant=\"link\" className=\"text-primary text-sm p-0 h-auto\" onClick={() => addStop(1)}>\n              + Ajouter Arrêt\n            </Button>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader className=\"bg-muted/50\">\n                <TableRow>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\"> {/* Added width for Poste */}\n                    Poste\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[120px]\">\n                    Durée (ex: 1h 30)\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                    Nature\n                  </TableHead>\n                  <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {module1Stops.map((stop) => (\n                  <TableRow key={stop.id} className=\"hover:bg-muted/50\">\n                     <TableCell className=\"p-2\"> {/* Cell for Poste Select */}\n                        <Select\n                            value={stop.poste}\n                            onValueChange={(value: Poste) => updateStop(1, stop.id, \"poste\", value)}\n                            >\n                            <SelectTrigger className=\"h-8 text-sm\">\n                                <SelectValue placeholder=\"Sélectionner\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                                {POSTE_ORDER.map(p => (\n                                    <SelectItem key={p} value={p}>\n                                        {p} Poste ({POSTE_TIMES[p]})\n                                    </SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.duration}\n                        placeholder=\"ex: 1h 30\"\n                        onChange={(e) =>\n                          updateStop(1, stop.id, \"duration\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.nature}\n                        onChange={(e) =>\n                          updateStop(1, stop.id, \"nature\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2 text-right\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteStop(1, stop.id)}\n                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                        <span className=\"sr-only\">Supprimer</span>\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                 {module1Stops.length === 0 && (\n                    <TableRow>\n                        <TableCell colSpan={4} className=\"text-center text-muted-foreground p-4\"> {/* Adjusted colSpan to 4 */}\n                            Aucun arrêt ajouté pour le Module 1.\n                        </TableCell>\n                    </TableRow>\n                 )}\n              </TableBody>\n            </Table>\n          </div>\n           <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n              Total Arrêts Module 1: <strong>{formatMinutesToHoursMinutes(module1TotalDowntime)}</strong>\n           </div>\n        </div>\n\n        {/* Module 2 Section */}\n         <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"font-semibold text-lg text-foreground\">Module 2 - Arrêts</h3>\n            <Button variant=\"link\" className=\"text-primary text-sm p-0 h-auto\" onClick={() => addStop(2)}>\n              + Ajouter Arrêt\n            </Button>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n             <Table>\n               <TableHeader className=\"bg-muted/50\">\n                <TableRow>\n                   <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\"> {/* Added width for Poste */}\n                    Poste\n                  </TableHead>\n                   <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[120px]\">\n                    Durée (ex: 1h 30)\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                    Nature\n                  </TableHead>\n                  <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {module2Stops.map((stop) => (\n                  <TableRow key={stop.id} className=\"hover:bg-muted/50\">\n                      <TableCell className=\"p-2\"> {/* Cell for Poste Select */}\n                        <Select\n                            value={stop.poste}\n                            onValueChange={(value: Poste) => updateStop(2, stop.id, \"poste\", value)}\n                            >\n                            <SelectTrigger className=\"h-8 text-sm\">\n                                <SelectValue placeholder=\"Sélectionner\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                                {POSTE_ORDER.map(p => (\n                                    <SelectItem key={p} value={p}>\n                                        {p} Poste ({POSTE_TIMES[p]})\n                                    </SelectItem>\n                                ))}\n                            </SelectContent>\n                        </Select>\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.duration}\n                        placeholder=\"ex: 1h 30\"\n                        onChange={(e) =>\n                          updateStop(2, stop.id, \"duration\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.nature}\n                        onChange={(e) =>\n                          updateStop(2, stop.id, \"nature\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2 text-right\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteStop(2, stop.id)}\n                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                         <span className=\"sr-only\">Supprimer</span>\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                {module2Stops.length === 0 && (\n                    <TableRow>\n                         <TableCell colSpan={4} className=\"text-center text-muted-foreground p-4\"> {/* Adjusted colSpan to 4 */}\n                            Aucun arrêt ajouté pour le Module 2.\n                        </TableCell>\n                    </TableRow>\n                 )}\n              </TableBody>\n            </Table>\n          </div>\n           <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n              Total Arrêts Module 2: <strong>{formatMinutesToHoursMinutes(module2TotalDowntime)}</strong>\n           </div>\n        </div>\n\n        {/* Totaux Section */}\n        <div className=\"p-4 border rounded-lg bg-muted/30\">\n          <h3 className=\"font-semibold text-lg text-foreground mb-4\">Totaux Temps de Fonctionnement (24h - Arrêts)</h3>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"total-m1-operating\" className=\"text-sm text-muted-foreground\">\n                Module 1 Fonctionnement\n              </Label>\n              <Input id=\"total-m1-operating\" type=\"text\" value={formatMinutesToHoursMinutes(module1OperatingTime)} className=\"h-9 bg-input font-medium\" readOnly tabIndex={-1} />\n            </div>\n             <div className=\"space-y-1\">\n              <Label htmlFor=\"total-m2-operating\" className=\"text-sm text-muted-foreground\">\n                Module 2 Fonctionnement\n              </Label>\n              <Input id=\"total-m2-operating\" type=\"text\" value={formatMinutesToHoursMinutes(module2OperatingTime)} className=\"h-9 bg-input font-medium\" readOnly tabIndex={-1} />\n            </div>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"mt-8 flex justify-end space-x-3\">\n          <Button type=\"button\" variant=\"outline\">Enregistrer Brouillon</Button> {/* Changed to type=\"button\" */}\n          <Button type=\"submit\">Soumettre Rapport</Button> {/* Changed to type=\"submit\" */}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2179, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\n// Ensure AlertTitle and AlertDescription are exported\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2308, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/ActivityReport.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from \"react\"; // Import useEffect\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"; // Ensure Card is imported\nimport { Button } from \"@/components/ui/button\";\nimport { Trash, Plus, AlertCircle } from \"lucide-react\"; // Added Plus icon and AlertCircle\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"; // Import Select components\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Checkbox } from \"@/components/ui/checkbox\"; // Import Checkbox\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"; // Import Alert for displaying errors\nimport { cn } from \"@/lib/utils\"; // Import cn for conditional classes\nimport { useToast } from \"@/hooks/use-toast\"; // Import useToast\n\n// Helper function to parse duration strings into minutes (copied from DailyReport)\nfunction parseDurationToMinutes(duration: string): number {\n  if (!duration) return 0;\n  const cleaned = duration.replace(/[^0-9Hh:·\\s]/g, '').trim();\n  let hours = 0;\n  let minutes = 0;\n  let match = cleaned.match(/^(?:(\\d{1,2})\\s?[Hh:·]\\s?)?(\\d{1,2})$/);\n  if (match) {\n    hours = match[1] ? parseInt(match[1], 10) : 0;\n    minutes = parseInt(match[2], 10);\n    return (hours * 60) + minutes;\n  }\n  match = cleaned.match(/^(\\d{1,2})\\s?[Hh]$/);\n  if (match) {\n    hours = parseInt(match[1], 10);\n    return hours * 60;\n  }\n  match = cleaned.match(/^(\\d+)$/);\n  if (match) {\n    minutes = parseInt(match[1], 10);\n    return minutes;\n  }\n  console.warn(`Could not parse duration: \"${duration}\"`);\n  return 0; // Return 0 if parsing fails\n}\n\n// Helper function to format minutes into HHh MMm string (copied from DailyReport)\nfunction formatMinutesToHoursMinutes(totalMinutes: number): string {\n  if (isNaN(totalMinutes) || totalMinutes <= 0) return \"0h 0m\"; // Return 0 if non-positive\n  const hours = Math.floor(totalMinutes / 60);\n  const minutes = Math.round(totalMinutes % 60); // Round minutes\n  return `${hours}h ${minutes}m`;\n}\n\n// Helper function to validate and parse counter values\nfunction validateAndParseCounterValue(value: string): number | null {\n    if (!value) return 0; // Treat empty as 0 for calculation, but might be invalid based on context\n    const cleaned = value.replace(/[^0-9.,]/g, '').replace(',', '.');\n    // Allow empty or just \".\" or \",\" as intermediate states, but they parse to NaN\n    if (cleaned === '' || cleaned === '.' || cleaned === ',') return null; // Indicate parsing failure/incompleteness\n    const parsed = parseFloat(cleaned);\n    return isNaN(parsed) ? null : parsed; // Return null if parsing failed\n}\n\n// Define total minutes for a 24-hour period\nconst TOTAL_PERIOD_MINUTES = 24 * 60; // Changed from 8 * 60\n\n// Helper function to calculate total duration in minutes from counters, considering validation\nfunction calculateTotalCounterMinutes(counters: Array<{ start: string; end: string; error?: string }>): number {\n  const totalHours = counters.reduce((acc, counter) => {\n    // Only include valid entries in the sum\n    if (counter.error) return acc; // Skip entries with errors\n\n    const startHours = validateAndParseCounterValue(counter.start);\n    const endHours = validateAndParseCounterValue(counter.end);\n\n    // Check if parsing was successful and end >= start\n    if (startHours !== null && endHours !== null && endHours >= startHours) {\n      return acc + (endHours - startHours);\n    }\n    // Ignore invalid or incomplete entries for the total calculation\n    return acc;\n  }, 0);\n  return Math.round(totalHours * 60); // Convert total hours to minutes and round\n}\n\n\ninterface ActivityReportProps {\n  selectedDate: Date; // Changed prop name and kept type as Date\n  previousDayThirdShiftEnd?: string | null; // Add prop for previous day's 3rd shift end counter\n}\n\n// Keep Poste constants for potential context or future use, even if UI element is removed\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\ntype Park = 'PARK 1' | 'PARK 2' | 'PARK 3';\ntype StockType = 'NORMAL' | 'OCEANE' | 'PB30';\ntype StockTime = 'HEURE DEBUT STOCK';\n\n// Updated Poste times and order - Order must match validation logic: 3, 1, 2\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\", // Previous day to current day\n  \"1er\": \"06:30 - 14:30\",  // Current day\n  \"2ème\": \"14:30 - 22:30\", // Current day\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"]; // Consistent order for UI and logic\nconst PARKS: Park[] = ['PARK 1', 'PARK 2', 'PARK 3'];\nconst STOCK_TYPES: StockType[] = ['NORMAL', 'OCEANE', 'PB30'];\nconst STOCK_TIME_LABEL: StockTime = 'HEURE DEBUT STOCK';\n\n\ninterface Stop {\n  id: string;\n  duration: string;\n  nature: string;\n}\n\n// Updated Counter interface: added poste, removed total, added optional error field\ninterface Counter {\n    id: string;\n    poste: Poste | ''; // Changed to mandatory with empty string default\n    start: string;\n    end: string;\n    error?: string; // Optional error message for this entry\n}\n\n// Interface for Liaison Counters (same structure as Counter) - Added poste\ninterface LiaisonCounter {\n    id: string;\n    poste: Poste | ''; // Changed to mandatory with empty string default\n    start: string;\n    end: string;\n    error?: string; // Optional error message for this entry\n}\n\n// Simplified Stock Entry interface - Added poste field\ninterface StockEntry {\n  id: string;\n  poste: Poste | ''; // Added Poste selection\n  park: Park | '';\n  type: StockType | ''; // Only product types\n  quantity: string; // For NORMAL, OCEANE, PB30\n  startTime: string; // For HEURE DEBUT STOCK - kept separate for clarity\n  // Error is now calculated dynamically during render\n}\n\nconst MAX_HOURS_PER_POSTE = 8; // Max hours for a standard shift\n\nexport function ActivityReport({ selectedDate, previousDayThirdShiftEnd = null }: ActivityReportProps) { // Updated prop name\n  const { toast } = useToast();\n\n  // const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Removed Poste selection state\n  const [stops, setStops] = useState<Stop[]>([\n    { id: crypto.randomUUID(), duration: \"\", nature: \"\" },\n  ]);\n  // Updated initial state for vibrator counters to include poste\n  const [vibratorCounters, setVibratorCounters] = useState<Counter[]>([\n    { id: crypto.randomUUID(), poste: \"\", start: \"\", end: \"\" }, // Example values with poste\n  ]);\n  // State for liaison counters - Updated initial state to include poste\n  const [liaisonCounters, setLiaisonCounters] = useState<LiaisonCounter[]>([\n    { id: crypto.randomUUID(), poste: \"\", start: \"\", end: \"\" }, // Example values with poste\n  ]);\n  // Updated state for stock entries - Added poste\n  const [stockEntries, setStockEntries] = useState<StockEntry[]>([\n      { id: crypto.randomUUID(), poste: '', park: '', type: '', quantity: '', startTime: '' } // Start with one empty entry including poste\n  ]);\n  // State for the single \"Heure Debut Stock\" time - This seems redundant if startTime is in StockEntry\n  // const [stockStartTime, setStockStartTime] = useState('');\n\n\n  const [totalDowntime, setTotalDowntime] = useState(0);\n  const [operatingTime, setOperatingTime] = useState(TOTAL_PERIOD_MINUTES); // Use 24h base\n  // State for total counter durations\n  const [totalVibratorMinutes, setTotalVibratorMinutes] = useState(0);\n  const [totalLiaisonMinutes, setTotalLiaisonMinutes] = useState(0);\n  // State to track if there are any counter errors\n  const [hasVibratorErrors, setHasVibratorErrors] = useState(false);\n  const [hasLiaisonErrors, setHasLiaisonErrors] = useState(false);\n  // State to track stock entry errors (specifically for poste selection)\n  const [hasStockErrors, setHasStockErrors] = useState(false);\n\n  // State for counter validation errors (including sequential checks) - for ActivityReport counters\n   const [vibratorCounterErrors, setVibratorCounterErrors] = useState<Record<string, string>>({}); // Use record for ID-based errors\n   const [liaisonCounterErrors, setLiaisonCounterErrors] = useState<Record<string, string>>({});\n\n\n    // Format date string once using the selectedDate prop\n    const formattedDate = selectedDate.toLocaleDateString(\"fr-FR\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n    });\n\n\n  // Calculate total downtime and operating time whenever stops change\n  useEffect(() => {\n    const calculatedDowntime = stops.reduce((acc, stop) => acc + parseDurationToMinutes(stop.duration), 0);\n    setTotalDowntime(calculatedDowntime);\n\n    const calculatedOperatingTime = TOTAL_PERIOD_MINUTES - calculatedDowntime; // Use 24h base\n    setOperatingTime(calculatedOperatingTime >= 0 ? calculatedOperatingTime : 0); // Ensure non-negative\n\n  }, [stops]); // Removed TOTAL_PERIOD_MINUTES dependency as it's constant\n\n\n  // Function to validate a single counter entry - Includes max duration and sequential checks\n  const validateCounterEntry = (\n        counterId: string,\n        counters: Array<Counter | LiaisonCounter>,\n        type: 'vibrator' | 'liaison',\n        currentStartStr: string,\n        currentEndStr: string,\n        currentPoste: Poste | '', // Mandatory Poste\n        previousDayData?: string | null // Only needed for 1er poste check\n    ): string | undefined => {\n        const startVal = validateAndParseCounterValue(currentStartStr);\n        const endVal = validateAndParseCounterValue(currentEndStr);\n\n         // 0. Poste Validation (Must be selected if start or end has value)\n         if ((currentStartStr || currentEndStr) && !currentPoste) {\n             return \"Veuillez sélectionner un poste.\";\n         }\n          // Skip further validation if poste is not selected yet, even if inputs are empty\n         if (!currentPoste && !currentStartStr && !currentEndStr) {\n             return undefined;\n         }\n\n\n        // Basic Validation\n        if (startVal === null && currentStartStr !== '' && currentStartStr !== '.' && currentStartStr !== ',') return \"Début invalide.\";\n        if (endVal === null && currentEndStr !== '' && currentEndStr !== '.' && currentEndStr !== ',') return \"Fin invalide.\";\n        if (startVal === null || endVal === null) return undefined; // Skip further checks if incomplete but parsable so far\n\n        if (endVal < startVal) return \"Fin < Début.\";\n\n        // Max Duration Check (Per Poste Limit - 8 hours)\n        const durationHours = endVal - startVal;\n         if (durationHours > MAX_HOURS_PER_POSTE) {\n             return `Durée max (${MAX_HOURS_PER_POSTE}h) dépassée (${durationHours.toFixed(2)}h).`;\n         }\n\n        // Sequential Validation (based on Poste order: 3ème -> 1er -> 2ème)\n        // Find the counter for the previous logical poste\n        let expectedPreviousFinStr: string | undefined | null = undefined;\n        let previousPosteName: string = '';\n\n         if (currentPoste === '1er') { // Current is 1er, check against previous day's 3ème\n             expectedPreviousFinStr = previousDayData;\n             previousPosteName = \"3ème (veille)\";\n             if (expectedPreviousFinStr === undefined) expectedPreviousFinStr = null; // Treat undefined prop as skip\n         } else if (currentPoste === '2ème') { // Current is 2ème, check against current day's 1er\n             const previousCounter = counters.find(c => c.poste === '1er' && c.id !== counterId);\n             expectedPreviousFinStr = previousCounter?.end;\n             previousPosteName = \"1er\";\n         } else if (currentPoste === '3ème') { // Current is 3ème, check against current day's 2ème\n             const previousCounter = counters.find(c => c.poste === '2ème' && c.id !== counterId);\n             expectedPreviousFinStr = previousCounter?.end;\n             previousPosteName = \"2ème\";\n         }\n\n\n        // Perform the check if an expected previous 'fin' value exists and is valid\n        if (expectedPreviousFinStr !== undefined && expectedPreviousFinStr !== null && currentStartStr !== '') {\n             // Check if expectedPreviousFinStr is a valid number representation\n             const expectedPreviousFinParsed = validateAndParseCounterValue(expectedPreviousFinStr);\n\n            if (expectedPreviousFinParsed === null) {\n                 // console.warn(`Previous counter's 'fin' value (${expectedPreviousFinStr}) is invalid or empty.`);\n                 // Decide if this should be an error or just skip the check\n                 // Option 1: Skip check (allows potentially incorrect start)\n                 // Option 2: Consider it an error (stricter, requires previous value to be valid)\n                 // Let's skip for now, assuming the user will fix the previous entry\n            } else if (startVal !== expectedPreviousFinParsed) {\n                 return `Début (${startVal}) doit correspondre à Fin (${expectedPreviousFinParsed}) du ${previousPosteName} Poste.`;\n             }\n        } else if (expectedPreviousFinStr === null && currentPoste === '1er') {\n             // Previous day data explicitly not available - OK for 1er poste start\n         } else if (expectedPreviousFinStr === undefined && currentPoste !== '1er') {\n             // Previous counter in the sequence not found or its 'fin' is empty.\n             // This might be okay if it's the first entry for that sequence (e.g., first 3ème or first 2ème).\n             // We allow it, assuming user might fill out of order.\n         }\n         // else: current 'start' is empty - skip sequence check.\n\n\n        return undefined; // No error\n   };\n\n\n    // Calculate total counter durations and check for errors whenever counters change\n    useEffect(() => {\n        // --- Vibrator Counters ---\n        let vibratorValidationPassed = true;\n        const newVibratorErrors: Record<string, string> = {};\n        const validVibratorCounters = vibratorCounters.filter(c => {\n            const error = validateCounterEntry(c.id, vibratorCounters, 'vibrator', c.start, c.end, c.poste, previousDayThirdShiftEnd);\n            if (error) {\n                newVibratorErrors[c.id] = error;\n                vibratorValidationPassed = false;\n                return false; // Exclude from total calculation if error\n            }\n            return true; // Valid entry for total calculation\n        });\n\n        setVibratorCounterErrors(newVibratorErrors); // Update error state\n        setHasVibratorErrors(!vibratorValidationPassed); // Set general error flag\n\n        const vibratorTotal = calculateTotalCounterMinutes(validVibratorCounters);\n        setTotalVibratorMinutes(vibratorTotal);\n\n        if (vibratorTotal > TOTAL_PERIOD_MINUTES) {\n             setHasVibratorErrors(true); // Also set error if total exceeds 24h\n             console.warn(\"Total vibreur duration exceeds 24h period.\");\n             // Add a general error message if needed\n             // newVibratorErrors['general'] = 'La durée totale des vibreurs dépasse 24h.';\n             // setVibratorCounterErrors(prev => ({ ...prev, ...newVibratorErrors }));\n        }\n\n\n        // --- Liaison Counters ---\n        let liaisonValidationPassed = true;\n        const newLiaisonErrors: Record<string, string> = {};\n        const validLiaisonCounters = liaisonCounters.filter(c => {\n             // Liaison validation doesn't need previous day data prop for its 1er poste check (uses same-day 3eme)\n             const error = validateCounterEntry(c.id, liaisonCounters, 'liaison', c.start, c.end, c.poste, undefined); // Pass undefined for prev day data\n              if (error) {\n                newLiaisonErrors[c.id] = error;\n                liaisonValidationPassed = false;\n                return false;\n            }\n            return true;\n        });\n\n        setLiaisonCounterErrors(newLiaisonErrors);\n        setHasLiaisonErrors(!liaisonValidationPassed);\n\n        const liaisonTotal = calculateTotalCounterMinutes(validLiaisonCounters);\n        setTotalLiaisonMinutes(liaisonTotal);\n\n        if (liaisonTotal > TOTAL_PERIOD_MINUTES) {\n             setHasLiaisonErrors(true); // Set error if total exceeds 24h\n             console.warn(\"Total liaison duration exceeds 24h period.\");\n              // Add a general error message if needed\n             // newLiaisonErrors['general'] = 'La durée totale des liaisons dépasse 24h.';\n             // setLiaisonCounterErrors(prev => ({ ...prev, ...newLiaisonErrors }));\n        }\n\n         // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [vibratorCounters, liaisonCounters, previousDayThirdShiftEnd]); // Dependencies\n\n\n   // Check for stock entry errors (poste selection)\n   // Calculate hasStockErrors directly based on stockEntries state\n    useEffect(() => {\n      const activeEntryNeedsPoste = stockEntries.some(entry =>\n          (entry.park || entry.type || entry.quantity || entry.startTime) && !entry.poste // Consider startTime as well\n      );\n      setHasStockErrors(activeEntryNeedsPoste);\n    }, [stockEntries]);\n\n\n  const addStop = () => {\n    setStops([...stops, { id: crypto.randomUUID(), duration: \"\", nature: \"\" }]);\n  };\n\n  // Updated addVibratorCounter to include poste\n  const addVibratorCounter = () => {\n    setVibratorCounters([...vibratorCounters, { id: crypto.randomUUID(), poste: \"\", start: \"\", end: \"\" }]);\n  };\n\n  // Function to add liaison counter - Updated to include poste\n  const addLiaisonCounter = () => {\n    setLiaisonCounters([...liaisonCounters, { id: crypto.randomUUID(), poste: \"\", start: \"\", end: \"\" }]);\n  };\n\n   // Function to add stock entry - includes poste\n   const addStockEntry = () => {\n        setStockEntries([...stockEntries, { id: crypto.randomUUID(), poste: '', park: '', type: '', quantity: '', startTime: '' }]);\n   };\n\n\n  const deleteStop = (id: string) => {\n    setStops(stops.filter(stop => stop.id !== id));\n  };\n\n  const deleteVibratorCounter = (id: string) => {\n    setVibratorCounters(vibratorCounters.filter(counter => counter.id !== id));\n     // Clean up errors for the deleted counter\n     setVibratorCounterErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[id];\n        return newErrors;\n      });\n  };\n\n   // Function to delete liaison counter\n  const deleteLiaisonCounter = (id: string) => {\n    setLiaisonCounters(liaisonCounters.filter(counter => counter.id !== id));\n     // Clean up errors for the deleted counter\n      setLiaisonCounterErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[id];\n        return newErrors;\n      });\n  };\n\n  // Function to delete stock entry\n  const deleteStockEntry = (id: string) => {\n    setStockEntries(stockEntries.filter(entry => entry.id !== id));\n  };\n\n // Update field type to exclude hm and ha\n const updateStop = (id: string, field: keyof Omit<Stop, 'id'>, value: string) => {\n    setStops(stops.map(stop => stop.id === id ? { ...stop, [field]: value } : stop));\n };\n\n\n // Updated updateVibratorCounter with validation and poste handling\n const updateVibratorCounter = (id: string, field: keyof Omit<Counter, 'id' | 'error'>, value: string) => {\n    setVibratorCounters(prevCounters => prevCounters.map(counter => {\n        if (counter.id === id) {\n            const updatedCounter = { ...counter, [field]: value };\n\n            // Clear specific error for this counter immediately when input changes\n            setVibratorCounterErrors(prevErrors => {\n                const newErrors = { ...prevErrors };\n                delete newErrors[id]; // Remove error for this counter\n                return newErrors;\n            });\n\n            // The useEffect hook will handle re-validation and updating the error state\n            return updatedCounter;\n        }\n        return counter;\n    }));\n };\n\n // Function to update liaison counter with validation and poste handling - Similar to updateVibratorCounter\n const updateLiaisonCounter = (id: string, field: keyof Omit<LiaisonCounter, 'id' | 'error'>, value: string) => {\n     setLiaisonCounters(prevCounters => prevCounters.map(counter => {\n         if (counter.id === id) {\n             const updatedCounter = { ...counter, [field]: value };\n\n             // Clear specific error for this counter immediately\n             setLiaisonCounterErrors(prevErrors => {\n                 const newErrors = { ...prevErrors };\n                 delete newErrors[id]; // Remove error for this counter\n                 return newErrors;\n             });\n\n             // Re-validation happens in useEffect\n             return updatedCounter;\n         }\n         return counter;\n    }));\n };\n\n\n // Function to update stock entry - simplified, includes poste\n const updateStockEntry = (id: string, field: keyof Omit<StockEntry, 'id'>, value: string | boolean, parkOrType?: Park | StockType) => {\n    setStockEntries(stockEntries.map(entry => {\n      if (entry.id === id) {\n         const updatedEntry = { ...entry, [field]: value };\n\n         // Reset dependent fields or validate poste\n         if (field === 'poste') {\n             updatedEntry.park = ''; // Reset park, type, quantity when poste changes\n             updatedEntry.type = '';\n             updatedEntry.quantity = '';\n             updatedEntry.startTime = ''; // Also reset startTime if applicable?\n         } else if (field === 'park') {\n             updatedEntry.type = ''; // Reset type/quantity when park changes\n             updatedEntry.quantity = '';\n              updatedEntry.startTime = ''; // Reset start time if park changes\n              // If park is unchecked, clear park field\n              if (value === false) updatedEntry.park = '';\n         } else if (field === 'type') {\n            updatedEntry.quantity = ''; // Reset quantity when type changes\n             updatedEntry.startTime = ''; // Reset start time if type changes\n              // If type is unchecked, clear type field\n              if (value === false) updatedEntry.type = '';\n         } else if (field === 'startTime') {\n              // Maybe reset other fields if start time is the primary identifier?\n              updatedEntry.park = '';\n              updatedEntry.type = '';\n              updatedEntry.quantity = '';\n               // If startTime checkbox is unchecked (value becomes false or empty string), clear startTime\n              if (!value) updatedEntry.startTime = '';\n               // If startTime checkbox is checked, ensure it has a default or previous value\n              else if (typeof value === 'boolean' && value === true) {\n                   // This case is tricky, maybe set to '00:00' or retain previous? Let's retain for now if exists.\n                  updatedEntry.startTime = entry.startTime || '00:00';\n              } else if (typeof value === 'string') {\n                   updatedEntry.startTime = value; // Update with the time input value\n              }\n         }\n\n         return updatedEntry;\n      }\n      return entry;\n    }));\n  };\n\n  // Handle form submission - Prevent if counter or stock errors exist\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Explicitly check the general error flags which are updated by useEffect\n     if (hasVibratorErrors || hasLiaisonErrors || hasStockErrors) {\n        console.error(\"Validation failed: Invalid inputs detected in counters or stock.\");\n        toast({ title: \"Erreur de Validation\", description: \"Veuillez corriger les erreurs dans les formulaires.\", variant: \"destructive\" });\n\n        // Focus the first input with an error\n        const firstErrorIdVibrator = Object.keys(vibratorCounterErrors).find(id => vibratorCounterErrors[id]);\n        if (firstErrorIdVibrator) {\n            const el = document.getElementById(`vibrator-poste-trigger-${firstErrorIdVibrator}`) ||\n                       document.getElementById(`vibrator-start-${firstErrorIdVibrator}`) ||\n                       document.getElementById(`vibrator-end-${firstErrorIdVibrator}`);\n            el?.focus();\n            return;\n        }\n        const firstErrorIdLiaison = Object.keys(liaisonCounterErrors).find(id => liaisonCounterErrors[id]);\n         if (firstErrorIdLiaison) {\n             const el = document.getElementById(`liaison-poste-trigger-${firstErrorIdLiaison}`) ||\n                        document.getElementById(`liaison-start-${firstErrorIdLiaison}`) ||\n                        document.getElementById(`liaison-end-${firstErrorIdLiaison}`);\n             el?.focus();\n            return;\n         }\n         const firstStockErrorEntry = stockEntries.find(entry => (entry.park || entry.type || entry.quantity || entry.startTime) && !entry.poste);\n         if (firstStockErrorEntry) {\n             document.getElementById(`stock-poste-trigger-${firstStockErrorEntry.id}`)?.focus();\n             return;\n         }\n        return; // Stop submission\n    }\n\n    // If validation passes, proceed with submission logic\n    console.log(\"Submitting Activity Report:\", {\n        stops,\n        vibratorCounters, // Submit validated counters\n        liaisonCounters, // Submit validated counters\n        stockEntries, // Submit validated stock entries\n        totalDowntime,\n        operatingTime,\n        totalVibratorMinutes, // Submit calculated totals\n        totalLiaisonMinutes, // Submit calculated totals\n    });\n    toast({ title: \"Succès\", description: \"Rapport soumis avec succès.\" });\n    // TODO: Replace console.log with actual API call or state management update\n    // e.g., await submitActivityReport({ ... });\n  };\n\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          RAPPORT D'ACTIVITÉ TNR\n        </CardTitle>\n        {/* Display the formatted date from the prop */}\n        <span className=\"text-sm text-muted-foreground\">{formattedDate}</span>\n      </CardHeader>\n\n      {/* Wrap content in a form */}\n       <form onSubmit={handleSubmit}>\n            <CardContent className=\"p-0 space-y-6\"> {/* Added space-y-6 */}\n\n                {/* Arrêts Section */}\n                <div className=\"space-y-4 p-4 border rounded-lg bg-card\"> {/* Replaced mb-6 and added styling */}\n                    <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-semibold text-lg text-foreground\">Arrêts</h3>\n                        <Button variant=\"link\" type=\"button\" onClick={addStop} className=\"text-primary text-sm p-0 h-auto\">\n                            <Plus className=\"h-4 w-4 mr-1\" /> Ajouter Arrêt\n                        </Button>\n                    </div>\n\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                            <TableHeader className=\"bg-muted/50\">\n                                <TableRow>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[120px]\">\n                                    Durée (ex: 1h 30)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Nature\n                                </TableHead>\n                                <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {stops.map((stop) => (\n                                <TableRow key={stop.id} className=\"hover:bg-muted/50\">\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        type=\"text\"\n                                        className=\"w-full h-8 text-sm\" // w-24 removed -> w-full\n                                        placeholder=\"ex: 1h 30\"\n                                        value={stop.duration}\n                                        onChange={(e) =>\n                                        updateStop(stop.id, \"duration\", e.target.value)\n                                        }\n                                    />\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        type=\"text\"\n                                        className=\"w-full h-8 text-sm\"\n                                        value={stop.nature}\n                                        onChange={(e) =>\n                                        updateStop(stop.id, \"nature\", e.target.value)\n                                        }\n                                    />\n                                    </TableCell>\n                                    <TableCell className=\"p-2 text-right\">\n                                    <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        type=\"button\" // Prevent form submission\n                                        onClick={() => deleteStop(stop.id)}\n                                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                                    >\n                                        <Trash className=\"h-4 w-4\" />\n                                        <span className=\"sr-only\">Supprimer</span>\n                                    </Button>\n                                    </TableCell>\n                                </TableRow>\n                                ))}\n                                {stops.length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={3} className=\"text-center text-muted-foreground p-4\">\n                                            Aucun arrêt ajouté.\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n                        Total Arrêts: <strong>{formatMinutesToHoursMinutes(totalDowntime)}</strong>\n                    </div>\n                </div>\n\n                {/* Operating Time Display */}\n                <div className=\"p-4 border rounded-lg bg-muted/30\">\n                    {/* Updated Label */}\n                    <h3 className=\"font-semibold text-lg text-foreground mb-2\">Temps de Fonctionnement (24h - Arrêts)</h3>\n                    <div className=\"space-y-1\">\n                        <Label htmlFor=\"total-operating-tnr\" className=\"text-sm text-muted-foreground\">\n                            Temps de Fonctionnement Estimé\n                        </Label>\n                        <Input id=\"total-operating-tnr\" type=\"text\" value={formatMinutesToHoursMinutes(operatingTime)} className=\"h-9 bg-input font-medium\" readOnly tabIndex={-1}/>\n                    </div>\n                </div>\n\n\n                {/* Compteurs Vibreurs Section */}\n                <div className=\"space-y-4 p-4 border rounded-lg bg-card\"> {/* Replaced mb-6 and added styling */}\n                    <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-semibold text-lg text-foreground\">Compteurs Vibreurs</h3>\n                        <Button variant=\"link\" type=\"button\" className=\"text-primary text-sm p-0 h-auto\" onClick={addVibratorCounter}>\n                            <Plus className=\"h-4 w-4 mr-1\" /> Ajouter Vibreur\n                        </Button>\n                    </div>\n                    {/* General Error Alert for Vibrator Counters */}\n                    {hasVibratorErrors && (\n                        <Alert variant=\"destructive\" className=\"mt-2\">\n                            <AlertCircle className=\"h-4 w-4\" />\n                            <AlertDescription>\n                                Erreur(s) dans les compteurs vibreurs. Vérifiez les postes, la continuité et les valeurs (Fin ≥ Début, Durée max {MAX_HOURS_PER_POSTE}h/poste, Total ≤ 24h). {/* Updated error message */}\n                            </AlertDescription>\n                        </Alert>\n                    )}\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                            <TableHeader className=\"bg-muted/50\">\n                                <TableRow>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\"> {/* Added width */}\n                                    Poste\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Début (ex: 9341.0)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Fin (ex: 9395.3)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {vibratorCounters.map((counter) => (\n                                <TableRow key={counter.id} className=\"hover:bg-muted/50\">\n                                     <TableCell className=\"p-2\"> {/* Cell for Poste Select */}\n                                        <Select\n                                            value={counter.poste}\n                                            onValueChange={(value: Poste) => updateVibratorCounter(counter.id, \"poste\", value)}\n                                            >\n                                            <SelectTrigger id={`vibrator-poste-trigger-${counter.id}`} className={cn(\"h-8 text-sm\", vibratorCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}>\n                                                <SelectValue placeholder=\"Sélectionner\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {POSTE_ORDER.map(p => (\n                                                    <SelectItem key={p} value={p}>\n                                                        {p} Poste ({POSTE_TIMES[p]})\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                         {vibratorCounterErrors[counter.id]?.includes(\"poste\") && <p className=\"text-xs text-destructive pt-1\">{vibratorCounterErrors[counter.id]}</p>}\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        id={`vibrator-start-${counter.id}`} // Add ID for focusing\n                                        type=\"text\" // Use text to allow different formats initially\n                                        inputMode=\"decimal\" // Hint for mobile keyboards\n                                        className={cn(\"w-full h-8 text-sm\", vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}\n                                        value={counter.start}\n                                        placeholder=\"Index début\"\n                                        onChange={(e) =>\n                                        updateVibratorCounter(counter.id, \"start\", e.target.value)\n                                        }\n                                        aria-invalid={!!vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\")}\n                                        aria-describedby={vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") ? `error-vibrator-${counter.id}` : undefined}\n                                    />\n                                     {vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") && <p id={`error-vibrator-${counter.id}`} className=\"text-xs text-destructive pt-1\">{vibratorCounterErrors[counter.id]}</p>}\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        id={`vibrator-end-${counter.id}`} // Add ID for focusing\n                                        type=\"text\" // Use text to allow different formats initially\n                                        inputMode=\"decimal\"\n                                        className={cn(\"w-full h-8 text-sm\", vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}\n                                        value={counter.end}\n                                        placeholder=\"Index fin\"\n                                        onChange={(e) =>\n                                        updateVibratorCounter(counter.id, \"end\", e.target.value)\n                                        }\n                                         aria-invalid={!!vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\")}\n                                         aria-describedby={vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") ? `error-vibrator-${counter.id}-end` : undefined}\n                                    />\n                                    {/* Display error inline only if error exists and is NOT related to poste selection */}\n                                    {vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") ? <p id={`error-vibrator-${counter.id}-end`} className=\"text-xs text-destructive pt-1\">{vibratorCounterErrors[counter.id]}</p> : null}\n                                    </TableCell>\n                                    <TableCell className=\"p-2 text-right\">\n                                    <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        type=\"button\" // Prevent form submission\n                                        onClick={() => deleteVibratorCounter(counter.id)}\n                                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                                    >\n                                        <Trash className=\"h-4 w-4\" />\n                                        <span className=\"sr-only\">Supprimer</span>\n                                    </Button>\n                                    </TableCell>\n                                </TableRow>\n                                ))}\n                                {vibratorCounters.length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={4} className=\"text-center text-muted-foreground p-4\"> {/* Updated colSpan */}\n                                            Aucun compteur vibreur ajouté.\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    {/* Display Total Vibreur Duration */}\n                    <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n                        Durée Totale Vibreurs: <strong>{formatMinutesToHoursMinutes(totalVibratorMinutes)}</strong>\n                    </div>\n                </div>\n\n                {/* Compteurs LIAISON Section */}\n                <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n                    <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-semibold text-lg text-foreground\">Compteurs LIAISON</h3>\n                        <Button variant=\"link\" type=\"button\" className=\"text-primary text-sm p-0 h-auto\" onClick={addLiaisonCounter}>\n                            <Plus className=\"h-4 w-4 mr-1\" /> Ajouter Liaison\n                        </Button>\n                    </div>\n                     {/* General Error Alert for Liaison Counters */}\n                     {hasLiaisonErrors && (\n                        <Alert variant=\"destructive\" className=\"mt-2\">\n                            <AlertCircle className=\"h-4 w-4\" />\n                             <AlertDescription>\n                                Erreur(s) dans les compteurs liaison. Vérifiez les postes, la continuité et les valeurs (Fin ≥ Début, Durée max {MAX_HOURS_PER_POSTE}h/poste, Total ≤ 24h). {/* Updated error message */}\n                            </AlertDescription>\n                        </Alert>\n                    )}\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                            <TableHeader className=\"bg-muted/50\">\n                                <TableRow>\n                                 <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\"> {/* Added width */}\n                                    Poste\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Début (ex: 100.5)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Fin (ex: 105.75)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {liaisonCounters.map((counter) => (\n                                <TableRow key={counter.id} className=\"hover:bg-muted/50\">\n                                     <TableCell className=\"p-2\"> {/* Cell for Poste Select */}\n                                        <Select\n                                            value={counter.poste}\n                                            onValueChange={(value: Poste) => updateLiaisonCounter(counter.id, \"poste\", value)}\n                                            >\n                                            <SelectTrigger id={`liaison-poste-trigger-${counter.id}`} className={cn(\"h-8 text-sm\", liaisonCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}>\n                                                <SelectValue placeholder=\"Sélectionner\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {POSTE_ORDER.map(p => (\n                                                    <SelectItem key={p} value={p}>\n                                                        {p} Poste ({POSTE_TIMES[p]})\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                         {liaisonCounterErrors[counter.id]?.includes(\"poste\") && <p className=\"text-xs text-destructive pt-1\">{liaisonCounterErrors[counter.id]}</p>}\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        id={`liaison-start-${counter.id}`} // Add ID\n                                        type=\"text\" // Use text to allow different formats initially\n                                        inputMode=\"decimal\"\n                                        className={cn(\"w-full h-8 text-sm\", liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}\n                                        value={counter.start}\n                                        placeholder=\"Index début\"\n                                        onChange={(e) =>\n                                        updateLiaisonCounter(counter.id, \"start\", e.target.value)\n                                        }\n                                        aria-invalid={!!liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\")}\n                                        aria-describedby={liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") ? `error-liaison-${counter.id}` : undefined}\n                                    />\n                                    {liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") && <p id={`error-liaison-${counter.id}`} className=\"text-xs text-destructive pt-1\">{liaisonCounterErrors[counter.id]}</p>}\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        id={`liaison-end-${counter.id}`} // Add ID\n                                        type=\"text\" // Use text to allow different formats initially\n                                        inputMode=\"decimal\"\n                                        className={cn(\"w-full h-8 text-sm\", liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}\n                                        value={counter.end}\n                                        placeholder=\"Index fin\"\n                                        onChange={(e) =>\n                                        updateLiaisonCounter(counter.id, \"end\", e.target.value)\n                                        }\n                                        aria-invalid={!!liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\")}\n                                        aria-describedby={liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") ? `error-liaison-${counter.id}-end` : undefined}\n                                    />\n                                     {/* Display error inline only if error exists and is NOT related to poste selection */}\n                                     {liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") ? <p id={`error-liaison-${counter.id}-end`} className=\"text-xs text-destructive pt-1\">{liaisonCounterErrors[counter.id]}</p> : null }\n                                    </TableCell>\n                                    <TableCell className=\"p-2 text-right\">\n                                    <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        type=\"button\" // Prevent form submission\n                                        onClick={() => deleteLiaisonCounter(counter.id)}\n                                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                                    >\n                                        <Trash className=\"h-4 w-4\" />\n                                        <span className=\"sr-only\">Supprimer</span>\n                                    </Button>\n                                    </TableCell>\n                                </TableRow>\n                                ))}\n                                {liaisonCounters.length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={4} className=\"text-center text-muted-foreground p-4\"> {/* Updated colSpan */}\n                                            Aucun compteur liaison ajouté.\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    {/* Display Total Liaison Duration */}\n                    <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n                        Durée Totale Liaison: <strong>{formatMinutesToHoursMinutes(totalLiaisonMinutes)}</strong>\n                    </div>\n                </div>\n\n\n                {/* Stock Section - Simplified */}\n                <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n                    <div className=\"flex justify-between items-center mb-4\">\n                        <h3 className=\"font-semibold text-lg text-foreground\">Stock</h3>\n                        <Button variant=\"link\" type=\"button\" className=\"text-primary text-sm p-0 h-auto\" onClick={addStockEntry}>\n                        <Plus className=\"h-4 w-4 mr-1\" /> Ajouter Entrée Stock\n                        </Button>\n                    </div>\n                     {/* General Error Alert for Stock */}\n                    {hasStockErrors && (\n                        <Alert variant=\"destructive\" className=\"mt-2\">\n                            <AlertCircle className=\"h-4 w-4\" />\n                            <AlertDescription>\n                                Erreur(s) dans les entrées de stock. Veuillez sélectionner un poste pour chaque entrée active.\n                            </AlertDescription>\n                        </Alert>\n                    )}\n\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                        <TableHeader className=\"bg-muted/50\">\n                            <TableRow>\n                            <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\">Poste</TableHead>{/* Added Poste Head */}\n                            <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\">PARK</TableHead>\n                            <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[250px]\">Type Produit / Info</TableHead>{/* Merged Type/Time */}\n                            <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">Quantité / Heure</TableHead>{/* Merged Quantity/Time */}\n                            <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {stockEntries.map((entry) => {\n                                // Calculate error dynamically for each entry\n                                const entryError = (entry.park || entry.type || entry.quantity || entry.startTime) && !entry.poste ? \"Veuillez sélectionner un poste.\" : undefined;\n                                return (\n                                    <TableRow key={entry.id} className=\"hover:bg-muted/50\">\n                                        {/* Poste Selection Cell */}\n                                        <TableCell className=\"p-2 align-top\">\n                                            <Select\n                                                value={entry.poste}\n                                                onValueChange={(value: Poste) => updateStockEntry(entry.id, \"poste\", value)}\n                                            >\n                                                <SelectTrigger id={`stock-poste-trigger-${entry.id}`} className={cn(\"h-8 text-sm w-[130px]\", entryError && \"border-destructive focus-visible:ring-destructive\")}>\n                                                    <SelectValue placeholder=\"Poste\" />\n                                                </SelectTrigger>\n                                                <SelectContent>\n                                                    {POSTE_ORDER.map(p => (\n                                                        <SelectItem key={p} value={p}>\n                                                            {p} Poste\n                                                        </SelectItem>\n                                                    ))}\n                                                </SelectContent>\n                                            </Select>\n                                            {entryError && <p className=\"text-xs text-destructive pt-1\">{entryError}</p>}\n                                        </TableCell>\n                                        {/* Park Checkboxes */}\n                                        <TableCell className=\"p-2 align-top\">\n                                        <div className=\"space-y-2\">\n                                            {PARKS.map(park => (\n                                            <div key={park} className=\"flex items-center space-x-2\">\n                                                <Checkbox\n                                                id={`${entry.id}-${park}`}\n                                                checked={entry.park === park}\n                                                disabled={!entry.poste} // Disable if no poste selected\n                                                onCheckedChange={(checked) => updateStockEntry(entry.id, 'park', checked ? park : false, park)} // Pass false to clear\n                                                />\n                                                <Label htmlFor={`${entry.id}-${park}`} className={`font-normal text-sm ${!entry.poste ? 'text-muted-foreground' : ''}`}>{park}</Label>\n                                            </div>\n                                            ))}\n                                        </div>\n                                        </TableCell>\n                                        {/* Type / Start Time Checkboxes */}\n                                        <TableCell className=\"p-2 align-top\">\n                                            <div className=\"space-y-2\">\n                                                {/* Product Types */}\n                                                {STOCK_TYPES.map(type => (\n                                                <div key={type} className=\"flex items-center space-x-2\">\n                                                    <Checkbox\n                                                    id={`${entry.id}-${type}`}\n                                                    checked={entry.type === type}\n                                                    disabled={!entry.poste || !entry.park || !!entry.startTime} // Disable if no poste/park or if startTime is checked\n                                                    onCheckedChange={(checked) => updateStockEntry(entry.id, 'type', checked ? type : false, type)} // Pass false to clear\n                                                    />\n                                                    <Label htmlFor={`${entry.id}-${type}`} className={`font-normal text-sm ${!entry.poste || !entry.park || !!entry.startTime ? 'text-muted-foreground' : ''}`}>{type}</Label>\n                                                </div>\n                                                ))}\n                                                {/* HEURE DEBUT STOCK */}\n                                                 <div key={STOCK_TIME_LABEL} className=\"flex items-center space-x-2\">\n                                                    <Checkbox\n                                                        id={`${entry.id}-startTime`}\n                                                        // Check if startTime has a value to determine checked state\n                                                        checked={!!entry.startTime}\n                                                        disabled={!entry.poste || !!entry.park || !!entry.type} // Disable if no poste or if park/type is selected\n                                                        onCheckedChange={(checked) => updateStockEntry(entry.id, 'startTime', checked ? (entry.startTime || '00:00') : false, undefined)} // Pass false to clear\n                                                    />\n                                                    <Label htmlFor={`${entry.id}-startTime`} className={`font-normal text-sm ${!entry.poste || !!entry.park || !!entry.type ? 'text-muted-foreground' : ''}`}>{STOCK_TIME_LABEL}</Label>\n                                                </div>\n                                            </div>\n                                        </TableCell>\n                                        {/* Quantity / Time Input */}\n                                        <TableCell className=\"p-2 align-top\">\n                                            {/* Show Quantity input only if a type is selected */}\n                                            {entry.type && (\n                                                <Input\n                                                    type=\"number\"\n                                                    step=\"0.01\" // Allow decimals\n                                                    min=\"0\"\n                                                    className=\"w-full h-8 text-sm mt-1\" // Align with checkboxes\n                                                    placeholder=\"Quantité\"\n                                                    value={entry.quantity}\n                                                    disabled={!entry.poste || !entry.type} // Disable if no poste or type selected\n                                                    onChange={(e) => updateStockEntry(entry.id, \"quantity\", e.target.value)}\n                                                />\n                                            )}\n                                            {/* Show Time input only if startTime checkbox is checked */}\n                                            {!!entry.startTime && (\n                                                 <Input\n                                                    type=\"time\"\n                                                    className=\"w-full h-8 text-sm mt-1\" // Align with checkboxes\n                                                    value={entry.startTime}\n                                                    disabled={!entry.poste || !!entry.park || !!entry.type} // Disable if no poste or park/type selected\n                                                    onChange={(e) => updateStockEntry(entry.id, \"startTime\", e.target.value)}\n                                                />\n                                            )}\n                                        </TableCell>\n                                        {/* Delete Button */}\n                                        <TableCell className=\"p-2 text-right align-top\">\n                                        <Button\n                                            variant=\"ghost\"\n                                            size=\"icon\"\n                                            type=\"button\" // Prevent form submission\n                                            onClick={() => deleteStockEntry(entry.id)}\n                                            className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8 mt-1\" // Align with checkboxes\n                                        >\n                                            <Trash className=\"h-4 w-4\" />\n                                            <span className=\"sr-only\">Supprimer</span>\n                                        </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                            {stockEntries.length === 0 && (\n                                <TableRow>\n                                    <TableCell colSpan={5} className=\"text-center text-muted-foreground p-4\"> {/* Updated colSpan */}\n                                        Aucune entrée de stock ajoutée.\n                                    </TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                        </Table>\n                    </div>\n                </div>\n\n\n                {/* Action Buttons */}\n                <div className=\"mt-8 flex justify-end space-x-3\"> {/* Added margin-top */}\n                    <Button type=\"button\" variant=\"outline\">Enregistrer Brouillon</Button> {/* Changed to type=\"button\" */}\n                    <Button type=\"submit\" disabled={hasVibratorErrors || hasLiaisonErrors || hasStockErrors}> {/* Disable submit if errors */}\n                        Soumettre Rapport\n                    </Button> {/* Disable submit if errors */}\n                </div>\n            </CardContent>\n        </form>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4365, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4435, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 4470, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/TruckTracking.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Table, TableBody, TableCaption, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Textarea } from \"@/components/ui/textarea\"; // Import Textarea\nimport { Plus, Trash2 } from \"lucide-react\"; // Import icons\n\ninterface TruckTrackingProps {\n  selectedDate: Date; // Changed prop name and kept type as Date\n}\n\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\ninterface TruckData {\n    id: string;\n    truckNumber: string;\n    driver: string;\n    counts: string[]; // Array for 15 counts\n    tSud: string;\n    tNord: string;\n    stock: string;\n    total: string; // Should this be calculated?\n    hour: string;\n    location: string;\n}\n\ninterface GeneralInfo {\n  direction: string;\n  division: string;\n  oibEe: string;\n  mine: string;\n  sortie: string;\n  distance: string;\n  qualite: string;\n  machineEngins: string;\n  arretsExplication: string; // Added field for stop explanations\n}\n\n\nexport function TruckTracking({ selectedDate }: TruckTrackingProps) { // Updated prop name\n  const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Default to 1er Poste\n  const [generalInfo, setGeneralInfo] = useState<GeneralInfo>({\n    direction: \"phosboucraa\",\n    division: \"Extraction\",\n    oibEe: \"\",\n    mine: \"\",\n    sortie: \"\",\n    distance: \"\",\n    qualite: \"\",\n    machineEngins: \"\",\n    arretsExplication: \"\", // Initialize explanation field\n  });\n\n  const [truckData, setTruckData] = useState<TruckData[]>([\n    {\n      id: crypto.randomUUID(),\n      truckNumber: \"\",\n      driver: \"\",\n      counts: Array(15).fill(\"\"),\n      tSud: \"\",\n      tNord: \"\",\n      stock: \"\",\n      total: \"\", // Will be calculated\n      hour: \"\",\n      location: \"\",\n    },\n  ]);\n\n    // Format date string once using the selectedDate prop\n    const formattedDate = selectedDate.toLocaleDateString(\"fr-FR\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n    });\n\n    const handleGeneralInfoChange = (\n        e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, // Allow Textarea\n        field: keyof GeneralInfo\n    ) => {\n        setGeneralInfo(prev => ({ ...prev, [field]: e.target.value }));\n    };\n\n  const addTruck = () => {\n    setTruckData([\n      ...truckData,\n      {\n        id: crypto.randomUUID(),\n        truckNumber: \"\",\n        driver: \"\",\n        counts: Array(15).fill(\"\"),\n        tSud: \"\",\n        tNord: \"\",\n        stock: \"\",\n        total: \"\", // Will be calculated\n        hour: \"\",\n        location: \"\",\n      },\n    ]);\n  };\n\n const updateTruckData = (\n    id: string,\n    field: keyof Omit<TruckData, 'id' | 'counts' | 'total'> | 'counts', // Exclude calculated total\n    value: string,\n    countIndex?: number // Only needed if field is 'counts'\n  ) => {\n    setTruckData(prevData =>\n      prevData.map(truck => {\n        if (truck.id === id) {\n           let updatedTruck = { ...truck };\n          if (field === 'counts' && countIndex !== undefined) {\n            const newCounts = [...truck.counts];\n            newCounts[countIndex] = value;\n            updatedTruck = { ...updatedTruck, counts: newCounts };\n          } else if (field !== 'counts') {\n             // Assign value using the field name as key\n             (updatedTruck as any)[field] = value;\n          }\n           // Recalculate total after update\n           updatedTruck.total = calculateTotal(updatedTruck);\n           return updatedTruck;\n        }\n        return truck;\n      })\n    );\n  };\n\n\n   const deleteTruck = (id: string) => {\n        setTruckData(truckData.filter(truck => truck.id !== id));\n    };\n\n  // Calculation for total (sum of counts, tSud, tNord, stock) - ensures valid numbers\n    const calculateTotal = (truck: TruckData): string => {\n        const countsSum = truck.counts.reduce((acc, count) => {\n            const num = parseInt(count, 10);\n            return acc + (isNaN(num) ? 0 : num); // Add 0 if count is not a valid number\n        }, 0);\n        const tSudNum = parseInt(truck.tSud, 10);\n        const tNordNum = parseInt(truck.tNord, 10);\n        const stockNum = parseInt(truck.stock, 10);\n\n        // Add 0 if parsing results in NaN\n        return (\n            countsSum +\n            (isNaN(tSudNum) ? 0 : tSudNum) +\n            (isNaN(tNordNum) ? 0 : tNordNum) +\n            (isNaN(stockNum) ? 0 : stockNum)\n        ).toString();\n    };\n\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          POINTAGE DES CAMIONS\n        </CardTitle>\n        {/* Display the formatted date from the prop */}\n        <span className=\"text-sm text-muted-foreground\">{formattedDate}</span>\n      </CardHeader>\n\n      <CardContent className=\"p-0 space-y-6\"> {/* Added space-y-6 */}\n\n        {/* Poste Selection */}\n         <div className=\"space-y-2\">\n            <Label className=\"text-foreground\">Poste</Label>\n            <RadioGroup\n              value={selectedPoste} // Controlled component\n              onValueChange={(value: Poste) => setSelectedPoste(value)}\n              className=\"flex flex-wrap space-x-4 pt-2\"\n            >\n              {POSTE_ORDER.map((poste) => ( // Use defined order\n                <div key={poste} className=\"flex items-center space-x-2 mb-2\">\n                  <RadioGroupItem value={poste} id={`truck-poste-${poste}`} />\n                  <Label htmlFor={`truck-poste-${poste}`} className=\"font-normal text-foreground\">\n                    {poste} Poste <span className=\"text-muted-foreground text-xs\">({POSTE_TIMES[poste]})</span>\n                  </Label>\n                </div>\n              ))}\n            </RadioGroup>\n          </div>\n\n\n        <div className=\"space-y-3 p-4 border rounded-lg\"> {/* Replaced mb-6 and added styling */}\n          <h3 className=\"font-semibold text-lg text-foreground\">\n            Informations Générales\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div>\n              <Label htmlFor=\"direction\" className=\"block text-muted-foreground text-sm mb-1\">\n                Direction\n              </Label>\n              <Input id=\"direction\" name=\"direction\" type=\"text\" value={generalInfo.direction} onChange={(e) => handleGeneralInfoChange(e, 'direction')} className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"division\" className=\"block text-muted-foreground text-sm mb-1\">\n                Division\n              </Label>\n              <Input id=\"division\" name=\"division\" type=\"text\" value={generalInfo.division} onChange={(e) => handleGeneralInfoChange(e, 'division')} className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"oib-ee\" className=\"block text-muted-foreground text-sm mb-1\">OIB/EE</Label>\n              <Input id=\"oib-ee\" name=\"oibEe\" type=\"text\" value={generalInfo.oibEe} onChange={(e) => handleGeneralInfoChange(e, 'oibEe')} className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"mine\" className=\"block text-muted-foreground text-sm mb-1\">Mine</Label>\n              <Input id=\"mine\" name=\"mine\" type=\"text\" value={generalInfo.mine} onChange={(e) => handleGeneralInfoChange(e, 'mine')} className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"sortie\" className=\"block text-muted-foreground text-sm mb-1\">Sortie</Label>\n              <Input id=\"sortie\" name=\"sortie\" type=\"text\" value={generalInfo.sortie} onChange={(e) => handleGeneralInfoChange(e, 'sortie')} className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"distance\" className=\"block text-muted-foreground text-sm mb-1\">\n                Distance\n              </Label>\n              <Input id=\"distance\" name=\"distance\" type=\"text\" value={generalInfo.distance} onChange={(e) => handleGeneralInfoChange(e, 'distance')} className=\"h-9\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"qualite\" className=\"block text-muted-foreground text-sm mb-1\">\n                Qualité\n              </Label>\n              <Input id=\"qualite\" name=\"qualite\" type=\"text\" value={generalInfo.qualite} onChange={(e) => handleGeneralInfoChange(e, 'qualite')} className=\"h-9\"/>\n            </div>\n             <div className=\"md:col-span-2\">\n              <Label htmlFor=\"machine-engins-track\" className=\"block text-muted-foreground text-sm mb-1\">\n                Machine ou Engins\n              </Label>\n              <Input id=\"machine-engins-track\" name=\"machineEngins\" type=\"text\" value={generalInfo.machineEngins} onChange={(e) => handleGeneralInfoChange(e, 'machineEngins')} className=\"h-9\"/>\n            </div>\n          </div>\n        </div>\n\n         {/* Section: Explication des Arrêts */}\n         <div className=\"space-y-2 p-4 border rounded-lg\"> {/* Added styling */}\n             <Label htmlFor=\"truck-arrets-explication\" className=\"font-semibold text-lg text-foreground\">Explication des Arrêts (si applicable)</Label>\n             <Textarea\n                id=\"truck-arrets-explication\"\n                name=\"arretsExplication\"\n                placeholder=\"Expliquez ici les arrêts éventuels ayant impacté le pointage...\"\n                value={generalInfo.arretsExplication}\n                onChange={(e) => handleGeneralInfoChange(e, 'arretsExplication')}\n                className=\"min-h-[80px]\" // Adjusted height\n             />\n        </div>\n\n        <div className=\"space-y-3 p-4 border rounded-lg\"> {/* Added styling */}\n          <h3 className=\"font-semibold text-lg text-foreground\">\n            Tableau de Pointage\n          </h3>\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader className=\"bg-muted/50\">\n                <TableRow>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground sticky left-0 bg-muted/50 z-10 w-[80px]\">\n                    N° Camion\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground sticky left-[80px] bg-muted/50 z-10 w-[150px]\">\n                    Conducteur\n                  </TableHead>\n                  {/* Count Headers */}\n                  {Array.from({ length: 15 }, (_, i) => (\n                    <TableHead\n                      key={i}\n                      className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[50px]\"\n                    >\n                      {i + 1}\n                    </TableHead>\n                  ))}\n                  {/* Summary Headers */}\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[60px]\">\n                    T.sud\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[60px]\">\n                    T.nord\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[60px]\">\n                    Stock\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[70px] font-semibold\">\n                    Total\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[70px]\">\n                    Heure\n                  </TableHead>\n                  <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground w-[80px]\">\n                    Lieu\n                  </TableHead>\n                   <TableHead className=\"p-2 text-center text-xs font-medium text-muted-foreground sticky right-0 bg-muted/50 z-10 w-[50px]\">\n                    {/* Actions */}\n                  </TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {truckData.map((truck) => (\n                  <TableRow key={truck.id} className=\"border-b hover:bg-muted/50 h-10\">\n                    {/* Sticky Truck Number */}\n                    <TableCell className=\"p-1 sticky left-0 bg-card hover:bg-muted/50 z-10\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm min-w-[60px]\"\n                        value={truck.truckNumber}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"truckNumber\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    {/* Sticky Driver */}\n                     <TableCell className=\"p-1 sticky left-[80px] bg-card hover:bg-muted/50 z-10\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm min-w-[130px]\"\n                        value={truck.driver}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"driver\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    {/* Count Inputs */}\n                    {truck.counts.map((count, i) => (\n                      <TableCell key={i} className=\"p-1\">\n                        <Input\n                          type=\"text\" // Keep as text to allow empty input initially\n                          inputMode=\"numeric\" // Hint for mobile keyboards\n                          className=\"w-full h-8 text-sm text-center min-w-[40px]\"\n                          value={count}\n                          onChange={(e) =>\n                            updateTruckData(truck.id, \"counts\", e.target.value, i)\n                          }\n                        />\n                      </TableCell>\n                    ))}\n                    {/* Summary Inputs */}\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\" inputMode=\"numeric\"\n                        className=\"w-full h-8 text-sm text-center min-w-[50px]\"\n                        value={truck.tSud}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"tSud\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\" inputMode=\"numeric\"\n                        className=\"w-full h-8 text-sm text-center min-w-[50px]\"\n                        value={truck.tNord}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"tNord\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\" inputMode=\"numeric\"\n                        className=\"w-full h-8 text-sm text-center min-w-[50px]\"\n                        value={truck.stock}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"stock\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    {/* Calculated Total (Read Only) */}\n                     <TableCell className=\"p-1 font-semibold text-center align-middle\">\n                         {truck.total}\n                    </TableCell>\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\" // Consider type=\"time\"?\n                        className=\"w-full h-8 text-sm text-center min-w-[60px]\"\n                        value={truck.hour}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"hour\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-1\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm text-center min-w-[70px]\"\n                        value={truck.location}\n                        onChange={(e) =>\n                          updateTruckData(truck.id, \"location\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                     {/* Delete Button */}\n                     <TableCell className=\"p-1 sticky right-0 bg-card hover:bg-muted/50 z-10\">\n                        <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            type=\"button\" // Ensure it doesn't submit a form\n                            className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                            onClick={() => deleteTruck(truck.id)}\n                            >\n                             <Trash2 className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Supprimer Camion</span>\n                        </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                {truckData.length === 0 && (\n                     <tr>\n                        <td colSpan={21} className=\"text-center text-muted-foreground p-4\">\n                            Aucun camion ajouté. Cliquez sur \"+ Ajouter Camion\" pour commencer.\n                        </td>\n                    </tr>\n                )}\n              </TableBody>\n               {/* Add a footer for column totals if needed */}\n                 {/* <TableFooter>\n                    <TableRow>\n                       <TableCell colSpan={2} className=\"font-semibold sticky left-0 bg-muted/80 z-10\">Total</TableCell>\n                       {Array.from({ length: 15 }).map((_, i) => <TableCell key={`foot-count-${i}`} className=\"text-center font-semibold\">Sum {i+1}</TableCell>)}\n                       <TableCell className=\"text-center font-semibold\">Sum Sud</TableCell>\n                       <TableCell className=\"text-center font-semibold\">Sum Nord</TableCell>\n                       <TableCell className=\"text-center font-semibold\">Sum Stock</TableCell>\n                       <TableCell className=\"text-center font-semibold\">Grand Total</TableCell>\n                       <TableCell colSpan={2}></TableCell>\n                       <TableCell className=\"sticky right-0 bg-muted/80 z-10\"></TableCell>\n                    </TableRow>\n                 </TableFooter> */}\n            </Table>\n          </div>\n            <Button onClick={addTruck} variant=\"outline\" size=\"sm\" className=\"mt-4\" type=\"button\"> {/* Added margin-top and type=\"button\" */}\n                <Plus className=\"mr-2 h-4 w-4\"/>\n                Ajouter Camion\n            </Button>\n        </div>\n        <div className=\"mt-8 flex justify-end space-x-3\"> {/* Added margin-top */}\n          <Button variant=\"outline\" type=\"button\">Enregistrer</Button> {/* Added type=\"button\" */}\n          <Button type=\"submit\">Soumettre</Button> {/* Kept as submit for potential form wrapper */}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5421, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/R0Report.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from \"react\"; // Import useEffect\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"; // Import Alert for errors\nimport { AlertCircle } from \"lucide-react\"; // Icon for errors\nimport { Textarea } from \"@/components/ui/textarea\"; // Import Textarea\nimport { useToast } from \"@/hooks/use-toast\"; // Import useToast\n\n\ninterface R0ReportProps {\n  selectedDate: Date; // Changed prop name and kept type as Date\n   // Prop for previous day's 3rd shift end counter\n   previousDayThirdShiftEnd?: string | null; // Use string | null to represent potential absence\n}\n\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\nconst MAX_HOURS_PER_POSTE = 8;\n\n// Updated Poste times and order - IMPORTANT: Array order matters for validation logic\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"1er\": \"06:30 - 14:30\", // Index 0\n  \"2ème\": \"14:30 - 22:30\", // Index 1\n  \"3ème\": \"22:30 - 06:30\", // Index 2 (of the next day cycle)\n};\n// Order for UI display and indexing in arrays\nconst POSTE_ORDER: Poste[] = [\"1er\", \"2ème\", \"3ème\"]; // Match indexCompteurs array order\n\n// Define types for form data sections\ninterface RepartitionItem {\n  chantier: string;\n  temps: string;\n  imputation: string;\n}\n\n// Define type for Index Compteur per Poste\ninterface IndexCompteurPoste {\n    debut: string;\n    fin: string;\n}\n\n// Updated ventilation item structure to include 'note'\ninterface VentilationItem {\n  code: number;\n  label: string;\n  duree: string;\n  note: string; // Added note field\n}\n\ninterface FormData {\n  entree: string;\n  secteur: string;\n  rapportNo: string;\n  machineEngins: string;\n  sa: string;\n  unite: string;\n  indexCompteurs: IndexCompteurPoste[]; // Array for debut/fin per poste, ORDER MUST MATCH POSTE_ORDER\n  shifts: string[]; // Corresponds to postes 1er, 2eme, 3eme D/F times\n  ventilation: VentilationItem[]; // Use updated VentilationItem type\n  arretsExplication: string; // Added field for explanation of stops\n  exploitation: Record<string, string>; // Use a record for exploitation data\n  // 'bulls' now used for displaying calculated gross hours per poste\n  bulls: string[]; // Index 0: 1er, Index 1: 2eme, Index 2: 3eme\n  repartitionTravail: RepartitionItem[];\n  tricone: {\n    pose: string;\n    depose: string;\n    causeDepose: string;\n    indexCompteur: string; // Added index compteur for Tricone\n  };\n  gasoil: {\n    lieuAppoint: string;\n    indexCompteur: string; // Specific index for gasoil\n    quantiteDelivree: string;\n  };\n  personnel: {\n    conducteur: string;\n    graisseur: string;\n    matricules: string;\n  };\n  machineMarque: string;\n  machineSerie: string;\n  machineType: string;\n  machineDiametre: string;\n}\n\n// Sample data structure based on user input (assuming this structure)\n const ventilationBaseData = [\n    { code: 121, label: \"ARRET CARREAU INDUSTRIEL\" },\n    { code: 122, label: \"COUPURE GENERALE DU COURANT\" },\n    { code: 123, label: \"GREVE\" },\n    { code: 124, label: \"INTEMPERIES\" },\n    { code: 125, label: \"STOCKS PLEINS\" },\n    { code: 126, label: \"J. FERIES OU HEBDOMADAIRES\" }, // Corrected FÊRIES to FERIES\n    { code: 127, label: \"ARRET PAR LA CENTRALE (ENERGIE)\" }, // Corrected (E.M.E.) based on latest prompt - Assuming 127 instead of 128\n    { code: 230, label: \"CONTROLE\" },\n    { code: 231, label: \"DEFAUT ELEC. (C. CRAME, RESEAU)\" }, // Corrected C.RAME & RESAU\n    { code: 232, label: \"PANNE MECANIQUE\" },\n    { code: 233, label: \"PANNE ELECTRIQUE\" }, // Was PANNE ATELIER in previous data, corrected based on context\n    { code: 234, label: \"INTERVENTION ATELIER PNEUMATIQUE\" },\n    { code: 235, label: \"ENTRETIEN SYSTEMATIQUE\" },\n    { code: 236, label: \"APPOINT (HUILE, GAZOL, EAU)\" }, // Corrected GAZOIL to GAZOL\n    { code: 237, label: \"GRAISSAGE\" },\n    { code: 238, label: \"ARRET ELEC. INSTALLATION FIXES\" },\n    { code: 239, label: \"MANQUE CAMIONS\" },\n    { code: 240, label: \"MANQUE BULL\" },\n    { code: 241, label: \"MANQUE MECANICIEN\" },\n    { code: 242, label: \"MANQUE OUTILS DE TRAVAIL\" },\n    { code: 243, label: \"MACHINE A L'ARRET\" },\n    { code: 244, label: \"PANNE ENGIN DEVANT MACHINE\" },\n    { code: 441, label: \"RELEVE\" }, // Adjusted code based on later user input/context (was 442)\n    { code: 442, label: \"EXECUTION PLATE FORME\" }, // Adjusted code (was 443)\n    { code: 443, label: \"DEPLACEMENT\" }, // Adjusted code (was 444)\n    { code: 444, label: \"TIR ET SAUTAGE\" }, // Adjusted code (was 445)\n    { code: 445, label: \"MOUV. DE CABLE\" }, // Adjusted code (was 446)\n    { code: 446, label: \"ARRET DECIDE\" }, // Adjusted code (was 448)\n    { code: 447, label: \"MANQUE CONDUCTEUR\" }, // Adjusted code (was 449)\n    { code: 448, label: \"BRIQUET\" }, // Adjusted code (was 450)\n    { code: 449, label: \"PERTES (INTEMPERIES EXCLUES)\" }, // Adjusted code (was 451)\n    { code: 450, label: \"ARRETS MECA. INSTALLATIONS FIXES\" }, // Adjusted code (was 452)\n    { code: 451, label: \"TELESCOPAGE\" }, // Adjusted code (was 453)\n    // Assuming the last two codes were typos and should be distinct\n    { code: 452, label: \"EXCAVATION PURE\" }, // No change\n    { code: 453, label: \"TERRASSEMENT PUR\" }, // No change\n ];\n\n // Initialize ventilation data with empty duree and note\n const initialVentilationData: VentilationItem[] = ventilationBaseData.map(item => ({\n    ...item,\n    duree: \"\",\n    note: \"\", // Initialize note as empty string\n }));\n\n\n const exploitationLabels = [\n    \"HEURES COMPTEUR\", // This will be calculated (Net Hours)\n    \"METRAGE FORE\",\n    \"NOMBRE DE TROUS FORES\",\n    \"NOMBRE DE VOYAGES\",\n    \"NOMBRE D'ECAPAGES\", // Corrected DECAPAGES\n    \"TONNAGE\",\n    \"NOMBRE T.K.J\", // Corrected T.K.U\n ];\n\n const personnelLabels = [\"CONDUCTEUR\", \"GRAISSEUR\", \"MATRICULES\"];\n\n const causeDeposeOptions = [\n    \"T1 CORPS USE\",\n    \"T2 MOLLETTES USEES\", // Corrected MOLETTES\n    \"T3 MOLLETTES PERDUES\",\n    \"T4 ROULEMENT CASSE\",\n    \"T5 CORPS FISSURE\",\n    \"T6 ROULEMENT COINCE\",\n    \"T7 FILAGE ABIME\",\n    \"T8 TRICONE PERDU\", // Corrected TRONCON PERDU -> Assuming this based on T1-T7\n ];\n\n\n// Helper function to parse duration strings into minutes\nfunction parseDurationToMinutes(duration: string): number {\n  if (!duration) return 0;\n\n  // Clean the string: remove anything not a digit, H, h, :, ·, M, m\n  // Allow spaces for flexibility e.g., \"1 H 20 M\"\n  const cleaned = duration.replace(/[^0-9Hh:·Mm\\s]/g, '').trim().toUpperCase();\n\n  let hours = 0;\n  let minutes = 0;\n\n  // Match formats like HH:MM, HH·MM, HH H MM M, HH H MM, H:MM, H·MM, H H MM M, H H MM\n  let match = cleaned.match(/^(?:(\\d{1,2})\\s?[H:·]\\s?)?(\\d{1,2})\\s?M?$/);\n   if (match) {\n     hours = match[1] ? parseInt(match[1], 10) : 0;\n     minutes = parseInt(match[2], 10);\n      // Validate parsed numbers\n     if (isNaN(hours) || isNaN(minutes)) return 0;\n     return (hours * 60) + minutes;\n   }\n\n\n   // Match formats like HH H, H H\n   match = cleaned.match(/^(\\d{1,2})\\s?H$/);\n    if (match) {\n      hours = parseInt(match[1], 10);\n      if (isNaN(hours)) return 0;\n      return hours * 60;\n    }\n\n  // Match only numbers (assume minutes)\n  match = cleaned.match(/^(\\d+)\\s?M?$/);\n  if (match) {\n    minutes = parseInt(match[1], 10);\n    if (isNaN(minutes)) return 0;\n    return minutes;\n  }\n\n  console.warn(`Could not parse duration: \"${duration}\"`);\n  return 0; // Return 0 if parsing fails\n}\n\n\n// Helper function to format minutes into HHh MMm string\nfunction formatMinutesToHoursMinutes(totalMinutes: number): string {\n    if (isNaN(totalMinutes) || totalMinutes <= 0) return \"0h 0m\";\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.round(totalMinutes % 60); // Round minutes\n    return `${hours}h ${minutes}m`;\n}\n\n// Helper function to format hours (float) into HHh MMm string\nfunction formatHoursToHoursMinutes(totalHours: number): string {\n    if (isNaN(totalHours) || totalHours <= 0) return \"0h 0m\";\n    const hours = Math.floor(totalHours);\n    const minutes = Math.round((totalHours - hours) * 60);\n    return `${hours}h ${minutes}m`;\n}\n\n// Helper function to validate and parse counter values (returns null on failure)\nfunction validateAndParseCounterValue(value: string): number | null {\n    if (!value) return 0; // Treat empty as 0 for calculation consistency\n    const cleaned = value.replace(/[^0-9.,]/g, '').replace(',', '.');\n    if (cleaned === '' || cleaned === '.' || cleaned === ',') return null; // Incomplete input\n    const parsed = parseFloat(cleaned);\n    return isNaN(parsed) ? null : parsed; // Return null if not a valid number\n}\n\n\n// Added type prop\nexport function R0Report({ selectedDate, previousDayThirdShiftEnd = null }: R0ReportProps) { // Updated prop name\n   const { toast } = useToast();\n   const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Default to 1er Poste\n   // State to hold calculated gross hours per poste and total\n   const [calculatedHours, setCalculatedHours] = useState<{ poste: number[]; total: number }>({ poste: [0, 0, 0], total: 0 });\n   // State to hold total stop duration in minutes\n   const [totalStopMinutes, setTotalStopMinutes] = useState(0);\n   // State to hold net working hours (total gross hours - total stop hours)\n   const [netWorkingHours, setNetWorkingHours] = useState(0);\n   // State for counter validation errors (including sequential checks)\n   const [counterErrors, setCounterErrors] = useState<string[]>(['', '', '']); // One error message per poste\n\n  const [formData, setFormData] = useState<FormData>({\n    entree: \"\",\n    secteur: \"\",\n    rapportNo: \"\",\n    machineEngins: \"\",\n    sa: \"\",\n    unite: \"\",\n    indexCompteurs: Array(3).fill(null).map(() => ({ debut: \"\", fin: \"\" })), // Initialize for 3 postes, order: 1er, 2eme, 3eme\n    shifts: [\"\", \"\", \"\"], // Corresponds to 1er, 2eme, 3eme D/F times\n    ventilation: initialVentilationData, // Use initialized ventilation data with 'note'\n    arretsExplication: \"\", // Initialize explanation field\n    exploitation: exploitationLabels.reduce((acc, label) => ({ ...acc, [label]: \"\" }), {}), // Initialize exploitation fields\n    bulls: [\"\", \"\", \"\"], // Display for gross hours: Index 0: 1er, Index 1: 2eme, Index 2: 3eme\n    repartitionTravail: Array(3).fill(null).map(() => ({ chantier: \"\", temps: \"\", imputation: \"\" })), // Create distinct objects\n    tricone: {\n      pose: \"\",\n      depose: \"\",\n      causeDepose: \"\",\n      indexCompteur: \"\", // Added field\n    },\n    gasoil: {\n      lieuAppoint: \"\",\n      indexCompteur: \"\", // Gasoil specific index\n      quantiteDelivree: \"\",\n    },\n    personnel: { // Initialize personnel object\n        conducteur: \"\",\n        graisseur: \"\",\n        matricules: \"\",\n    },\n    machineMarque: \"\",\n    machineSerie: \"\",\n    machineType: \"\",\n    machineDiametre: \"\",\n  });\n\n    // Format date string once using the selectedDate prop\n    const formattedDate = selectedDate.toLocaleDateString(\"fr-FR\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n    });\n\n\n  const handleInputChange = (\n      e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, // Allow Textarea\n      section: keyof FormData | 'ventilation' | 'repartitionTravail' | 'tricone' | 'gasoil' | 'shifts' | 'bulls' | 'indexCompteurs' | 'exploitation' | 'personnel',\n      indexOrField?: number | string,\n      fieldOrNestedField?: keyof RepartitionItem | keyof FormData['tricone'] | keyof FormData['gasoil'] | keyof IndexCompteurPoste | keyof FormData['personnel'] | 'duree' | 'note' // Added 'note'\n    ) => {\n      const { name, value } = e.target;\n       // Use name attribute for top-level fields if available and section matches a key in FormData\n      const targetName = (name && section in formData && typeof (formData as any)[section] === 'string') ? name : section;\n\n      setFormData(prevData => {\n          let newData = { ...prevData };\n\n          if (section === 'ventilation' && typeof indexOrField === 'number' && (fieldOrNestedField === 'duree' || fieldOrNestedField === 'note')) {\n              const newVentilation = [...newData.ventilation];\n              if (newVentilation[indexOrField]) {\n                 newVentilation[indexOrField] = { ...newVentilation[indexOrField], [fieldOrNestedField]: value };\n                 newData.ventilation = newVentilation;\n              }\n          } else if (section === 'repartitionTravail' && typeof indexOrField === 'number' && fieldOrNestedField && fieldOrNestedField in newData.repartitionTravail[0]) {\n              if (newData.repartitionTravail && newData.repartitionTravail[indexOrField]) {\n                  const newRepartition = [...newData.repartitionTravail];\n                  newRepartition[indexOrField] = { ...newRepartition[indexOrField], [fieldOrNestedField as keyof RepartitionItem]: value };\n                  newData.repartitionTravail = newRepartition;\n              }\n          } else if (section === 'indexCompteurs' && typeof indexOrField === 'number' && fieldOrNestedField && fieldOrNestedField in newData.indexCompteurs[0]) {\n             if (newData.indexCompteurs && newData.indexCompteurs[indexOrField]) {\n                const newIndexCompteurs = [...newData.indexCompteurs];\n                newIndexCompteurs[indexOrField] = { ...newIndexCompteurs[indexOrField], [fieldOrNestedField as keyof IndexCompteurPoste]: value };\n                newData.indexCompteurs = newIndexCompteurs;\n\n                 // Clear error for this specific poste when input changes\n                 setCounterErrors(prevErrors => {\n                    const updatedErrors = [...prevErrors];\n                    updatedErrors[indexOrField] = '';\n                    return updatedErrors;\n                 });\n            }\n          } else if (section === 'tricone' && fieldOrNestedField && typeof fieldOrNestedField === 'string' && fieldOrNestedField in newData.tricone) {\n              newData.tricone = { ...newData.tricone, [fieldOrNestedField as keyof typeof newData.tricone]: value };\n          } else if (section === 'gasoil' && fieldOrNestedField && typeof fieldOrNestedField === 'string' && fieldOrNestedField in newData.gasoil) {\n               newData.gasoil = { ...newData.gasoil, [fieldOrNestedField as keyof typeof newData.gasoil]: value };\n          } else if (section === 'shifts' && typeof indexOrField === 'number') {\n              const newShifts = [...newData.shifts];\n              newShifts[indexOrField] = value;\n              newData.shifts = newShifts;\n          }\n          // Handle exploitation fields\n          else if (section === 'exploitation' && typeof indexOrField === 'string' && indexOrField in newData.exploitation) {\n              newData.exploitation = { ...newData.exploitation, [indexOrField]: value };\n          }\n           // Handle personnel fields\n          else if (section === 'personnel' && fieldOrNestedField && typeof fieldOrNestedField === 'string' && fieldOrNestedField in newData.personnel) {\n             newData.personnel = { ...newData.personnel, [fieldOrNestedField as keyof typeof newData.personnel]: value };\n          }\n          // Handle top-level string fields directly (including arretsExplication)\n          else if (typeof targetName === 'string' && targetName in newData && typeof (newData as any)[targetName] === 'string') {\n             (newData as any)[targetName] = value;\n          }\n          else {\n             console.warn(\"Unhandled input change:\", { section, indexOrField, fieldOrNestedField, name, value });\n          }\n          return newData;\n      });\n  };\n\n   const handleSelectChange = (\n      value: string,\n      section: keyof FormData | 'tricone' | 'gasoil', // Specify sections where select is used\n      field: keyof FormData['tricone'] | keyof FormData['gasoil']\n    ) => {\n     setFormData(prevData => {\n        let newData = { ...prevData };\n        if (section === 'tricone' && field && typeof field === 'string' && field in newData.tricone) {\n            newData.tricone = { ...newData.tricone, [field as keyof typeof newData.tricone]: value };\n        } else if (section === 'gasoil' && field && typeof field === 'string' && field in newData.gasoil) {\n             newData.gasoil = { ...newData.gasoil, [field as keyof typeof newData.gasoil]: value };\n        }\n        // Add other select handlers here if needed\n        return newData;\n     });\n    };\n\n    // Function to validate and calculate working hours from index compteurs\n     const validateAndCalculateCompteurHours = () => {\n        let validationPassed = true;\n        const newErrors = ['', '', '']; // Order: 1er, 2eme, 3eme\n        const previousDayFin3Parsed = validateAndParseCounterValue(previousDayThirdShiftEnd || ''); // Handle null/undefined\n\n        const posteHours = formData.indexCompteurs.map((compteur, index) => {\n            const posteName = POSTE_ORDER[index];\n            const debutStr = compteur.debut;\n            const finStr = compteur.fin;\n\n            const debut = validateAndParseCounterValue(debutStr);\n            const fin = validateAndParseCounterValue(finStr);\n\n            // If both fields are empty or invalid for parsing, skip validation and return 0 hours\n            if ((debutStr === '' && finStr === '') || debut === null || fin === null) {\n                 // Clear error only if both are empty, otherwise keep potential parsing error\n                 if (debutStr === '' && finStr === '') {\n                     newErrors[index] = '';\n                 } else if (debut === null && debutStr !== '') {\n                      newErrors[index] = \"Début invalide.\";\n                      validationPassed = false;\n                 } else if (fin === null && finStr !== '') {\n                     newErrors[index] = \"Fin invalide.\";\n                      validationPassed = false;\n                 }\n                 // Don't reset errors if one field is valid and the other is empty/invalid yet\n                 return 0;\n             }\n\n            // 1. Basic Validation (Fin >= Debut, Duration <= Max)\n            if (fin < debut) {\n                newErrors[index] = \"Fin doit être supérieur ou égal à Début.\";\n                validationPassed = false;\n                return 0;\n            }\n            const duration = fin - debut;\n            if (duration > MAX_HOURS_PER_POSTE) {\n                 newErrors[index] = `Durée max ${MAX_HOURS_PER_POSTE}h dépassée (${duration.toFixed(2)}h).`;\n                 validationPassed = false;\n                 return 0;\n            }\n\n            // 2. Sequential Validation (Check if current Debut matches previous Fin)\n            // Index 0 (1er Poste): Check against previous day's 3eme Poste Fin\n            if (index === 0) {\n                 if (previousDayFin3Parsed !== null) { // Only validate if previous day data exists and is valid\n                    if (debut !== previousDayFin3Parsed) {\n                       newErrors[index] = `Début (${debut}) doit correspondre à Fin (${previousDayFin3Parsed}) du 3ème Poste de la veille.`;\n                       validationPassed = false;\n                       return 0;\n                    }\n                 } else if (previousDayThirdShiftEnd === undefined) {\n                     // Prop wasn't passed (might be first day entry) - OK\n                 } else if (previousDayThirdShiftEnd === null) {\n                     // Previous day had no 3rd shift data - OK\n                 } else {\n                      // previousDayThirdShiftEnd was invalid - Maybe warn or add error?\n                      // console.warn(\"Fin du 3ème Poste de la veille est invalide.\");\n                      // For now, let's allow starting without a valid previous value if it's unparseable\n                 }\n            }\n            // Index 1 (2eme Poste): Check against 1er Poste Fin\n            else if (index === 1) {\n                const prevFinStr = formData.indexCompteurs[0]?.fin;\n                const prevFin = validateAndParseCounterValue(prevFinStr || '');\n                if (prevFin !== null) { // Only validate if 1er Fin exists and is numeric\n                    if (debut !== prevFin) {\n                        newErrors[index] = `Début (${debut}) doit correspondre à Fin (${prevFin}) du ${POSTE_ORDER[0]} Poste.`;\n                        validationPassed = false;\n                        return 0;\n                    }\n                } else if (formData.indexCompteurs[0]?.debut !== '' && prevFinStr !== '') { // Error if debut exists but fin is invalid/empty\n                     newErrors[index] = `Fin invalide ou manquante pour ${POSTE_ORDER[0]} Poste pour validation.`;\n                     validationPassed = false;\n                     return 0;\n                 }\n                 // else: Previous fin is empty/0, allow start (assumes it's the first entry or previous was 0)\n            }\n            // Index 2 (3eme Poste): Check against 2eme Poste Fin\n            else if (index === 2) {\n                const prevFinStr = formData.indexCompteurs[1]?.fin;\n                const prevFin = validateAndParseCounterValue(prevFinStr || '');\n                 if (prevFin !== null) { // Only validate if 2eme Fin exists and is numeric\n                    if (debut !== prevFin) {\n                        newErrors[index] = `Début (${debut}) doit correspondre à Fin (${prevFin}) du ${POSTE_ORDER[1]} Poste.`;\n                        validationPassed = false;\n                        return 0;\n                    }\n                 } else if (formData.indexCompteurs[1]?.debut !== '' && prevFinStr !== '') { // Error if debut exists but fin is invalid/empty\n                     newErrors[index] = `Fin invalide ou manquante pour ${POSTE_ORDER[1]} Poste pour validation.`;\n                     validationPassed = false;\n                     return 0;\n                 }\n                  // else: Previous fin is empty/0, allow start\n            }\n\n             // Validation passed for this poste\n            newErrors[index] = '';\n            return duration; // Return calculated duration\n        });\n\n        setCounterErrors(newErrors);\n\n        if (validationPassed) {\n            const totalHours = posteHours.reduce((sum, hours) => sum + hours, 0);\n            setCalculatedHours({ poste: posteHours, total: totalHours });\n\n            // Update the 'bulls' array in formData with formatted gross hours for display\n            const formattedGrossHours = posteHours.map(hours => formatHoursToHoursMinutes(hours));\n            setFormData(prevData => ({\n                ...prevData,\n                bulls: formattedGrossHours // Use bulls to display formatted gross hours\n            }));\n        } else {\n            // Reset calculated hours if validation fails\n             setCalculatedHours({ poste: [0, 0, 0], total: 0 });\n              setFormData(prevData => ({\n                ...prevData,\n                bulls: [\"\", \"\", \"\"], // Clear display hours\n                exploitation: { // Also clear calculated HEURES COMPTEUR\n                   ...prevData.exploitation,\n                   \"HEURES COMPTEUR\": \"Erreur Compteur\"\n                }\n            }));\n        }\n        return validationPassed; // Return validation status\n    };\n\n    // Function to calculate total stop duration\n    const calculateTotalStops = () => {\n        const totalMinutes = formData.ventilation.reduce((acc, item) => {\n             const minutes = parseDurationToMinutes(item.duree);\n             if (isNaN(minutes)) {\n                 console.warn(`Invalid duration format for ventilation code ${item.code}: \"${item.duree}\"`);\n                 return acc; // Skip invalid durations\n             }\n             return acc + minutes;\n        }, 0);\n        setTotalStopMinutes(totalMinutes);\n    };\n\n     // Calculate Net Working Hours\n    const calculateNetWorkingHours = () => {\n        // Only calculate if there are no counter errors\n        if (counterErrors.some(err => err !== '')) {\n             setNetWorkingHours(0); // Reset if there are errors\n             return;\n        }\n        const totalGrossHours = calculatedHours.total; // From index compteurs\n        const totalStopHours = totalStopMinutes / 60;\n        const netHours = totalGrossHours - totalStopHours;\n        setNetWorkingHours(netHours >= 0 ? netHours : 0); // Ensure non-negative\n    };\n\n\n    // Recalculate on index compteur change or when previous day data potentially changes\n    useEffect(() => {\n        validateAndCalculateCompteurHours();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [formData.indexCompteurs, previousDayThirdShiftEnd]); // Add dependency\n\n     // Recalculate on ventilation duration change\n    useEffect(() => {\n        calculateTotalStops();\n    }, [formData.ventilation]);\n\n    // Recalculate net hours when gross hours or stop hours change, or errors change\n    useEffect(() => {\n        calculateNetWorkingHours();\n         // Update the HEURES COMPTEUR field in exploitation data only if no errors\n        const formattedNetHours = counterErrors.some(err => err !== '') ? \"Erreur Compteur\" : formatHoursToHoursMinutes(netWorkingHours);\n        setFormData(prevData => ({\n            ...prevData,\n            exploitation: {\n                ...prevData.exploitation,\n                \"HEURES COMPTEUR\": formattedNetHours\n            }\n        }));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [calculatedHours.total, totalStopMinutes, counterErrors]); // Added counterErrors dependency\n\n\n    // Handle form submission - Prevent submission if errors exist\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        // Re-validate on submit attempt to catch any potential inconsistencies\n        const isCompteurValid = validateAndCalculateCompteurHours();\n\n        if (!isCompteurValid) {\n            console.error(\"Validation failed: Invalid counter inputs.\");\n            toast({ title: \"Erreur de Validation\", description: \"Veuillez corriger les erreurs dans les compteurs.\", variant: \"destructive\" });\n\n            // Focus the first input with an error\n            const firstErrorIndex = counterErrors.findIndex(err => err !== '');\n            if (firstErrorIndex !== -1) {\n                const firstErrorInputId = `index-debut-${POSTE_ORDER[firstErrorIndex]}`; // Focus debut input\n                const firstErrorInput = document.getElementById(firstErrorInputId);\n                firstErrorInput?.focus();\n            }\n            return; // Prevent submission\n        }\n\n        // If validation passes, proceed with submission logic...\n        console.log(\"Form submitted:\", formData);\n        toast({ title: \"Succès\", description: \"Rapport R0 soumis avec succès.\" });\n        // TODO: Replace with actual submission logic (e.g., API call)\n        // Example: await submitR0Report(formData);\n    };\n\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          Rapport Journalier Détaillé (R0)\n        </CardTitle>\n        {/* Display the formatted date from the prop */}\n        <span className=\"text-sm text-muted-foreground\">{formattedDate}</span>\n      </CardHeader>\n\n      {/* Use form tag and onSubmit handler */}\n      <form onSubmit={handleSubmit}>\n          <CardContent className=\"p-0 space-y-6\">\n             {/* Section: Entête Info */}\n             <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 border-b pb-4\">\n                  <div>\n                    <Label htmlFor=\"entree\">Entrée</Label>\n                    <Input id=\"entree\" name=\"entree\" placeholder=\"ENTREE\" value={formData.entree} onChange={(e) => handleInputChange(e, 'entree')} className=\"h-8\"/>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"secteur\">Secteur</Label>\n                    <Input id=\"secteur\" name=\"secteur\" placeholder=\"SECTEUR\" value={formData.secteur} onChange={(e) => handleInputChange(e, 'secteur')} className=\"h-8\"/>\n                  </div>\n                   <div>\n                    <Label htmlFor=\"rapport-no\">Rapport (R°)</Label>\n                    <Input id=\"rapport-no\" name=\"rapportNo\" placeholder=\"N°\" value={formData.rapportNo} onChange={(e) => handleInputChange(e, 'rapportNo')} className=\"h-8\"/>\n                  </div>\n                  <div>\n                    <Label htmlFor=\"machine-engins\">Machine / Engins</Label>\n                    <Input id=\"machine-engins\" name=\"machineEngins\" placeholder=\"Nom ou Code\" value={formData.machineEngins} onChange={(e) => handleInputChange(e, 'machineEngins')} className=\"h-8\"/>\n                  </div>\n                   <div>\n                    <Label htmlFor=\"sa\">S.A</Label>\n                    <Input id=\"sa\" name=\"sa\" placeholder=\"S.A\" value={formData.sa} onChange={(e) => handleInputChange(e, 'sa')} className=\"h-8\"/>\n                  </div>\n                </div>\n\n\n            {/* Section: Unite & Index Compteur per Poste */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n              <div className=\"md:col-span-1\">\n                <Label htmlFor=\"unite\">Unité</Label>\n                <Input\n                  id=\"unite\"\n                  name=\"unite\"\n                  value={formData.unite}\n                  onChange={(e) => handleInputChange(e, \"unite\")}\n                  className=\"h-8\"\n                  placeholder=\"ex: H ou M3\"\n                />\n              </div>\n               {/* Index Compteur per Poste */}\n               <div className=\"md:col-span-3 grid grid-cols-3 gap-4 border p-4 rounded-md bg-muted/30\">\n                    {POSTE_ORDER.map((poste, index) => (\n                        <div key={`index-${poste}`} className=\"space-y-2\">\n                             <Label className=\"font-medium\">{poste} Poste</Label>\n                             <div>\n                                <Label htmlFor={`index-debut-${poste}`} className=\"text-xs text-muted-foreground\">Début</Label>\n                                <Input\n                                    id={`index-debut-${poste}`}\n                                    type=\"text\" // Use text to allow intermediate states like '.'\n                                    inputMode=\"decimal\"\n                                    value={formData.indexCompteurs[index]?.debut || ''}\n                                    onChange={(e) => handleInputChange(e, \"indexCompteurs\", index, 'debut')}\n                                    placeholder=\"Index début\"\n                                    className={`h-8 ${counterErrors[index] ? 'border-destructive focus-visible:ring-destructive' : ''}`}\n                                    aria-invalid={!!counterErrors[index]}\n                                    aria-describedby={counterErrors[index] ? `error-compteur-${poste}` : undefined}\n                                />\n                             </div>\n                             <div>\n                                 <Label htmlFor={`index-fin-${poste}`} className=\"text-xs text-muted-foreground\">Fin</Label>\n                                <Input\n                                    id={`index-fin-${poste}`}\n                                    type=\"text\" // Use text\n                                    inputMode=\"decimal\"\n                                    value={formData.indexCompteurs[index]?.fin || ''}\n                                    onChange={(e) => handleInputChange(e, \"indexCompteurs\", index, 'fin')}\n                                    placeholder=\"Index fin\"\n                                    className={`h-8 ${counterErrors[index] ? 'border-destructive focus-visible:ring-destructive' : ''}`}\n                                     aria-invalid={!!counterErrors[index]}\n                                     aria-describedby={counterErrors[index] ? `error-compteur-${poste}` : undefined}\n                                />\n                             </div>\n                              <div className=\"text-xs text-muted-foreground pt-1\">\n                                 Heures Brutes: {formatHoursToHoursMinutes(calculatedHours.poste[index])}\n                             </div>\n                              {/* Display error message for this specific poste */}\n                             {counterErrors[index] && (\n                                <p id={`error-compteur-${poste}`} className=\"text-xs text-destructive pt-1\">{counterErrors[index]}</p>\n                             )}\n                        </div>\n                    ))}\n                    <div className=\"col-span-3 mt-2 text-right font-semibold\">\n                        Total Heures Brutes (24h): {formatHoursToHoursMinutes(calculatedHours.total)}\n                     </div>\n                     {/* Display message about previous day's data if relevant */}\n                     {previousDayThirdShiftEnd === undefined && (\n                         <p className=\"col-span-3 text-xs text-muted-foreground mt-1\">\n                            Info: Données du 3ème poste de la veille non disponibles pour validation du début 1er poste.\n                         </p>\n                     )}\n                      {previousDayThirdShiftEnd === null && (\n                         <p className=\"col-span-3 text-xs text-muted-foreground mt-1\">\n                             Info: Pas de fin enregistrée pour le 3ème poste de la veille.\n                         </p>\n                     )}\n               </div>\n            </div>\n\n             {/* General Counter Error Alert */}\n              {counterErrors.some(err => err !== '') && (\n                  <Alert variant=\"destructive\" className=\"mt-4\">\n                       <AlertCircle className=\"h-4 w-4\" />\n                      <AlertDescription>\n                          Erreur dans les index compteurs. Vérifiez les valeurs et la continuité entre les postes (Fin précédent = Début suivant).\n                      </AlertDescription>\n                  </Alert>\n              )}\n\n            {/* Section: Poste Selection & Shifts */}\n            <div className=\"space-y-2\">\n               <Label className=\"text-foreground\">Poste Actuel</Label>\n                <RadioGroup\n                  value={selectedPoste} // Controlled component\n                  onValueChange={(value: Poste) => setSelectedPoste(value)}\n                  className=\"flex flex-wrap space-x-4 pt-2\"\n                >\n                  {POSTE_ORDER.map((poste) => ( // Use defined order\n                    <div key={poste} className=\"flex items-center space-x-2 mb-2\">\n                      <RadioGroupItem value={poste} id={`r0-poste-${poste}`} />\n                      <Label htmlFor={`r0-poste-${poste}`} className=\"font-normal text-foreground\">\n                        {poste} Poste <span className=\"text-muted-foreground text-xs\">({POSTE_TIMES[poste]})</span>\n                      </Label>\n                    </div>\n                  ))}\n                </RadioGroup>\n\n                {/* Shift Input Fields (Example - adjust based on actual meaning) */}\n               <div className=\"grid grid-cols-3 gap-4 pt-2\">\n                    {POSTE_ORDER.map((poste, index) => (\n                      <div key={poste}>\n                        <Label htmlFor={`shift-${poste}`} className=\"text-muted-foreground text-xs\">{`${poste} D/F`}</Label>\n                         <Input\n                          id={`shift-${poste}`}\n                          type=\"text\"\n                          value={formData.shifts[index]} // Assuming index matches POSTE_ORDER\n                          onChange={(e) => handleInputChange(e, \"shifts\", index)}\n                          placeholder={POSTE_TIMES[poste]} // Use times as placeholder\n                          className=\"h-8\"\n                        />\n                      </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* Section: Ventilation */}\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold text-lg text-foreground\">Ventilation des Arrêts</h3>\n               <div className=\"overflow-x-auto\">\n                    <Table>\n                      <TableHeader className=\"bg-muted/50\">\n                        <TableRow>\n                          <TableHead className=\"w-[80px]\">Code</TableHead>\n                          <TableHead>Nature de l'Arrêt</TableHead>\n                          <TableHead className=\"w-[150px]\">Note</TableHead>{/* Added Note Header */}\n                          <TableHead className=\"text-right w-[150px]\">Durée Totale</TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {formData.ventilation.map((item, index) => (\n                          <TableRow key={item.code} className=\"hover:bg-muted/50\">\n                            <TableCell className=\"font-medium\">{item.code}</TableCell>\n                            <TableCell>{item.label}</TableCell>\n                            <TableCell>{/* Added Note Cell */}\n                              <Input\n                                type=\"text\"\n                                className=\"h-8 text-sm w-full\"\n                                placeholder=\"Ajouter une note...\"\n                                value={item.note}\n                                onChange={(e) => handleInputChange(e, \"ventilation\", index, 'note')}\n                              />\n                            </TableCell>\n                            <TableCell className=\"text-right\">\n                              <Input\n                                type=\"text\"\n                                className=\"h-8 text-sm text-right w-full\"\n                                placeholder=\"ex: 1h 30m\"\n                                value={item.duree}\n                                onChange={(e) => handleInputChange(e, \"ventilation\", index, 'duree')}\n                              />\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                        {/* Add Total Row */}\n                         <TableRow className=\"bg-muted/80 font-semibold\">\n                             <TableCell colSpan={3}>TOTAL Arrêts</TableCell>{/* Adjusted colSpan */}\n                             <TableCell className=\"text-right\">\n                                 <Input\n                                    type=\"text\"\n                                    className=\"h-8 text-sm text-right w-full bg-transparent font-semibold border-none focus-visible:ring-0 focus-visible:ring-offset-0\"\n                                    readOnly\n                                    value={formatMinutesToHoursMinutes(totalStopMinutes)}\n                                    tabIndex={-1}\n                                  />\n                             </TableCell>\n                        </TableRow>\n                      </TableBody>\n                    </Table>\n                </div>\n            </div>\n\n            {/* Section: Explication des Arrêts */}\n             <div className=\"space-y-2\">\n                 <Label htmlFor=\"arrets-explication\" className=\"font-semibold text-lg text-foreground\">Explication des Arrêts</Label>\n                 <Textarea\n                    id=\"arrets-explication\"\n                    name=\"arretsExplication\"\n                    placeholder=\"Expliquez ici les arrêts enregistrés ci-dessus...\"\n                    value={formData.arretsExplication}\n                    onChange={(e) => handleInputChange(e, \"arretsExplication\")}\n                    className=\"min-h-[100px]\"\n                 />\n            </div>\n\n\n             {/* Section: Exploitation Metrics */}\n             <div className=\"space-y-4 p-4 border rounded-lg bg-muted/30\">\n                  <h3 className=\"font-semibold text-lg text-foreground mb-4\">Données d'Exploitation</h3>\n                   <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                        {exploitationLabels.map((item) => (\n                             <div key={item} className=\"space-y-1\">\n                                <Label htmlFor={`expl-${item.toLowerCase().replace(/\\s/g, '-')}`} className=\"text-sm text-muted-foreground\">\n                                    {item}\n                                </Label>\n                                <Input\n                                    id={`expl-${item.toLowerCase().replace(/\\s/g, '-')}`}\n                                    type={item === \"HEURES COMPTEUR\" ? \"text\" : \"number\"} // Use number for metrics, text for calculated hours\n                                    step={item !== \"HEURES COMPTEUR\" ? \"0.01\" : undefined} // Allow decimals for metrics\n                                    className={`h-8 ${item === \"HEURES COMPTEUR\" ? 'bg-input font-medium border-input focus-visible:ring-0 focus-visible:ring-offset-0 cursor-default' : ''}`} // Updated styling for read-only\n                                    value={formData.exploitation[item]}\n                                    onChange={(e) => handleInputChange(e, 'exploitation', item)}\n                                    readOnly={item === \"HEURES COMPTEUR\"} // Make Heures Compteur read-only\n                                    // Removed disabled attribute, use readOnly and styling\n                                    placeholder={item !== \"HEURES COMPTEUR\" ? \"0\" : \"\"}\n                                    tabIndex={item === \"HEURES COMPTEUR\" ? -1 : undefined}\n                                />\n                             </div>\n                        ))}\n                   </div>\n                   <div className=\"mt-4 text-right font-semibold\">\n                        Heures de Travail Net (Total Brutes - Total Arrêts): {formatHoursToHoursMinutes(netWorkingHours)}\n                   </div>\n             </div>\n\n\n            {/* Section: Heures Brutes par Poste (Replacing Manque Bull) */}\n            <div className=\"space-y-2 p-4 border rounded-lg bg-muted/30\">\n              <h3 className=\"font-medium text-gray-700 dark:text-gray-300 mb-2\">Heures Brutes par Poste (Calculé)</h3>\n              <div className=\"grid grid-cols-3 gap-4\">\n                {POSTE_ORDER.map((poste, index) => (\n                  <div key={poste}>\n                    <Label htmlFor={`gross-hours-${poste}`} className=\"text-muted-foreground text-xs\">{`${poste} Poste`}</Label>\n                    <Input\n                      id={`gross-hours-${poste}`}\n                      type=\"text\"\n                      value={formData.bulls[index]} // Display formatted gross hours from bulls array\n                      readOnly\n                      className=\"h-8 bg-input font-medium border-input focus-visible:ring-0 focus-visible:ring-offset-0 cursor-default\" // Style as read-only input\n                      tabIndex={-1} // Make it non-focusable\n                    />\n                  </div>\n                ))}\n              </div>\n            </div>\n\n\n            {/* Section: Répartition du Temps de Travail Pur */}\n            <div className=\"space-y-4\">\n              <h3 className=\"font-semibold text-lg text-foreground\">Répartition du Temps de Travail Pur</h3>\n                {POSTE_ORDER.map((poste, index) => ( // Ensure index matches the intended poste data\n                    <div key={poste} className=\"p-4 border rounded-lg space-y-3\">\n                         <h4 className=\"font-medium text-foreground\">{poste} Poste</h4>\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                            <div>\n                                <Label htmlFor={`chantier-${poste}`}>Chantier</Label>\n                                <Input\n                                    id={`chantier-${poste}`}\n                                    type=\"text\"\n                                    value={formData.repartitionTravail[index]?.chantier || ''}\n                                    onChange={(e) => handleInputChange(e, 'repartitionTravail', index, 'chantier')}\n                                    className=\"h-8\"\n                                />\n                            </div>\n                            <div>\n                                <Label htmlFor={`temps-${poste}`}>Temps</Label>\n                                <Input\n                                    id={`temps-${poste}`}\n                                    type=\"text\"\n                                    placeholder=\"ex: 7h 00m\"\n                                    value={formData.repartitionTravail[index]?.temps || ''}\n                                    onChange={(e) => handleInputChange(e, 'repartitionTravail', index, 'temps')}\n                                    className=\"h-8\"\n                                />\n                            </div>\n                            <div>\n                                <Label htmlFor={`imputation-${poste}`}>Imputation</Label>\n                                <Input\n                                    id={`imputation-${poste}`}\n                                    type=\"text\"\n                                    value={formData.repartitionTravail[index]?.imputation || ''}\n                                    onChange={(e) => handleInputChange(e, 'repartitionTravail', index, 'imputation')}\n                                    className=\"h-8\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n             {/* Section: Personnel */}\n             <div className=\"space-y-4 p-4 border rounded-lg bg-muted/30\">\n                  <h3 className=\"font-semibold text-lg text-foreground mb-4\">Personnel</h3>\n                   <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                       {personnelLabels.map(role => (\n                            <div key={role} className=\"space-y-1\">\n                                <Label htmlFor={`personnel-${role.toLowerCase()}`}>{role}</Label>\n                                <Input\n                                    id={`personnel-${role.toLowerCase()}`}\n                                    type=\"text\"\n                                    className=\"h-8\"\n                                    name={role.toLowerCase()} // Set name for direct mapping\n                                    value={formData.personnel[role.toLowerCase() as keyof FormData['personnel']]}\n                                    onChange={(e) => handleInputChange(e, 'personnel', undefined, role.toLowerCase() as keyof FormData['personnel'])}\n                                />\n                            </div>\n                       ))}\n                   </div>\n             </div>\n\n            {/* Section: Suivi Consommation */}\n            <div className=\"space-y-6\">\n               <h3 className=\"font-semibold text-lg text-foreground\">Suivi Consommation</h3>\n\n               {/* Tricone Sub-section */}\n               <div className=\"p-4 border rounded-lg space-y-4\">\n                    <h4 className=\"font-medium text-foreground\">Tricone</h4>\n                     {/* Machine Info for Tricone */}\n                     <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                         <div>\n                            <Label htmlFor=\"tricone-marque\">Marque</Label>\n                            <Input id=\"tricone-marque\" name=\"machineMarque\" value={formData.machineMarque} onChange={(e) => handleInputChange(e, 'machineMarque')} className=\"h-8\"/>\n                         </div>\n                         <div>\n                            <Label htmlFor=\"tricone-serie\">N° de Série</Label>\n                            <Input id=\"tricone-serie\" name=\"machineSerie\" value={formData.machineSerie} onChange={(e) => handleInputChange(e, 'machineSerie')} className=\"h-8\"/>\n                         </div>\n                         <div>\n                            <Label htmlFor=\"tricone-type\">Type</Label>\n                            <Input id=\"tricone-type\" name=\"machineType\" value={formData.machineType} onChange={(e) => handleInputChange(e, 'machineType')} className=\"h-8\"/>\n                         </div>\n                         <div>\n                            <Label htmlFor=\"tricone-diametre\">Diamètre</Label>\n                            <Input id=\"tricone-diametre\" name=\"machineDiametre\" value={formData.machineDiametre} onChange={(e) => handleInputChange(e, 'machineDiametre')} className=\"h-8\"/>\n                         </div>\n                     </div>\n\n                    {/* Pose / Depose */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n                        <div>\n                            <Label htmlFor=\"tricone-pose\">Posé (N°)</Label>\n                            <Input\n                                id=\"tricone-pose\"\n                                type=\"text\"\n                                name=\"pose\"\n                                value={formData.tricone.pose}\n                                onChange={(e) => handleInputChange(e, 'tricone', undefined, 'pose')}\n                                 className=\"h-8\"\n                            />\n                        </div>\n                        <div>\n                            <Label htmlFor=\"tricone-depose\">Déposé (N°)</Label>\n                            <Input\n                                id=\"tricone-depose\"\n                                type=\"text\"\n                                name=\"depose\"\n                                value={formData.tricone.depose}\n                                onChange={(e) => handleInputChange(e, 'tricone', undefined, 'depose')}\n                                 className=\"h-8\"\n                            />\n                        </div>\n                         <div>\n                            <Label htmlFor=\"tricone-cause\">Cause de Dépose</Label>\n                            <Select\n                                value={formData.tricone.causeDepose}\n                                onValueChange={(value) => handleSelectChange(value, 'tricone', 'causeDepose')}\n                                >\n                              <SelectTrigger id=\"tricone-cause\" className=\"w-full h-8\">\n                                <SelectValue placeholder=\"Sélectionner Cause\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {causeDeposeOptions.map((cause, index) => (\n                                  <SelectItem key={index} value={cause}>{cause}</SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                        </div>\n                    </div>\n                     <div>\n                        <Label htmlFor=\"tricone-index-compteur\">Index Compteur (Tricone)</Label>\n                        <Input\n                            id=\"tricone-index-compteur\"\n                            type=\"text\" // Use text for flexibility\n                            inputMode=\"decimal\"\n                            placeholder=\"Index au moment de la dépose\"\n                            name=\"indexCompteur\"\n                            value={formData.tricone.indexCompteur}\n                            onChange={(e) => handleInputChange(e, 'tricone', undefined, 'indexCompteur')}\n                            className=\"h-8\"\n                         />\n                    </div>\n               </div>\n\n               {/* Gasoil Sub-section */}\n               <div className=\"p-4 border rounded-lg space-y-4\">\n                    <h4 className=\"font-medium text-foreground\">Gasoil</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                        <div>\n                            <Label htmlFor=\"gasoil-lieu\">Lieu d'Appoint</Label>\n                            <Input\n                                id=\"gasoil-lieu\"\n                                type=\"text\"\n                                name=\"lieuAppoint\"\n                                value={formData.gasoil.lieuAppoint}\n                                onChange={(e) => handleInputChange(e, 'gasoil', undefined, 'lieuAppoint')}\n                                 className=\"h-8\"\n                            />\n                        </div>\n                        <div>\n                            <Label htmlFor=\"gasoil-index\">Index Compteur (Gasoil)</Label>\n                            <Input\n                                id=\"gasoil-index\"\n                                type=\"text\" // Use text\n                                inputMode=\"decimal\"\n                                name=\"indexCompteur\"\n                                value={formData.gasoil.indexCompteur}\n                                 onChange={(e) => handleInputChange(e, 'gasoil', undefined, 'indexCompteur')}\n                                  className=\"h-8\"\n                            />\n                        </div>\n                        <div>\n                            <Label htmlFor=\"gasoil-quantite\">Quantité Délivrée</Label>\n                            <Input\n                                id=\"gasoil-quantite\"\n                                type=\"text\" // Use text\n                                inputMode=\"decimal\"\n                                name=\"quantiteDelivree\"\n                                value={formData.gasoil.quantiteDelivree}\n                                onChange={(e) => handleInputChange(e, 'gasoil', undefined, 'quantiteDelivree')}\n                                 placeholder=\"en Litres\" // Added placeholder\n                                  className=\"h-8\"\n                            />\n                        </div>\n                    </div>\n               </div>\n            </div>\n\n\n            {/* Action Buttons */}\n            <div className=\"mt-8 flex justify-end space-x-3\">\n                <Button type=\"button\" variant=\"outline\">Enregistrer Brouillon</Button>{/* type=\"button\" to prevent form submission */}\n                <Button type=\"submit\" disabled={counterErrors.some(err => err !== '')}>\n                    Soumettre Rapport\n                </Button>{/* Submit button, disable if errors */}\n            </div>\n          </CardContent>\n      </form>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7605, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 7633, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect } from \"react\"; // Added React import for clarity, though often implicit\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Bell, Calendar as CalendarIcon } from \"lucide-react\"; // Added CalendarIcon\nimport { Toaster } from \"@/components/ui/toaster\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"; // Added Popover components\nimport { Calendar } from \"@/components/ui/calendar\"; // Added Calendar component\nimport { format } from \"date-fns\"; // Added date-fns format\nimport { fr } from \"date-fns/locale\"; // Added French locale for date formatting\n\nimport {\n  Navigation,\n  DailyReport,\n  ActivityReport,\n  TruckTracking,\n  R0Report,\n} from \"@/components/sections\"; // Adjusted import path\nimport Link from \"next/link\";\nimport { cn } from \"@/lib/utils\";\nimport { useAuth } from \"@/hooks/useAuth.tsx\"; // Import useAuth hook\nimport { useRouter } from \"next/navigation\"; // Import useRouter\n\nconst userName = \"JD\"; // Replace with actual user data if available\n\n// Type for Poste\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\n// Define all possible sections\nconst ALL_SECTIONS_CONFIG = [\n    { id: \"daily-report\", label: \"Activité TSUD\", component: DailyReport },\n    { id: \"activity-report\", label: \"Activité TNR\", component: ActivityReport },\n    { id: \"r0-report\", label: \"Rapport R0\", component: R0Report },\n    { id: \"truck-tracking\", label: \"Pointage Camions\", component: TruckTracking },\n];\n\n\nexport default function Home() {\n  const { user, loading, logout } = useAuth(); // Use the auth hook\n  const router = useRouter(); // Initialize router\n  const [isClient, setIsClient] = useState(false); // State to track client-side mount\n\n  // Determine allowed sections and set the initial active tab\n  const allowedSections = React.useMemo(() => {\n    // Default to no sections if user is null/loading or has no allowedSections\n    if (!user?.allowedSections || loading) return [];\n    return ALL_SECTIONS_CONFIG.filter(section => user.allowedSections!.includes(section.id));\n  }, [user?.allowedSections, loading]); // Add loading dependency\n\n  const [activeTab, setActiveTab] = useState(() => allowedSections[0]?.id || \"\"); // Default to first allowed tab or empty string\n   // Renamed currentDate to selectedDate and initialized with today's date\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date()); // Initialize with new Date()\n\n\n   // Ensure client-side execution for redirection\n   useEffect(() => {\n     setIsClient(true);\n   }, []);\n\n\n   // Redirect logic moved inside useEffect to ensure it runs client-side after hydration\n   useEffect(() => {\n     // Only redirect if on the client, not loading, and user is not logged in\n     if (isClient && !loading && !user) {\n       router.push('/login');\n     }\n   }, [isClient, loading, user, router]);\n\n    // Update active tab if the current one becomes disallowed or if none is set initially\n    useEffect(() => {\n      // Run this effect only when allowedSections are determined (i.e., not loading)\n      if (!loading) {\n        if (allowedSections.length > 0 && !allowedSections.find(s => s.id === activeTab)) {\n           setActiveTab(allowedSections[0].id); // Set to first allowed if current is invalid\n        } else if (allowedSections.length > 0 && !activeTab) {\n            setActiveTab(allowedSections[0].id); // Set initial if empty\n        } else if (allowedSections.length === 0) {\n            setActiveTab(\"\"); // No sections allowed\n        }\n      }\n    }, [allowedSections, activeTab, loading]); // Add loading dependency\n\n\n  // Helper function to get formatted date string, handles undefined case\n  const getFormattedDate = (date: Date | undefined, options: Intl.DateTimeFormatOptions): string => {\n    if (!date) return \"Sélectionner une date\"; // Placeholder if no date selected\n    // Ensure date is a valid Date object before formatting\n    if (!(date instanceof Date) || isNaN(date.getTime())) {\n       console.warn(\"Invalid date provided to getFormattedDate:\", date);\n       return \"Date invalide\";\n    }\n    return date.toLocaleDateString(\"fr-FR\", options);\n  };\n\n  const dateOptions: Intl.DateTimeFormatOptions = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n  };\n\n    // Handle logout\n  const handleLogout = async () => {\n    try {\n      await logout();\n      // Redirect handled by the useEffect hook above\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n      // Optionally show an error message to the user\n    }\n  };\n\n    // Show loading state while authentication status is being determined or client isn't mounted\n  if (loading || !isClient) {\n    return <div className=\"flex justify-center items-center min-h-screen\">Chargement...</div>; // Show loading state\n  }\n\n   // If useEffect determined redirection is needed, return null while it happens\n   if (!user) {\n     return null; // Prevent rendering the main content if not logged in\n   }\n\n\n  // TODO: Fetch previous day's 3rd shift end counter data here based on selectedDate\n  // Example placeholder: Needs to be dynamic based on selectedDate\n   const getPreviousDayThirdShiftEnd = (currentDate: Date | undefined): string | null => {\n     if (!currentDate) return null;\n     // Logic to fetch or determine the value for the day before currentDate\n     // This is just a placeholder\n     console.log(\"Fetching previous day 3rd shift end for:\", currentDate);\n     // Example: Fetch from Firestore based on the date (formatted YYYY-MM-DD)\n     // const prevDay = new Date(currentDate);\n     // prevDay.setDate(prevDay.getDate() - 1);\n     // const formattedPrevDay = prevDay.toISOString().split('T')[0];\n     // const docRef = doc(db, \"dailyData\", formattedPrevDay); // Assuming Firestore setup\n     // const docSnap = await getDoc(docRef);\n     // if (docSnap.exists()) {\n     //   return docSnap.data().poste3EndCounter || null; // Adjust field name\n     // }\n     return \"9341.0\"; // Replace with actual fetched data or null\n   };\n   const previousDayThirdShiftEnd = getPreviousDayThirdShiftEnd(selectedDate);\n\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <div className=\"container mx-auto px-4 py-6 max-w-7xl\"> {/* Increased max-width */}\n        {/* Header */}\n        <header className=\"mb-8 border-b pb-4\">\n          <div className=\"flex justify-between items-center flex-wrap gap-4\"> {/* Added flex-wrap and gap */}\n            <div className=\"flex-shrink-0\">\n              <h1 className=\"text-2xl font-bold\">R0</h1> {/* Updated Title */}\n              <p className=\"text-muted-foreground\">Application de rapport quotidien</p>\n            </div>\n\n            {/* Date Picker */}\n            <div className=\"flex-grow sm:flex-grow-0 order-3 sm:order-none w-full sm:w-auto\">\n                <Popover>\n                    <PopoverTrigger asChild>\n                    <Button\n                        variant={\"outline\"}\n                        className={cn(\n                        \"w-full sm:w-[280px] justify-start text-left font-normal\", // Adjusted width for full on small screens\n                        !selectedDate && \"text-muted-foreground\"\n                        )}\n                    >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {selectedDate ? format(selectedDate, \"PPP\", { locale: fr }) : <span>Choisir une date</span>}\n                    </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                    <Calendar\n                        mode=\"single\"\n                        selected={selectedDate}\n                        onSelect={setSelectedDate}\n                        initialFocus\n                        locale={fr} // Use French locale\n                    />\n                    </PopoverContent>\n                </Popover>\n             </div>\n\n\n            <div className=\"flex items-center space-x-4 order-2 sm:order-none\">\n              <Button className=\"rounded-full\" variant=\"ghost\" size=\"icon\">\n                <Bell className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Notifications</span>\n              </Button>\n              <Avatar className=\"w-10 h-10\">\n                 <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"@shadcn\" data-ai-hint=\"user profile picture\" />\n                 <AvatarFallback className=\"bg-primary text-primary-foreground font-bold\">\n                   {/* Check if user and user.email exist before accessing properties */}\n                   {user?.email ? user.email.substring(0, 2).toUpperCase() : '??'}\n                </AvatarFallback>\n              </Avatar>\n              {/* Link to admin page - Conditionally render based on role */}\n               {/* Check if user and user.role exist */}\n               {user?.role === 'admin' && (\n                  <Link href=\"/admin\" passHref>\n                      <Button variant=\"outline\">Admin Panel</Button>\n                  </Link>\n               )}\n               {/* Logout Button */}\n                <Button variant=\"outline\" onClick={handleLogout}>Déconnexion</Button>\n            </div>\n          </div>\n        </header>\n\n        {/* Navigation Tabs - Only show allowed sections */}\n        <Navigation\n            activeTab={activeTab}\n            setActiveTab={setActiveTab}\n            allowedSections={allowedSections.map(s => ({ id: s.id, label: s.label }))} // Pass only id and label\n        />\n\n        {/* Tab Content */}\n        <main id=\"tab-content\" className=\"mt-6\">\n           {/* Render content only when selectedDate is available */}\n           {selectedDate ? (\n               <>\n                  {allowedSections.map(section => {\n                     if (activeTab !== section.id) return null; // Only render the active tab's component\n\n                     const Component = section.component;\n                     const props: any = { selectedDate }; // Base props\n\n                      // Add previousDayThirdShiftEnd only for specific components\n                     if (section.id === 'activity-report' || section.id === 'r0-report') {\n                          props.previousDayThirdShiftEnd = previousDayThirdShiftEnd;\n                     }\n\n                     return <Component key={section.id} {...props} />;\n                  })}\n\n                  {/* Show message if no sections are allowed or none selected */}\n                  {allowedSections.length === 0 && (\n                      <div className=\"flex justify-center items-center h-64\">\n                         <p className=\"text-muted-foreground text-lg\">Vous n'avez accès à aucune section.</p>\n                      </div>\n                  )}\n               </>\n           ) : ( // Show a message prompting date selection\n                 <div className=\"flex justify-center items-center h-64\">\n                    <p className=\"text-muted-foreground text-lg\">Veuillez sélectionner une date pour afficher les rapports.</p>\n                 </div>\n            )}\n        </main>\n\n        <Toaster />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA,mRAAoD,wDAAwD;AAC5G;AACA;AACA,sVAA+D,qBAAqB;AAApF;AACA;AACA,2OAIkC,2BAA2B;AAC7D,6OAAqD,2BAA2B;AAChF,0QAAmC,wBAAwB;AAC3D,0PAAsC,0CAA0C;AAEhF,mSAMgC,uBAAuB;AANvD;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA,wNAA+C,sBAAsB;AACrE,4OAA6C,mBAAmB;;;AA1BhE;;;;;;;;;;;;;;;AA4BA,MAAM,WAAW,MAAM,6CAA6C;AAKpE,gCAAgC;AAChC,MAAM,cAAqC;IACzC,QAAQ;IACR,OAAO;IACP,QAAQ;AACV;AACA,MAAM,cAAuB;IAAC;IAAQ;IAAO;CAAO;AAEpD,+BAA+B;AAC/B,MAAM,sBAAsB;IACxB;QAAE,IAAI;QAAgB,OAAO;QAAiB,WAAW,gJAAA,CAAA,cAAW;IAAC;IACrE;QAAE,IAAI;QAAmB,OAAO;QAAgB,WAAW,mJAAA,CAAA,iBAAc;IAAC;IAC1E;QAAE,IAAI;QAAa,OAAO;QAAc,WAAW,6IAAA,CAAA,WAAQ;IAAC;IAC5D;QAAE,IAAI;QAAkB,OAAO;QAAoB,WAAW,kJAAA,CAAA,gBAAa;IAAC;CAC/E;AAGc,SAAS;;IACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD,KAAK,oBAAoB;IACjE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD,KAAK,oBAAoB;IAChD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,mCAAmC;IAEpF,4DAA4D;IAC5D,MAAM,kBAAkB,6JAAA,CAAA,UAAK,CAAC,OAAO;yCAAC;YACpC,2EAA2E;YAC3E,IAAI,CAAC,MAAM,mBAAmB,SAAS,OAAO,EAAE;YAChD,OAAO,oBAAoB,MAAM;iDAAC,CAAA,UAAW,KAAK,eAAe,CAAE,QAAQ,CAAC,QAAQ,EAAE;;QACxF;wCAAG;QAAC,MAAM;QAAiB;KAAQ,GAAG,yBAAyB;IAE/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;yBAAE,IAAM,eAAe,CAAC,EAAE,EAAE,MAAM;yBAAK,+CAA+C;IAC9H,wEAAwE;IACzE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,IAAI,SAAS,6BAA6B;IAG5G,+CAA+C;IAC/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,YAAY;QACd;yBAAG,EAAE;IAGL,sFAAsF;IACtF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,yEAAyE;YACzE,IAAI,YAAY,CAAC,WAAW,CAAC,MAAM;gBACjC,OAAO,IAAI,CAAC;YACd;QACF;yBAAG;QAAC;QAAU;QAAS;QAAM;KAAO;IAEnC,sFAAsF;IACtF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,+EAA+E;YAC/E,IAAI,CAAC,SAAS;gBACZ,IAAI,gBAAgB,MAAM,GAAG,KAAK,CAAC,gBAAgB,IAAI;sCAAC,CAAA,IAAK,EAAE,EAAE,KAAK;sCAAY;oBAC/E,aAAa,eAAe,CAAC,EAAE,CAAC,EAAE,GAAG,6CAA6C;gBACrF,OAAO,IAAI,gBAAgB,MAAM,GAAG,KAAK,CAAC,WAAW;oBACjD,aAAa,eAAe,CAAC,EAAE,CAAC,EAAE,GAAG,uBAAuB;gBAChE,OAAO,IAAI,gBAAgB,MAAM,KAAK,GAAG;oBACrC,aAAa,KAAK,sBAAsB;gBAC5C;YACF;QACF;yBAAG;QAAC;QAAiB;QAAW;KAAQ,GAAG,yBAAyB;IAGtE,uEAAuE;IACvE,MAAM,mBAAmB,CAAC,MAAwB;QAChD,IAAI,CAAC,MAAM,OAAO,yBAAyB,kCAAkC;QAC7E,uDAAuD;QACvD,IAAI,CAAC,CAAC,gBAAgB,IAAI,KAAK,MAAM,KAAK,OAAO,KAAK;YACnD,QAAQ,IAAI,CAAC,8CAA8C;YAC3D,OAAO;QACV;QACA,OAAO,KAAK,kBAAkB,CAAC,SAAS;IAC1C;IAEA,MAAM,cAA0C;QAC5C,MAAM;QACN,OAAO;QACP,KAAK;IACT;IAEE,gBAAgB;IAClB,MAAM,eAAe;QACnB,IAAI;YACF,MAAM;QACN,+CAA+C;QACjD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kBAAkB;QAChC,+CAA+C;QACjD;IACF;IAEE,6FAA6F;IAC/F,IAAI,WAAW,CAAC,UAAU;QACxB,qBAAO,6LAAC;YAAI,WAAU;sBAAgD;;;;;kBAAqB,qBAAqB;IAClH;IAEC,8EAA8E;IAC9E,IAAI,CAAC,MAAM;QACT,OAAO,MAAM,sDAAsD;IACrE;IAGD,mFAAmF;IACnF,iEAAiE;IAChE,MAAM,8BAA8B,CAAC;QACnC,IAAI,CAAC,aAAa,OAAO;QACzB,uEAAuE;QACvE,6BAA6B;QAC7B,QAAQ,GAAG,CAAC,4CAA4C;QACxD,yEAAyE;QACzE,yCAAyC;QACzC,0CAA0C;QAC1C,gEAAgE;QAChE,qFAAqF;QACrF,wCAAwC;QACxC,0BAA0B;QAC1B,yEAAyE;QACzE,IAAI;QACJ,OAAO,UAAU,2CAA2C;IAC9D;IACA,MAAM,2BAA2B,4BAA4B;IAG9D,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;gBAAwC;8BAErD,6LAAC;oBAAO,WAAU;8BAChB,cAAA,6LAAC;wBAAI,WAAU;;4BAAoD;0CACjE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAqB;;;;;;oCAAO;kDAC1C,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;;;;;;;0CAIvC,6LAAC;gCAAI,WAAU;0CACX,cAAA,6LAAC,sIAAA,CAAA,UAAO;;sDACJ,6LAAC,sIAAA,CAAA,iBAAc;4CAAC,OAAO;sDACvB,cAAA,6LAAC,qIAAA,CAAA,SAAM;gDACH,SAAS;gDACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACZ,2DACA,CAAC,gBAAgB;;kEAGjB,6LAAC,6MAAA,CAAA,WAAY;wDAAC,WAAU;;;;;;oDACvB,eAAe,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,OAAO;wDAAE,QAAQ,+IAAA,CAAA,KAAE;oDAAC,mBAAK,6LAAC;kEAAK;;;;;;;;;;;;;;;;;sDAGxE,6LAAC,sIAAA,CAAA,iBAAc;4CAAC,WAAU;sDAC1B,cAAA,6LAAC,uIAAA,CAAA,WAAQ;gDACL,MAAK;gDACL,UAAU;gDACV,UAAU;gDACV,YAAY;gDACZ,QAAQ,+IAAA,CAAA,KAAE;;;;;;;;;;;;;;;;;;;;;;0CAOtB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,qIAAA,CAAA,SAAM;wCAAC,WAAU;wCAAe,SAAQ;wCAAQ,MAAK;;0DACpD,6LAAC,qMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;0DAChB,6LAAC;gDAAK,WAAU;0DAAU;;;;;;;;;;;;kDAE5B,6LAAC,qIAAA,CAAA,SAAM;wCAAC,WAAU;;0DACf,6LAAC,qIAAA,CAAA,cAAW;gDAAC,KAAI;gDAAgC,KAAI;gDAAU,gBAAa;;;;;;0DAC5E,6LAAC,qIAAA,CAAA,iBAAc;gDAAC,WAAU;0DAEvB,MAAM,QAAQ,KAAK,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW,KAAK;;;;;;;;;;;;oCAK7D,MAAM,SAAS,yBACb,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAS,QAAQ;kDACxB,cAAA,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAQ;sDAAU;;;;;;;;;;;kDAIhC,6LAAC,qIAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAU,SAAS;kDAAc;;;;;;;;;;;;;;;;;;;;;;;8BAMzD,6LAAC,+IAAA,CAAA,aAAU;oBACP,WAAW;oBACX,cAAc;oBACd,iBAAiB,gBAAgB,GAAG,CAAC,CAAA,IAAK,CAAC;4BAAE,IAAI,EAAE,EAAE;4BAAE,OAAO,EAAE,KAAK;wBAAC,CAAC;;;;;;8BAI3E,6LAAC;oBAAK,IAAG;oBAAc,WAAU;8BAE7B,6BACG;;4BACI,gBAAgB,GAAG,CAAC,CAAA;gCAClB,IAAI,cAAc,QAAQ,EAAE,EAAE,OAAO,MAAM,yCAAyC;gCAEpF,MAAM,YAAY,QAAQ,SAAS;gCACnC,MAAM,QAAa;oCAAE;gCAAa,GAAG,aAAa;gCAEjD,4DAA4D;gCAC7D,IAAI,QAAQ,EAAE,KAAK,qBAAqB,QAAQ,EAAE,KAAK,aAAa;oCAC/D,MAAM,wBAAwB,GAAG;gCACtC;gCAEA,qBAAO,6LAAC;oCAA4B,GAAG,KAAK;mCAArB,QAAQ,EAAE;;;;;4BACpC;4BAGC,gBAAgB,MAAM,KAAK,mBACxB,6LAAC;gCAAI,WAAU;0CACZ,cAAA,6LAAC;oCAAE,WAAU;8CAAgC;;;;;;;;;;;;qDAKrD,6LAAC;wBAAI,WAAU;kCACZ,cAAA,6LAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;;;;;8BAKzD,6LAAC,sIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;AAIhB;GAtNwB;;QACY,2HAAA,CAAA,UAAO;QAC1B,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}