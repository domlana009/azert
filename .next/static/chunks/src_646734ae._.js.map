{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-8 w-8\", // Adjusted icon size for better fit in tables etc.\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n\n    "],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,gBAAgB,oKAAA,CAAA,WAAwB;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qIACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,oKAAA,CAAA,WAAwB,CAAC,WAAW;AAEhE,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6lBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAI3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE;IACnC,qBACE,6LAAC,oKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;;AACA,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAoB,CAAC,WAAW;AAEpD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,SAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sgBACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAA,CAAA,SAAsB,CAAC,WAAW;AAE5D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yVACA;QAEF,eAAY;QACX,GAAG,KAAK;kBAET,cAAA,6LAAC,+LAAA,CAAA,IAAC;YAAC,WAAU;;;;;;;;;;;;AAGjB,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,oKAAA,CAAA,QAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,oKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAE1B,qBACE,6LAAC,oIAAA,CAAA,gBAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,oIAAA,CAAA,QAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,oIAAA,CAAA,aAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,oIAAA,CAAA,mBAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,oIAAA,CAAA,aAAU;;;;;;mBARD;;;;;YAWhB;0BACA,6LAAC,oIAAA,CAAA,gBAAa;;;;;;;;;;;AAGpB;GAtBgB;;QACK,+HAAA,CAAA,WAAQ;;;KADb","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/Navigation.tsx"],"sourcesContent":["\n\"use client\";\ninterface NavigationProps {\n  activeTab: string;\n  setActiveTab: (tab: string) => void;\n}\n\nexport function Navigation({ activeTab, setActiveTab }: NavigationProps) {\n  // Removed 'another-page' from navItems\n  const navItems = [\n    { id: \"daily-report\", label: \"Activité TSUD\", icon: \"fas fa-file-alt\" },\n    { id: \"activity-report\", label: \"Activité TNR\", icon: \"fas fa-chart-line\" },\n    { id: \"r0-report\", label: \"Rapport R0\", icon: \"fas fa-file\" }, // Changed ID\n    { id: \"truck-tracking\", label: \"Pointage Camions\", icon: \"fas fa-truck\" },\n   ];\n\n  return (\n    <nav className=\"border-b overflow-x-auto whitespace-nowrap mb-6\">\n      <div className=\"flex space-x-1\">\n        {navItems.map((item) => (\n          <button\n            key={item.id}\n            role=\"tab\"\n            aria-selected={activeTab === item.id}\n            className={`px-4 py-2 font-medium text-sm rounded-t-md transition-colors duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-1 ${\n              activeTab === item.id\n                ? \"border-b-2 border-primary text-primary bg-primary/10\"\n                : \"text-muted-foreground hover:text-foreground hover:bg-muted/50\"\n            }`}\n            onClick={() => setActiveTab(item.id)}\n          >\n            {/* If you have icons, you can add them here, e.g., using lucide-react */}\n            {/* <i className={`${item.icon} mr-2`}></i> */}\n            {item.label}\n          </button>\n        ))}\n      </div>\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;AAMO,SAAS,WAAW,EAAE,SAAS,EAAE,YAAY,EAAmB;IACrE,uCAAuC;IACvC,MAAM,WAAW;QACf;YAAE,IAAI;YAAgB,OAAO;YAAiB,MAAM;QAAkB;QACtE;YAAE,IAAI;YAAmB,OAAO;YAAgB,MAAM;QAAoB;QAC1E;YAAE,IAAI;YAAa,OAAO;YAAc,MAAM;QAAc;QAC5D;YAAE,IAAI;YAAkB,OAAO;YAAoB,MAAM;QAAe;KACxE;IAEF,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC;oBAEC,MAAK;oBACL,iBAAe,cAAc,KAAK,EAAE;oBACpC,WAAW,CAAC,0JAA0J,EACpK,cAAc,KAAK,EAAE,GACjB,yDACA,iEACJ;oBACF,SAAS,IAAM,aAAa,KAAK,EAAE;8BAIlC,KAAK,KAAK;mBAZN,KAAK,EAAE;;;;;;;;;;;;;;;AAkBxB;KAhCgB","debugId":null}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 884, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, children, ...props }, ref) => ( // Accept children prop\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  >{children}</tr> // Render children directly without extra whitespace\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;kBACT;;;;;aAAe,oDAAoD;;;AAEvE,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/DailyReport.tsx"],"sourcesContent":["\n\"use client\";\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Trash } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\ninterface DailyReportProps {\n  selectedDate: Date; // Changed prop name and kept type as Date\n}\n\ninterface ModuleStop {\n  id: string; // Add unique id for key prop\n  duration: string;\n  nature: string;\n}\n\n// Helper function to parse duration strings into minutes\nfunction parseDurationToMinutes(duration: string): number {\n  if (!duration) return 0;\n\n  // Clean the string: remove anything not a digit, H, h, :, ·\n  // Allow spaces for flexibility e.g., \"1 H 20\"\n  const cleaned = duration.replace(/[^0-9Hh:·\\s]/g, '').trim();\n\n  let hours = 0;\n  let minutes = 0;\n\n  // Match formats like HH:MM, HH·MM, HH H MM, H:MM, H·MM, H H MM\n   let match = cleaned.match(/^(?:(\\d{1,2})\\s?[Hh:·]\\s?)?(\\d{1,2})$/);\n   if (match) {\n     hours = match[1] ? parseInt(match[1], 10) : 0;\n     minutes = parseInt(match[2], 10);\n     return (hours * 60) + minutes;\n   }\n\n\n   // Match formats like HH H, H H\n   match = cleaned.match(/^(\\d{1,2})\\s?[Hh]$/);\n    if (match) {\n      hours = parseInt(match[1], 10);\n      return hours * 60;\n    }\n\n  // Match only numbers (assume minutes)\n  match = cleaned.match(/^(\\d+)$/);\n  if (match) {\n    minutes = parseInt(match[1], 10);\n    return minutes;\n  }\n\n  console.warn(`Could not parse duration: \"${duration}\"`);\n  return 0; // Return 0 if parsing fails\n}\n\n\n// Helper function to format minutes into HHh MMm string\nfunction formatMinutesToHoursMinutes(totalMinutes: number): string {\n    if (isNaN(totalMinutes) || totalMinutes <= 0) return \"0h 0m\"; // Return 0 if non-positive\n    const hours = Math.floor(totalMinutes / 60);\n    const minutes = Math.round(totalMinutes % 60); // Round minutes\n    return `${hours}h ${minutes}m`;\n}\n\n\nexport function DailyReport({ selectedDate }: DailyReportProps) { // Updated prop name\n  const TOTAL_PERIOD_MINUTES = 24 * 60; // 24-hour period\n\n\n  const [module1Stops, setModule1Stops] = useState<ModuleStop[]>([\n    {\n      id: crypto.randomUUID(),\n      duration: \"1·20\",\n      nature: \"Marque produit d'agissant steril\",\n    },\n    { id: crypto.randomUUID(), duration: \"20\", nature: \"\" },\n  ]);\n  const [module2Stops, setModule2Stops] = useState<ModuleStop[]>([\n    { id: crypto.randomUUID(), duration: \"40\", nature: \"Lancement Vol. G3\" },\n  ]);\n\n  const [module1TotalDowntime, setModule1TotalDowntime] = useState(0);\n  const [module2TotalDowntime, setModule2TotalDowntime] = useState(0);\n  const [module1OperatingTime, setModule1OperatingTime] = useState(TOTAL_PERIOD_MINUTES);\n  const [module2OperatingTime, setModule2OperatingTime] = useState(TOTAL_PERIOD_MINUTES);\n\n   // Format date string once using the selectedDate prop\n   const formattedDate = selectedDate.toLocaleDateString(\"fr-FR\", {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  });\n\n\n   useEffect(() => {\n    const calculateTotals = (stops: ModuleStop[]) => {\n      const totalDowntime = stops.reduce((acc, stop) => acc + parseDurationToMinutes(stop.duration), 0);\n      // Calculate operating time based on a standard 24-hour period\n      const operatingTime = TOTAL_PERIOD_MINUTES - totalDowntime;\n      return { totalDowntime, operatingTime };\n    };\n\n    const { totalDowntime: m1Downtime, operatingTime: m1Operating } = calculateTotals(module1Stops);\n    setModule1TotalDowntime(m1Downtime);\n    setModule1OperatingTime(m1Operating >= 0 ? m1Operating : 0); // Ensure non-negative\n\n    const { totalDowntime: m2Downtime, operatingTime: m2Operating } = calculateTotals(module2Stops);\n    setModule2TotalDowntime(m2Downtime);\n    setModule2OperatingTime(m2Operating >= 0 ? m2Operating : 0); // Ensure non-negative\n\n  }, [module1Stops, module2Stops, TOTAL_PERIOD_MINUTES]);\n\n\n  const addStop = (module: number) => {\n    const newStop: ModuleStop = { id: crypto.randomUUID(), duration: \"\", nature: \"\" }; // Removed hm, ha\n    if (module === 1) {\n      setModule1Stops([...module1Stops, newStop]);\n    } else {\n      setModule2Stops([...module2Stops, newStop]);\n    }\n  };\n\n  const deleteStop = (module: number, id: string) => {\n    if (module === 1) {\n      setModule1Stops(module1Stops.filter(stop => stop.id !== id));\n    } else {\n       setModule2Stops(module2Stops.filter(stop => stop.id !== id));\n    }\n  };\n\n  // Updated updateStop to exclude hm and ha\n  const updateStop = (module: number, id: string, field: keyof Omit<ModuleStop, 'id'>, value: string) => {\n     const updater = (stops: ModuleStop[]) => {\n        return stops.map(stop => {\n            if (stop.id === id) {\n                return { ...stop, [field]: value };\n            }\n            return stop;\n        });\n    };\n\n    if (module === 1) {\n        setModule1Stops(updater(module1Stops));\n    } else {\n        setModule2Stops(updater(module2Stops));\n    }\n  };\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          RAPPORT JOURNALIER (Activité TSUD)\n        </CardTitle>\n        {/* Display the formatted date from the prop */}\n        <span className=\"text-sm text-muted-foreground\">{formattedDate}</span>\n      </CardHeader>\n\n      <CardContent className=\"p-0 space-y-6\">\n\n        {/* Module 1 Section */}\n        <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"font-semibold text-lg text-foreground\">Module 1 - Arrêts</h3>\n            <Button variant=\"link\" className=\"text-primary text-sm p-0 h-auto\" onClick={() => addStop(1)}>\n              + Ajouter Arrêt\n            </Button>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader className=\"bg-muted/50\">\n                <TableRow>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[120px]\">\n                    Durée (ex: 1h 30)\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                    Nature\n                  </TableHead>\n                  <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {module1Stops.map((stop) => (\n                  <TableRow key={stop.id} className=\"hover:bg-muted/50\">\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.duration}\n                        placeholder=\"ex: 1h 30\"\n                        onChange={(e) =>\n                          updateStop(1, stop.id, \"duration\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.nature}\n                        onChange={(e) =>\n                          updateStop(1, stop.id, \"nature\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2 text-right\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteStop(1, stop.id)}\n                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                        <span className=\"sr-only\">Supprimer</span>\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                 {module1Stops.length === 0 && (\n                    <TableRow>\n                        <TableCell colSpan={3} className=\"text-center text-muted-foreground p-4\"> {/* Adjusted colSpan to 3 */}\n                            Aucun arrêt ajouté pour le Module 1.\n                        </TableCell>\n                    </TableRow>\n                 )}\n              </TableBody>\n            </Table>\n          </div>\n           <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n              Total Arrêts Module 1: <strong>{formatMinutesToHoursMinutes(module1TotalDowntime)}</strong>\n           </div>\n        </div>\n\n        {/* Module 2 Section */}\n         <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n          <div className=\"flex justify-between items-center\">\n            <h3 className=\"font-semibold text-lg text-foreground\">Module 2 - Arrêts</h3>\n            <Button variant=\"link\" className=\"text-primary text-sm p-0 h-auto\" onClick={() => addStop(2)}>\n              + Ajouter Arrêt\n            </Button>\n          </div>\n\n          <div className=\"overflow-x-auto\">\n             <Table>\n               <TableHeader className=\"bg-muted/50\">\n                <TableRow>\n                   <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[120px]\">\n                    Durée (ex: 1h 30)\n                  </TableHead>\n                  <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                    Nature\n                  </TableHead>\n                  <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {module2Stops.map((stop) => (\n                  <TableRow key={stop.id} className=\"hover:bg-muted/50\">\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.duration}\n                        placeholder=\"ex: 1h 30\"\n                        onChange={(e) =>\n                          updateStop(2, stop.id, \"duration\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2\">\n                      <Input\n                        type=\"text\"\n                        className=\"w-full h-8 text-sm\"\n                        value={stop.nature}\n                        onChange={(e) =>\n                          updateStop(2, stop.id, \"nature\", e.target.value)\n                        }\n                      />\n                    </TableCell>\n                    <TableCell className=\"p-2 text-right\">\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteStop(2, stop.id)}\n                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                      >\n                        <Trash className=\"h-4 w-4\" />\n                         <span className=\"sr-only\">Supprimer</span>\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                {module2Stops.length === 0 && (\n                    <TableRow>\n                         <TableCell colSpan={3} className=\"text-center text-muted-foreground p-4\"> {/* Adjusted colSpan to 3 */}\n                            Aucun arrêt ajouté pour le Module 2.\n                        </TableCell>\n                    </TableRow>\n                 )}\n              </TableBody>\n            </Table>\n          </div>\n           <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n              Total Arrêts Module 2: <strong>{formatMinutesToHoursMinutes(module2TotalDowntime)}</strong>\n           </div>\n        </div>\n\n        {/* Totaux Section */}\n        <div className=\"p-4 border rounded-lg bg-muted/30\">\n          <h3 className=\"font-semibold text-lg text-foreground mb-4\">Totaux Temps de Fonctionnement (24h - Arrêts)</h3>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div className=\"space-y-1\">\n              <Label htmlFor=\"total-m1-operating\" className=\"text-sm text-muted-foreground\">\n                Module 1 Fonctionnement\n              </Label>\n              <Input id=\"total-m1-operating\" type=\"text\" value={formatMinutesToHoursMinutes(module1OperatingTime)} className=\"h-9 bg-input font-medium\" readOnly tabIndex={-1} />\n            </div>\n             <div className=\"space-y-1\">\n              <Label htmlFor=\"total-m2-operating\" className=\"text-sm text-muted-foreground\">\n                Module 2 Fonctionnement\n              </Label>\n              <Input id=\"total-m2-operating\" type=\"text\" value={formatMinutesToHoursMinutes(module2OperatingTime)} className=\"h-9 bg-input font-medium\" readOnly tabIndex={-1} />\n            </div>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"mt-8 flex justify-end space-x-3\">\n          <Button type=\"button\" variant=\"outline\">Enregistrer Brouillon</Button> {/* Changed to type=\"button\" */}\n          <Button type=\"submit\">Soumettre Rapport</Button> {/* Changed to type=\"submit\" */}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1815, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2030, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2082, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\n// Ensure AlertTitle and AlertDescription are exported\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2159, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/ActivityReport.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from \"react\"; // Import useEffect\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"; // Ensure Card is imported\nimport { Button } from \"@/components/ui/button\";\nimport { Trash, Plus, AlertCircle } from \"lucide-react\"; // Added Plus icon and AlertCircle\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"; // Import Select components\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Checkbox } from \"@/components/ui/checkbox\"; // Import Checkbox\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"; // Import Alert for displaying errors\nimport { cn } from \"@/lib/utils\"; // Import cn for conditional classes\n\n// Helper function to parse duration strings into minutes (copied from DailyReport)\nfunction parseDurationToMinutes(duration: string): number {\n  if (!duration) return 0;\n  const cleaned = duration.replace(/[^0-9Hh:·\\s]/g, '').trim();\n  let hours = 0;\n  let minutes = 0;\n  let match = cleaned.match(/^(?:(\\d{1,2})\\s?[Hh:·]\\s?)?(\\d{1,2})$/);\n  if (match) {\n    hours = match[1] ? parseInt(match[1], 10) : 0;\n    minutes = parseInt(match[2], 10);\n    return (hours * 60) + minutes;\n  }\n  match = cleaned.match(/^(\\d{1,2})\\s?[Hh]$/);\n  if (match) {\n    hours = parseInt(match[1], 10);\n    return hours * 60;\n  }\n  match = cleaned.match(/^(\\d+)$/);\n  if (match) {\n    minutes = parseInt(match[1], 10);\n    return minutes;\n  }\n  console.warn(`Could not parse duration: \"${duration}\"`);\n  return 0; // Return 0 if parsing fails\n}\n\n// Helper function to format minutes into HHh MMm string (copied from DailyReport)\nfunction formatMinutesToHoursMinutes(totalMinutes: number): string {\n  if (isNaN(totalMinutes) || totalMinutes <= 0) return \"0h 0m\"; // Return 0 if non-positive\n  const hours = Math.floor(totalMinutes / 60);\n  const minutes = Math.round(totalMinutes % 60); // Round minutes\n  return `${hours}h ${minutes}m`;\n}\n\n// Helper function to validate and parse counter values\nfunction validateAndParseCounterValue(value: string): number | null {\n    if (!value) return 0; // Treat empty as 0 for calculation, but might be invalid based on context\n    const cleaned = value.replace(/[^0-9.,]/g, '').replace(',', '.');\n    // Allow empty or just \".\" or \",\" as intermediate states, but they parse to NaN\n    if (cleaned === '' || cleaned === '.' || cleaned === ',') return null; // Indicate parsing failure/incompleteness\n    const parsed = parseFloat(cleaned);\n    return isNaN(parsed) ? null : parsed; // Return null if parsing failed\n}\n\n// Define total minutes for a 24-hour period\nconst TOTAL_PERIOD_MINUTES = 24 * 60; // Changed from 8 * 60\n\n// Helper function to calculate total duration in minutes from counters, considering validation\nfunction calculateTotalCounterMinutes(counters: Array<{ start: string; end: string; error?: string }>): number {\n  const totalHours = counters.reduce((acc, counter) => {\n    // Only include valid entries in the sum\n    if (counter.error) return acc; // Skip entries with errors\n\n    const startHours = validateAndParseCounterValue(counter.start);\n    const endHours = validateAndParseCounterValue(counter.end);\n\n    // Check if parsing was successful and end >= start\n    if (startHours !== null && endHours !== null && endHours >= startHours) {\n      return acc + (endHours - startHours);\n    }\n    // Ignore invalid or incomplete entries for the total calculation\n    return acc;\n  }, 0);\n  return Math.round(totalHours * 60); // Convert total hours to minutes and round\n}\n\n\ninterface ActivityReportProps {\n  selectedDate: Date; // Changed prop name and kept type as Date\n  previousDayThirdShiftEnd?: string | null; // Add prop for previous day's 3rd shift end counter\n}\n\n// Keep Poste constants for potential context or future use, even if UI element is removed\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\ntype Park = 'PARK 1' | 'PARK 2' | 'PARK 3';\ntype StockType = 'NORMAL' | 'OCEANE' | 'PB30';\ntype StockTime = 'HEURE DEBUT STOCK';\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\nconst PARKS: Park[] = ['PARK 1', 'PARK 2', 'PARK 3'];\nconst STOCK_TYPES: StockType[] = ['NORMAL', 'OCEANE', 'PB30'];\nconst STOCK_TIME_LABEL: StockTime = 'HEURE DEBUT STOCK';\n\n\ninterface Stop {\n  id: string;\n  duration: string;\n  nature: string;\n}\n\n// Updated Counter interface: added poste, removed total, added optional error field\ninterface Counter {\n    id: string;\n    poste?: Poste | ''; // Added optional Poste field\n    start: string;\n    end: string;\n    error?: string; // Optional error message for this entry\n}\n\n// Interface for Liaison Counters (same structure as Counter) - Added poste\ninterface LiaisonCounter {\n    id: string;\n    poste?: Poste | ''; // Added optional Poste field\n    start: string;\n    end: string;\n    error?: string; // Optional error message for this entry\n}\n\n// Simplified Stock Entry interface - Added poste field\ninterface StockEntry {\n  id: string;\n  poste: Poste | ''; // Added Poste selection\n  park: Park | '';\n  type: StockType | ''; // Only product types\n  quantity: string; // For NORMAL, OCEANE, PB30\n  startTime: string; // For HEURE DEBUT STOCK - kept separate for clarity\n  // Error is now calculated dynamically during render\n}\n\nconst MAX_HOURS_PER_POSTE = 8; // Max hours for a standard shift\n\nexport function ActivityReport({ selectedDate, previousDayThirdShiftEnd = null }: ActivityReportProps) { // Updated prop name\n\n\n  // const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\"); // Removed Poste selection state\n  const [stops, setStops] = useState<Stop[]>([\n    { id: crypto.randomUUID(), duration: \"4h 10\", nature: \"Manque Produit\" },\n    {\n      id: crypto.randomUUID(),\n      duration: \"1h 15\", // Changed format for testing\n      nature: \"Attent Saturation SiCo\",\n    },\n  ]);\n  // Updated initial state for vibrator counters to include poste\n  const [vibratorCounters, setVibratorCounters] = useState<Counter[]>([\n    { id: crypto.randomUUID(), poste: \"1er\", start: \"9341.0\", end: \"9395.30\" }, // Example values with poste\n  ]);\n  // State for liaison counters - Updated initial state to include poste\n  const [liaisonCounters, setLiaisonCounters] = useState<LiaisonCounter[]>([\n    { id: crypto.randomUUID(), poste: \"2ème\", start: \"100.5\", end: \"105.75\" }, // Example values with poste\n  ]);\n  // Updated state for stock entries - Added poste\n  const [stockEntries, setStockEntries] = useState<StockEntry[]>([\n      { id: crypto.randomUUID(), poste: '', park: '', type: '', quantity: '', startTime: '' } // Start with one empty entry including poste\n  ]);\n  // State for the single \"Heure Debut Stock\" time\n  const [stockStartTime, setStockStartTime] = useState('');\n\n\n  const [totalDowntime, setTotalDowntime] = useState(0);\n  const [operatingTime, setOperatingTime] = useState(TOTAL_PERIOD_MINUTES); // Use 24h base\n  // State for total counter durations\n  const [totalVibratorMinutes, setTotalVibratorMinutes] = useState(0);\n  const [totalLiaisonMinutes, setTotalLiaisonMinutes] = useState(0);\n  // State to track if there are any counter errors\n  const [hasVibratorErrors, setHasVibratorErrors] = useState(false);\n  const [hasLiaisonErrors, setHasLiaisonErrors] = useState(false);\n  // State to track stock entry errors (specifically for poste selection)\n  const [hasStockErrors, setHasStockErrors] = useState(false);\n\n  // State for counter validation errors (including sequential checks) - for ActivityReport counters\n   const [vibratorCounterErrors, setVibratorCounterErrors] = useState<Record<string, string>>({}); // Use record for ID-based errors\n   const [liaisonCounterErrors, setLiaisonCounterErrors] = useState<Record<string, string>>({});\n\n\n    // Format date string once using the selectedDate prop\n    const formattedDate = selectedDate.toLocaleDateString(\"fr-FR\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n    });\n\n\n  // Calculate total downtime and operating time whenever stops change\n  useEffect(() => {\n    const calculatedDowntime = stops.reduce((acc, stop) => acc + parseDurationToMinutes(stop.duration), 0);\n    setTotalDowntime(calculatedDowntime);\n\n    const calculatedOperatingTime = TOTAL_PERIOD_MINUTES - calculatedDowntime; // Use 24h base\n    setOperatingTime(calculatedOperatingTime >= 0 ? calculatedOperatingTime : 0); // Ensure non-negative\n\n  }, [stops]); // Removed TOTAL_PERIOD_MINUTES dependency as it's constant\n\n\n  // Function to validate a single counter entry - Includes max duration and sequential checks\n  const validateCounterEntry = (\n        counterId: string,\n        counters: Array<Counter | LiaisonCounter>,\n        type: 'vibrator' | 'liaison',\n        currentStartStr: string,\n        currentEndStr: string,\n        currentPoste?: Poste | '',\n        previousDayData?: string | null // Only needed for 1er poste vibrator check\n    ): string | undefined => {\n        const startVal = validateAndParseCounterValue(currentStartStr);\n        const endVal = validateAndParseCounterValue(currentEndStr);\n        const errorSetter = type === 'vibrator' ? setVibratorCounterErrors : setLiaisonCounterErrors;\n\n        // Basic Validation\n        if (startVal === null && currentStartStr !== '' && currentStartStr !== '.' && currentStartStr !== ',') return \"Début invalide.\";\n        if (endVal === null && currentEndStr !== '' && currentEndStr !== '.' && currentEndStr !== ',') return \"Fin invalide.\";\n        if (startVal !== null && endVal !== null && endVal < startVal) return \"Fin < Début.\";\n\n        // Max Duration Check (Per Poste Limit - 8 hours)\n        if (startVal !== null && endVal !== null) {\n            const durationHours = endVal - startVal;\n             if (durationHours > MAX_HOURS_PER_POSTE) {\n                 return `Durée max (${MAX_HOURS_PER_POSTE}h) dépassée (${durationHours.toFixed(2)}h).`;\n             }\n        }\n\n        // Sequential Validation (based on Poste)\n        const currentIndex = counters.findIndex(c => c.id === counterId);\n        if (currentIndex === -1 || !currentPoste) return undefined; // Cannot validate sequence without index or poste\n\n        // Find the correct index for the current poste in POSTE_ORDER ('3ème', '1er', '2ème')\n        const posteIndexInOrder = POSTE_ORDER.indexOf(currentPoste); // 0 for 3eme, 1 for 1er, 2 for 2eme\n\n        // Find the counter for the previous logical poste (handling wrap-around for 1er)\n        let previousCounter: Counter | LiaisonCounter | undefined = undefined;\n        let expectedPreviousFinStr: string | undefined | null = undefined; // Can be null if prev day data is null\n\n        if (posteIndexInOrder === 1) { // Current is 1er Poste (index 1 in POSTE_ORDER)\n            // Need previous day's 3rd shift end (passed as prop for vibrators)\n            if (type === 'vibrator') {\n                expectedPreviousFinStr = previousDayData; // Use prop\n                 // If previousDayData is null, it means no previous data, skip check\n                 // If undefined, prop wasn't passed, maybe warn or skip\n                 if (expectedPreviousFinStr === undefined) {\n                    // console.warn(\"Previous day 3rd shift data missing for 1er poste validation.\");\n                    expectedPreviousFinStr = null; // Treat as skip\n                 }\n            } else {\n                 // Need to find the 3rd poste *of the same day* if it exists in the liaison list\n                 previousCounter = counters.find((c, idx) => idx !== currentIndex && c.poste === '3ème');\n                 expectedPreviousFinStr = previousCounter?.end;\n            }\n\n        } else if (posteIndexInOrder !== -1) { // Check if posteIndexInOrder is valid (-1 means not found)\n            // Determine the previous poste based on POSTE_ORDER\n            const previousPosteIndex = (posteIndexInOrder === 0) ? 2 : posteIndexInOrder - 1; // If current is 3eme (idx 0), prev is 2eme (idx 2). Else, just subtract 1.\n            const previousPoste = POSTE_ORDER[previousPosteIndex];\n            // Find a counter with the previous poste in the *same list* (vibrator or liaison)\n            previousCounter = counters.find((c, idx) => idx !== currentIndex && c.poste === previousPoste);\n            expectedPreviousFinStr = previousCounter?.end;\n        }\n         // else: Current poste not found in POSTE_ORDER, or it's the first one logically (e.g., 3eme if no wrapping logic is added)\n\n        // Perform the check if an expected previous 'fin' value exists\n        if (expectedPreviousFinStr !== undefined && expectedPreviousFinStr !== null && currentStartStr !== '') {\n            const expectedPreviousFin = parseFloat(expectedPreviousFinStr);\n            if (isNaN(expectedPreviousFin)) {\n                 // This case might happen if the previous counter's 'fin' is invalid itself\n                 // We might want to propagate an error or handle it gracefully\n                 // For now, let's skip the sequential check if the reference is invalid\n                 // console.warn(`Previous counter's 'fin' value (${expectedPreviousFinStr}) is invalid.`);\n            } else if (startVal !== null && startVal !== expectedPreviousFin) {\n                 const prevPosteIndex = (posteIndexInOrder === 0) ? 2 : posteIndexInOrder - 1;\n                 const prevPosteName = posteIndexInOrder === 1 ? \"3ème (veille)\" : POSTE_ORDER[prevPosteIndex];\n                 return `Début (${startVal}) doit correspondre à Fin (${expectedPreviousFin}) du ${prevPosteName} Poste.`;\n             }\n        } else if (expectedPreviousFinStr === null) {\n             // Previous data explicitly not available (e.g., first day or no 3rd shift prev day)\n             // No sequential validation possible/needed for this boundary.\n         }\n         // else: No previous counter found, or previous 'fin' is empty, or current 'start' is empty - skip sequence check.\n\n\n        return undefined; // No error\n   };\n\n\n    // Calculate total counter durations and check for errors whenever counters change\n    useEffect(() => {\n        // --- Vibrator Counters ---\n        let vibratorValidationPassed = true;\n        const newVibratorErrors: Record<string, string> = {};\n        const validVibratorCounters = vibratorCounters.filter(c => {\n            const error = validateCounterEntry(c.id, vibratorCounters, 'vibrator', c.start, c.end, c.poste, previousDayThirdShiftEnd);\n             if ((c.start || c.end) && !c.poste) { // Also check if poste is missing when values exist\n                 newVibratorErrors[c.id] = \"Veuillez sélectionner un poste.\";\n                 vibratorValidationPassed = false;\n                 return false;\n             }\n            if (error) {\n                newVibratorErrors[c.id] = error;\n                vibratorValidationPassed = false;\n                return false;\n            }\n            return true; // Valid entry for total calculation\n        });\n\n        setVibratorCounterErrors(newVibratorErrors); // Update error state\n        setHasVibratorErrors(!vibratorValidationPassed); // Set general error flag\n\n        const vibratorTotal = calculateTotalCounterMinutes(validVibratorCounters);\n        setTotalVibratorMinutes(vibratorTotal);\n\n        // Check if total duration exceeds 24h (might need adjustment based on how postes overlap)\n        // This simple check might be too basic if postes can run concurrently.\n        if (vibratorTotal > TOTAL_PERIOD_MINUTES) {\n            console.warn(\"Total vibreur duration exceeds 24h period.\");\n            // Consider setting a general error or flagging relevant counters\n             setHasVibratorErrors(true);\n        }\n\n\n        // --- Liaison Counters ---\n        let liaisonValidationPassed = true;\n        const newLiaisonErrors: Record<string, string> = {};\n        const validLiaisonCounters = liaisonCounters.filter(c => {\n            // Liaison validation doesn't need previous day data prop\n             const error = validateCounterEntry(c.id, liaisonCounters, 'liaison', c.start, c.end, c.poste);\n              if ((c.start || c.end) && !c.poste) { // Also check if poste is missing\n                 newLiaisonErrors[c.id] = \"Veuillez sélectionner un poste.\";\n                 liaisonValidationPassed = false;\n                 return false;\n             }\n             if (error) {\n                newLiaisonErrors[c.id] = error;\n                liaisonValidationPassed = false;\n                return false;\n            }\n            return true;\n        });\n\n        setLiaisonCounterErrors(newLiaisonErrors);\n        setHasLiaisonErrors(!liaisonValidationPassed);\n\n        const liaisonTotal = calculateTotalCounterMinutes(validLiaisonCounters);\n        setTotalLiaisonMinutes(liaisonTotal);\n\n        if (liaisonTotal > TOTAL_PERIOD_MINUTES) {\n            console.warn(\"Total liaison duration exceeds 24h period.\");\n             setHasLiaisonErrors(true);\n        }\n\n         // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [vibratorCounters, liaisonCounters, previousDayThirdShiftEnd]); // Dependencies\n\n\n   // Check for stock entry errors (poste selection)\n   // Calculate hasStockErrors directly based on stockEntries state\n    useEffect(() => {\n      const activeEntryNeedsPoste = stockEntries.some(entry =>\n          (entry.park || entry.type || entry.quantity || entry.startTime) && !entry.poste // Consider startTime as well\n      );\n      setHasStockErrors(activeEntryNeedsPoste);\n    }, [stockEntries]);\n\n\n  const addStop = () => {\n    setStops([...stops, { id: crypto.randomUUID(), duration: \"\", nature: \"\" }]);\n  };\n\n  // Updated addVibratorCounter to include poste\n  const addVibratorCounter = () => {\n    setVibratorCounters([...vibratorCounters, { id: crypto.randomUUID(), poste: \"\", start: \"\", end: \"\" }]);\n  };\n\n  // Function to add liaison counter - Updated to include poste\n  const addLiaisonCounter = () => {\n    setLiaisonCounters([...liaisonCounters, { id: crypto.randomUUID(), poste: \"\", start: \"\", end: \"\" }]);\n  };\n\n   // Function to add stock entry - includes poste\n   const addStockEntry = () => {\n        setStockEntries([...stockEntries, { id: crypto.randomUUID(), poste: '', park: '', type: '', quantity: '', startTime: '' }]);\n   };\n\n\n  const deleteStop = (id: string) => {\n    setStops(stops.filter(stop => stop.id !== id));\n  };\n\n  const deleteVibratorCounter = (id: string) => {\n    setVibratorCounters(vibratorCounters.filter(counter => counter.id !== id));\n     // Clean up errors for the deleted counter\n     setVibratorCounterErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[id];\n        return newErrors;\n      });\n  };\n\n   // Function to delete liaison counter\n  const deleteLiaisonCounter = (id: string) => {\n    setLiaisonCounters(liaisonCounters.filter(counter => counter.id !== id));\n     // Clean up errors for the deleted counter\n      setLiaisonCounterErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[id];\n        return newErrors;\n      });\n  };\n\n  // Function to delete stock entry\n  const deleteStockEntry = (id: string) => {\n    setStockEntries(stockEntries.filter(entry => entry.id !== id));\n  };\n\n // Update field type to exclude hm and ha\n const updateStop = (id: string, field: keyof Omit<Stop, 'id'>, value: string) => {\n    setStops(stops.map(stop => stop.id === id ? { ...stop, [field]: value } : stop));\n };\n\n\n // Updated updateVibratorCounter with validation and poste handling\n const updateVibratorCounter = (id: string, field: keyof Omit<Counter, 'id' | 'error'>, value: string) => {\n    setVibratorCounters(prevCounters => prevCounters.map(counter => {\n        if (counter.id === id) {\n            const updatedCounter = { ...counter, [field]: value };\n\n            // Clear specific error for this counter immediately when input changes\n            setVibratorCounterErrors(prevErrors => {\n                const newErrors = { ...prevErrors };\n                delete newErrors[id]; // Remove error for this counter\n                return newErrors;\n            });\n\n            // The useEffect hook will handle re-validation and updating the error state\n            return updatedCounter;\n        }\n        return counter;\n    }));\n };\n\n // Function to update liaison counter with validation and poste handling - Similar to updateVibratorCounter\n const updateLiaisonCounter = (id: string, field: keyof Omit<LiaisonCounter, 'id' | 'error'>, value: string) => {\n     setLiaisonCounters(prevCounters => prevCounters.map(counter => {\n         if (counter.id === id) {\n             const updatedCounter = { ...counter, [field]: value };\n\n             // Clear specific error for this counter immediately\n             setLiaisonCounterErrors(prevErrors => {\n                 const newErrors = { ...prevErrors };\n                 delete newErrors[id]; // Remove error for this counter\n                 return newErrors;\n             });\n\n             // Re-validation happens in useEffect\n             return updatedCounter;\n         }\n         return counter;\n    }));\n };\n\n\n // Function to update stock entry - simplified, includes poste\n const updateStockEntry = (id: string, field: keyof Omit<StockEntry, 'id'>, value: string | boolean, parkOrType?: Park | StockType) => {\n    setStockEntries(stockEntries.map(entry => {\n      if (entry.id === id) {\n         const updatedEntry = { ...entry, [field]: value };\n\n         // Reset dependent fields or validate poste\n         if (field === 'poste') {\n             updatedEntry.park = ''; // Reset park, type, quantity when poste changes\n             updatedEntry.type = '';\n             updatedEntry.quantity = '';\n             updatedEntry.startTime = ''; // Also reset startTime if applicable?\n         } else if (field === 'park') {\n             updatedEntry.type = ''; // Reset type/quantity when park changes\n             updatedEntry.quantity = '';\n              updatedEntry.startTime = ''; // Reset start time if park changes\n         } else if (field === 'type') {\n            updatedEntry.quantity = ''; // Reset quantity when type changes\n             updatedEntry.startTime = ''; // Reset start time if type changes\n         } else if (field === 'startTime') {\n              // Maybe reset other fields if start time is the primary identifier?\n              updatedEntry.park = '';\n              updatedEntry.type = '';\n              updatedEntry.quantity = '';\n         }\n\n         return updatedEntry;\n      }\n      return entry;\n    }));\n  };\n\n  // Handle form submission - Prevent if counter or stock errors exist\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Explicitly check the general error flags which are updated by useEffect\n     if (hasVibratorErrors || hasLiaisonErrors || hasStockErrors) {\n        console.error(\"Validation failed: Invalid inputs detected in counters or stock.\");\n        // Optionally, provide user feedback (e.g., using a toast)\n        // toast({ title: \"Erreur de Validation\", description: \"Veuillez corriger les erreurs dans les formulaires.\", variant: \"destructive\" });\n\n        // Focus the first input with an error (example)\n        const firstVibratorErrorId = Object.keys(vibratorCounterErrors).find(id => vibratorCounterErrors[id]);\n        if (firstVibratorErrorId) {\n            document.getElementById(`vibrator-start-${firstVibratorErrorId}`)?.focus();\n            return;\n        }\n        const firstLiaisonErrorId = Object.keys(liaisonCounterErrors).find(id => liaisonCounterErrors[id]);\n         if (firstLiaisonErrorId) {\n             document.getElementById(`liaison-start-${firstLiaisonErrorId}`)?.focus();\n            return;\n         }\n         // Add similar logic for stock errors if needed\n         const firstStockErrorEntry = stockEntries.find(entry => (entry.park || entry.type || entry.quantity || entry.startTime) && !entry.poste);\n         if (firstStockErrorEntry) {\n             // Focus the poste select for the first erroneous stock entry\n             document.getElementById(`stock-poste-trigger-${firstStockErrorEntry.id}`)?.focus();\n             return;\n         }\n\n\n        return; // Stop submission\n    }\n\n    // If validation passes, proceed with submission logic\n    console.log(\"Submitting Activity Report:\", {\n        stops,\n        vibratorCounters, // Submit validated counters\n        liaisonCounters, // Submit validated counters\n        stockEntries, // Submit validated stock entries\n        //stockStartTime, // Removed stockStartTime, handled within stockEntries now\n        totalDowntime,\n        operatingTime,\n        totalVibratorMinutes, // Submit calculated totals\n        totalLiaisonMinutes, // Submit calculated totals\n    });\n    // TODO: Replace console.log with actual API call or state management update\n    // e.g., await submitActivityReport({ ... });\n  };\n\n\n  return (\n    <Card className=\"bg-card text-card-foreground rounded-lg shadow-md p-6 mb-6\">\n      <CardHeader className=\"flex flex-row justify-between items-center pb-4 space-y-0 border-b mb-6\">\n        <CardTitle className=\"text-xl font-bold\">\n          RAPPORT D'ACTIVITÉ TNR\n        </CardTitle>\n        {/* Display the formatted date from the prop */}\n        <span className=\"text-sm text-muted-foreground\">{formattedDate}</span>\n      </CardHeader>\n\n      {/* Wrap content in a form */}\n       <form onSubmit={handleSubmit}>\n            <CardContent className=\"p-0 space-y-6\"> {/* Added space-y-6 */}\n\n                {/* Arrêts Section */}\n                <div className=\"space-y-4 p-4 border rounded-lg bg-card\"> {/* Replaced mb-6 and added styling */}\n                    <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-semibold text-lg text-foreground\">Arrêts</h3>\n                        <Button variant=\"link\" type=\"button\" onClick={addStop} className=\"text-primary text-sm p-0 h-auto\">\n                            <Plus className=\"h-4 w-4 mr-1\" /> Ajouter Arrêt\n                        </Button>\n                    </div>\n\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                            <TableHeader className=\"bg-muted/50\">\n                                <TableRow>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[120px]\">\n                                    Durée (ex: 1h 30)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Nature\n                                </TableHead>\n                                <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {stops.map((stop) => (\n                                <TableRow key={stop.id} className=\"hover:bg-muted/50\">\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        type=\"text\"\n                                        className=\"w-full h-8 text-sm\" // w-24 removed -> w-full\n                                        placeholder=\"ex: 1h 30\"\n                                        value={stop.duration}\n                                        onChange={(e) =>\n                                        updateStop(stop.id, \"duration\", e.target.value)\n                                        }\n                                    />\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        type=\"text\"\n                                        className=\"w-full h-8 text-sm\"\n                                        value={stop.nature}\n                                        onChange={(e) =>\n                                        updateStop(stop.id, \"nature\", e.target.value)\n                                        }\n                                    />\n                                    </TableCell>\n                                    <TableCell className=\"p-2 text-right\">\n                                    <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        type=\"button\" // Prevent form submission\n                                        onClick={() => deleteStop(stop.id)}\n                                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                                    >\n                                        <Trash className=\"h-4 w-4\" />\n                                        <span className=\"sr-only\">Supprimer</span>\n                                    </Button>\n                                    </TableCell>\n                                </TableRow>\n                                ))}\n                                {stops.length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={3} className=\"text-center text-muted-foreground p-4\">\n                                            Aucun arrêt ajouté.\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n                        Total Arrêts: <strong>{formatMinutesToHoursMinutes(totalDowntime)}</strong>\n                    </div>\n                </div>\n\n                {/* Operating Time Display */}\n                <div className=\"p-4 border rounded-lg bg-muted/30\">\n                    {/* Updated Label */}\n                    <h3 className=\"font-semibold text-lg text-foreground mb-2\">Temps de Fonctionnement (24h - Arrêts)</h3>\n                    <div className=\"space-y-1\">\n                        <Label htmlFor=\"total-operating-tnr\" className=\"text-sm text-muted-foreground\">\n                            Temps de Fonctionnement Estimé\n                        </Label>\n                        <Input id=\"total-operating-tnr\" type=\"text\" value={formatMinutesToHoursMinutes(operatingTime)} className=\"h-9 bg-input font-medium\" readOnly tabIndex={-1}/>\n                    </div>\n                </div>\n\n\n                {/* Compteurs Vibreurs Section */}\n                <div className=\"space-y-4 p-4 border rounded-lg bg-card\"> {/* Replaced mb-6 and added styling */}\n                    <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-semibold text-lg text-foreground\">Compteurs Vibreurs</h3>\n                        <Button variant=\"link\" type=\"button\" className=\"text-primary text-sm p-0 h-auto\" onClick={addVibratorCounter}>\n                            <Plus className=\"h-4 w-4 mr-1\" /> Ajouter Vibreur\n                        </Button>\n                    </div>\n                    {/* General Error Alert for Vibrator Counters */}\n                    {hasVibratorErrors && (\n                        <Alert variant=\"destructive\" className=\"mt-2\">\n                            <AlertCircle className=\"h-4 w-4\" />\n                            <AlertDescription>\n                                Erreur(s) dans les compteurs vibreurs. Vérifiez les postes, la continuité et les valeurs (Fin ≥ Début, Durée max {MAX_HOURS_PER_POSTE}h/poste). {/* Updated error message */}\n                            </AlertDescription>\n                        </Alert>\n                    )}\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                            <TableHeader className=\"bg-muted/50\">\n                                <TableRow>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\"> {/* Added width */}\n                                    Poste\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Début (ex: 9341.0)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Fin (ex: 9395.3)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {vibratorCounters.map((counter) => (\n                                <TableRow key={counter.id} className=\"hover:bg-muted/50\">\n                                     <TableCell className=\"p-2\"> {/* Cell for Poste Select */}\n                                        <Select\n                                            value={counter.poste}\n                                            onValueChange={(value: Poste) => updateVibratorCounter(counter.id, \"poste\", value)}\n                                            >\n                                            <SelectTrigger id={`vibrator-poste-trigger-${counter.id}`} className={cn(\"h-8 text-sm\", vibratorCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}>\n                                                <SelectValue placeholder=\"Sélectionner\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {POSTE_ORDER.map(p => (\n                                                    <SelectItem key={p} value={p}>\n                                                        {p} Poste ({POSTE_TIMES[p]})\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                         {vibratorCounterErrors[counter.id]?.includes(\"poste\") && <p className=\"text-xs text-destructive pt-1\">{vibratorCounterErrors[counter.id]}</p>}\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        id={`vibrator-start-${counter.id}`} // Add ID for focusing\n                                        type=\"text\" // Use text to allow different formats initially\n                                        inputMode=\"decimal\" // Hint for mobile keyboards\n                                        className={cn(\"w-full h-8 text-sm\", vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}\n                                        value={counter.start}\n                                        placeholder=\"Index début\"\n                                        onChange={(e) =>\n                                        updateVibratorCounter(counter.id, \"start\", e.target.value)\n                                        }\n                                        aria-invalid={!!vibratorCounterErrors[counter.id]}\n                                        aria-describedby={vibratorCounterErrors[counter.id] ? `error-vibrator-${counter.id}` : undefined}\n                                    />\n                                     {vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") && <p id={`error-vibrator-${counter.id}`} className=\"text-xs text-destructive pt-1\">{vibratorCounterErrors[counter.id]}</p>}\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        id={`vibrator-end-${counter.id}`} // Add ID for focusing\n                                        type=\"text\" // Use text to allow different formats initially\n                                        inputMode=\"decimal\"\n                                        className={cn(\"w-full h-8 text-sm\", vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}\n                                        value={counter.end}\n                                        placeholder=\"Index fin\"\n                                        onChange={(e) =>\n                                        updateVibratorCounter(counter.id, \"end\", e.target.value)\n                                        }\n                                         aria-invalid={!!vibratorCounterErrors[counter.id]}\n                                         aria-describedby={vibratorCounterErrors[counter.id] ? `error-vibrator-${counter.id}` : undefined}\n                                    />\n                                    {/* Display error inline only if error exists and is NOT related to poste selection */}\n                                    {vibratorCounterErrors[counter.id] && !vibratorCounterErrors[counter.id]?.includes(\"poste\") ? <p id={`error-vibrator-${counter.id}-end`} className=\"text-xs text-destructive pt-1\">{vibratorCounterErrors[counter.id]}</p> : null}\n                                    </TableCell>\n                                    <TableCell className=\"p-2 text-right\">\n                                    <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        type=\"button\" // Prevent form submission\n                                        onClick={() => deleteVibratorCounter(counter.id)}\n                                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                                    >\n                                        <Trash className=\"h-4 w-4\" />\n                                        <span className=\"sr-only\">Supprimer</span>\n                                    </Button>\n                                    </TableCell>\n                                </TableRow>\n                                ))}\n                                {vibratorCounters.length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={4} className=\"text-center text-muted-foreground p-4\"> {/* Updated colSpan */}\n                                            Aucun compteur vibreur ajouté.\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    {/* Display Total Vibreur Duration */}\n                    <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n                        Durée Totale Vibreurs: <strong>{formatMinutesToHoursMinutes(totalVibratorMinutes)}</strong>\n                    </div>\n                </div>\n\n                {/* Compteurs LIAISON Section */}\n                <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n                    <div className=\"flex justify-between items-center\">\n                        <h3 className=\"font-semibold text-lg text-foreground\">Compteurs LIAISON</h3>\n                        <Button variant=\"link\" type=\"button\" className=\"text-primary text-sm p-0 h-auto\" onClick={addLiaisonCounter}>\n                            <Plus className=\"h-4 w-4 mr-1\" /> Ajouter Liaison\n                        </Button>\n                    </div>\n                     {/* General Error Alert for Liaison Counters */}\n                     {hasLiaisonErrors && (\n                        <Alert variant=\"destructive\" className=\"mt-2\">\n                            <AlertCircle className=\"h-4 w-4\" />\n                             <AlertDescription>\n                                Erreur(s) dans les compteurs liaison. Vérifiez les postes, la continuité et les valeurs (Fin ≥ Début, Durée max {MAX_HOURS_PER_POSTE}h/poste). {/* Updated error message */}\n                            </AlertDescription>\n                        </Alert>\n                    )}\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                            <TableHeader className=\"bg-muted/50\">\n                                <TableRow>\n                                 <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\"> {/* Added width */}\n                                    Poste\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Début (ex: 100.5)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">\n                                    Fin (ex: 105.75)\n                                </TableHead>\n                                <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {liaisonCounters.map((counter) => (\n                                <TableRow key={counter.id} className=\"hover:bg-muted/50\">\n                                     <TableCell className=\"p-2\"> {/* Cell for Poste Select */}\n                                        <Select\n                                            value={counter.poste}\n                                            onValueChange={(value: Poste) => updateLiaisonCounter(counter.id, \"poste\", value)}\n                                            >\n                                            <SelectTrigger id={`liaison-poste-trigger-${counter.id}`} className={cn(\"h-8 text-sm\", liaisonCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}>\n                                                <SelectValue placeholder=\"Sélectionner\" />\n                                            </SelectTrigger>\n                                            <SelectContent>\n                                                {POSTE_ORDER.map(p => (\n                                                    <SelectItem key={p} value={p}>\n                                                        {p} Poste ({POSTE_TIMES[p]})\n                                                    </SelectItem>\n                                                ))}\n                                            </SelectContent>\n                                        </Select>\n                                         {liaisonCounterErrors[counter.id]?.includes(\"poste\") && <p className=\"text-xs text-destructive pt-1\">{liaisonCounterErrors[counter.id]}</p>}\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        id={`liaison-start-${counter.id}`} // Add ID\n                                        type=\"text\" // Use text to allow different formats initially\n                                        inputMode=\"decimal\"\n                                        className={cn(\"w-full h-8 text-sm\", liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}\n                                        value={counter.start}\n                                        placeholder=\"Index début\"\n                                        onChange={(e) =>\n                                        updateLiaisonCounter(counter.id, \"start\", e.target.value)\n                                        }\n                                        aria-invalid={!!liaisonCounterErrors[counter.id]}\n                                        aria-describedby={liaisonCounterErrors[counter.id] ? `error-liaison-${counter.id}` : undefined}\n                                    />\n                                    {liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") && <p id={`error-liaison-${counter.id}`} className=\"text-xs text-destructive pt-1\">{liaisonCounterErrors[counter.id]}</p>}\n                                    </TableCell>\n                                    <TableCell className=\"p-2\">\n                                    <Input\n                                        id={`liaison-end-${counter.id}`} // Add ID\n                                        type=\"text\" // Use text to allow different formats initially\n                                        inputMode=\"decimal\"\n                                        className={cn(\"w-full h-8 text-sm\", liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") && \"border-destructive focus-visible:ring-destructive\")}\n                                        value={counter.end}\n                                        placeholder=\"Index fin\"\n                                        onChange={(e) =>\n                                        updateLiaisonCounter(counter.id, \"end\", e.target.value)\n                                        }\n                                        aria-invalid={!!liaisonCounterErrors[counter.id]}\n                                        aria-describedby={liaisonCounterErrors[counter.id] ? `error-liaison-${counter.id}` : undefined}\n                                    />\n                                     {/* Display error inline only if error exists and is NOT related to poste selection */}\n                                     {liaisonCounterErrors[counter.id] && !liaisonCounterErrors[counter.id]?.includes(\"poste\") ? <p id={`error-liaison-${counter.id}-end`} className=\"text-xs text-destructive pt-1\">{liaisonCounterErrors[counter.id]}</p> : null }\n                                    </TableCell>\n                                    <TableCell className=\"p-2 text-right\">\n                                    <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        type=\"button\" // Prevent form submission\n                                        onClick={() => deleteLiaisonCounter(counter.id)}\n                                        className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                                    >\n                                        <Trash className=\"h-4 w-4\" />\n                                        <span className=\"sr-only\">Supprimer</span>\n                                    </Button>\n                                    </TableCell>\n                                </TableRow>\n                                ))}\n                                {liaisonCounters.length === 0 && (\n                                    <TableRow>\n                                        <TableCell colSpan={4} className=\"text-center text-muted-foreground p-4\"> {/* Updated colSpan */}\n                                            Aucun compteur liaison ajouté.\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                    {/* Display Total Liaison Duration */}\n                    <div className=\"mt-2 text-right text-sm text-muted-foreground\">\n                        Durée Totale Liaison: <strong>{formatMinutesToHoursMinutes(totalLiaisonMinutes)}</strong>\n                    </div>\n                </div>\n\n\n                {/* Stock Section - Simplified */}\n                <div className=\"space-y-4 p-4 border rounded-lg bg-card\">\n                    <div className=\"flex justify-between items-center mb-4\">\n                        <h3 className=\"font-semibold text-lg text-foreground\">Stock</h3>\n                        <Button variant=\"link\" type=\"button\" className=\"text-primary text-sm p-0 h-auto\" onClick={addStockEntry}>\n                        <Plus className=\"h-4 w-4 mr-1\" /> Ajouter Entrée Stock\n                        </Button>\n                    </div>\n                     {/* General Error Alert for Stock */}\n                    {hasStockErrors && (\n                        <Alert variant=\"destructive\" className=\"mt-2\">\n                            <AlertCircle className=\"h-4 w-4\" />\n                            <AlertDescription>\n                                Erreur(s) dans les entrées de stock. Veuillez sélectionner un poste pour chaque entrée active.\n                            </AlertDescription>\n                        </Alert>\n                    )}\n\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                        <TableHeader className=\"bg-muted/50\">\n                            <TableRow>\n                            <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\">Poste</TableHead>{/* Added Poste Head */}\n                            <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[150px]\">PARK</TableHead>\n                            <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground w-[250px]\">Type Produit / Info</TableHead>{/* Merged Type/Time */}\n                            <TableHead className=\"p-2 text-left text-sm font-medium text-muted-foreground\">Quantité / Heure</TableHead>{/* Merged Quantity/Time */}\n                            <TableHead className=\"p-2 text-right text-sm font-medium text-muted-foreground w-[50px]\"></TableHead>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            {stockEntries.map((entry) => {\n                                // Calculate error dynamically for each entry\n                                const entryError = (entry.park || entry.type || entry.quantity || entry.startTime) && !entry.poste ? \"Veuillez sélectionner un poste.\" : undefined;\n                                return (\n                                    <TableRow key={entry.id} className=\"hover:bg-muted/50\">\n                                        {/* Poste Selection Cell */}\n                                        <TableCell className=\"p-2 align-top\">\n                                            <Select\n                                                value={entry.poste}\n                                                onValueChange={(value: Poste) => updateStockEntry(entry.id, \"poste\", value)}\n                                            >\n                                                <SelectTrigger id={`stock-poste-trigger-${entry.id}`} className={cn(\"h-8 text-sm w-[130px]\", entryError && \"border-destructive focus-visible:ring-destructive\")}>\n                                                    <SelectValue placeholder=\"Poste\" />\n                                                </SelectTrigger>\n                                                <SelectContent>\n                                                    {POSTE_ORDER.map(p => (\n                                                        <SelectItem key={p} value={p}>\n                                                            {p} Poste\n                                                        </SelectItem>\n                                                    ))}\n                                                </SelectContent>\n                                            </Select>\n                                            {entryError && <p className=\"text-xs text-destructive pt-1\">{entryError}</p>}\n                                        </TableCell>\n                                        {/* Park Checkboxes */}\n                                        <TableCell className=\"p-2 align-top\">\n                                        <div className=\"space-y-2\">\n                                            {PARKS.map(park => (\n                                            <div key={park} className=\"flex items-center space-x-2\">\n                                                <Checkbox\n                                                id={`${entry.id}-${park}`}\n                                                checked={entry.park === park}\n                                                disabled={!entry.poste} // Disable if no poste selected\n                                                onCheckedChange={(checked) => updateStockEntry(entry.id, 'park', checked ? park : '', park)}\n                                                />\n                                                <Label htmlFor={`${entry.id}-${park}`} className={`font-normal text-sm ${!entry.poste ? 'text-muted-foreground' : ''}`}>{park}</Label>\n                                            </div>\n                                            ))}\n                                        </div>\n                                        </TableCell>\n                                        {/* Type / Start Time Checkboxes */}\n                                        <TableCell className=\"p-2 align-top\">\n                                            <div className=\"space-y-2\">\n                                                {/* Product Types */}\n                                                {STOCK_TYPES.map(type => (\n                                                <div key={type} className=\"flex items-center space-x-2\">\n                                                    <Checkbox\n                                                    id={`${entry.id}-${type}`}\n                                                    checked={entry.type === type}\n                                                    disabled={!entry.poste || !entry.park} // Disable if no poste or park selected\n                                                    onCheckedChange={(checked) => updateStockEntry(entry.id, 'type', checked ? type : '', type)}\n                                                    />\n                                                    <Label htmlFor={`${entry.id}-${type}`} className={`font-normal text-sm ${!entry.poste || !entry.park ? 'text-muted-foreground' : ''}`}>{type}</Label>\n                                                </div>\n                                                ))}\n                                                {/* HEURE DEBUT STOCK */}\n                                                 <div key={STOCK_TIME_LABEL} className=\"flex items-center space-x-2\">\n                                                    <Checkbox\n                                                        id={`${entry.id}-startTime`}\n                                                        // Check if startTime has a value to determine checked state\n                                                        checked={!!entry.startTime}\n                                                        disabled={!entry.poste || !!entry.park} // Disable if no poste or if park is selected\n                                                        onCheckedChange={(checked) => updateStockEntry(entry.id, 'startTime', checked ? (entry.startTime || '00:00') : '', undefined)} // Set to '00:00' if checked, clear otherwise\n                                                    />\n                                                    <Label htmlFor={`${entry.id}-startTime`} className={`font-normal text-sm ${!entry.poste || !!entry.park ? 'text-muted-foreground' : ''}`}>{STOCK_TIME_LABEL}</Label>\n                                                </div>\n                                            </div>\n                                        </TableCell>\n                                        {/* Quantity / Time Input */}\n                                        <TableCell className=\"p-2 align-top\">\n                                            {/* Show Quantity input only if a type is selected */}\n                                            {entry.type && (\n                                                <Input\n                                                    type=\"number\"\n                                                    step=\"0.01\" // Allow decimals\n                                                    min=\"0\"\n                                                    className=\"w-full h-8 text-sm mt-1\" // Align with checkboxes\n                                                    placeholder=\"Quantité\"\n                                                    value={entry.quantity}\n                                                    disabled={!entry.poste || !entry.type} // Disable if no poste or type selected\n                                                    onChange={(e) => updateStockEntry(entry.id, \"quantity\", e.target.value)}\n                                                />\n                                            )}\n                                            {/* Show Time input only if startTime checkbox is checked */}\n                                            {!!entry.startTime && (\n                                                 <Input\n                                                    type=\"time\"\n                                                    className=\"w-full h-8 text-sm mt-1\" // Align with checkboxes\n                                                    value={entry.startTime}\n                                                    disabled={!entry.poste || !!entry.park} // Disable if no poste or park selected\n                                                    onChange={(e) => updateStockEntry(entry.id, \"startTime\", e.target.value)}\n                                                />\n                                            )}\n                                        </TableCell>\n                                        {/* Delete Button */}\n                                        <TableCell className=\"p-2 text-right align-top\">\n                                        <Button\n                                            variant=\"ghost\"\n                                            size=\"icon\"\n                                            type=\"button\" // Prevent form submission\n                                            onClick={() => deleteStockEntry(entry.id)}\n                                            className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8 mt-1\" // Align with checkboxes\n                                        >\n                                            <Trash className=\"h-4 w-4\" />\n                                            <span className=\"sr-only\">Supprimer</span>\n                                        </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                            {stockEntries.length === 0 && (\n                                <TableRow>\n                                    <TableCell colSpan={5} className=\"text-center text-muted-foreground p-4\"> {/* Updated colSpan */}\n                                        Aucune entrée de stock ajoutée.\n                                    </TableCell>\n                                </TableRow>\n                            )}\n                        </TableBody>\n                        </Table>\n                    </div>\n                </div>\n\n\n                {/* Action Buttons */}\n                <div className=\"mt-8 flex justify-end space-x-3\"> {/* Added margin-top */}\n                    <Button type=\"button\" variant=\"outline\">Enregistrer Brouillon</Button> {/* Changed to type=\"button\" */}\n                    <Button type=\"submit\" disabled={hasVibratorErrors || hasLiaisonErrors || hasStockErrors}> {/* Disable submit if errors */}\n                        Soumettre Rapport\n                    </Button> {/* Disable submit if errors */}\n                </div>\n            </CardContent>\n        </form>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA,mRAA6C,mBAAmB;AAChE,qOAAiF,0BAA0B;AAC3G;AACA,0VAAyD,kCAAkC;AAA3F;AAAA;AACA;AACA;AACA,yOAMiC,2BAA2B;AAC5D;AAQA,6OAAqD,kBAAkB;AACvE,uOAAiE,qCAAqC;AACtG,8MAAkC,oCAAoC;;;AAzBtE;;;;;;;;;;;;AA2BA,mFAAmF;AACnF,SAAS,uBAAuB,QAAgB;IAC9C,IAAI,CAAC,UAAU,OAAO;IACtB,MAAM,UAAU,SAAS,OAAO,CAAC,iBAAiB,IAAI,IAAI;IAC1D,IAAI,QAAQ;IACZ,IAAI,UAAU;IACd,IAAI,QAAQ,QAAQ,KAAK,CAAC;IAC1B,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,EAAE,GAAG,SAAS,KAAK,CAAC,EAAE,EAAE,MAAM;QAC5C,UAAU,SAAS,KAAK,CAAC,EAAE,EAAE;QAC7B,OAAO,AAAC,QAAQ,KAAM;IACxB;IACA,QAAQ,QAAQ,KAAK,CAAC;IACtB,IAAI,OAAO;QACT,QAAQ,SAAS,KAAK,CAAC,EAAE,EAAE;QAC3B,OAAO,QAAQ;IACjB;IACA,QAAQ,QAAQ,KAAK,CAAC;IACtB,IAAI,OAAO;QACT,UAAU,SAAS,KAAK,CAAC,EAAE,EAAE;QAC7B,OAAO;IACT;IACA,QAAQ,IAAI,CAAC,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;IACtD,OAAO,GAAG,4BAA4B;AACxC;AAEA,kFAAkF;AAClF,SAAS,4BAA4B,YAAoB;IACvD,IAAI,MAAM,iBAAiB,gBAAgB,GAAG,OAAO,SAAS,2BAA2B;IACzF,MAAM,QAAQ,KAAK,KAAK,CAAC,eAAe;IACxC,MAAM,UAAU,KAAK,KAAK,CAAC,eAAe,KAAK,gBAAgB;IAC/D,OAAO,GAAG,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC;AAChC;AAEA,uDAAuD;AACvD,SAAS,6BAA6B,KAAa;IAC/C,IAAI,CAAC,OAAO,OAAO,GAAG,0EAA0E;IAChG,MAAM,UAAU,MAAM,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,KAAK;IAC5D,+EAA+E;IAC/E,IAAI,YAAY,MAAM,YAAY,OAAO,YAAY,KAAK,OAAO,MAAM,0CAA0C;IACjH,MAAM,SAAS,WAAW;IAC1B,OAAO,MAAM,UAAU,OAAO,QAAQ,gCAAgC;AAC1E;AAEA,4CAA4C;AAC5C,MAAM,uBAAuB,KAAK,IAAI,sBAAsB;AAE5D,+FAA+F;AAC/F,SAAS,6BAA6B,QAA+D;IACnG,MAAM,aAAa,SAAS,MAAM,CAAC,CAAC,KAAK;QACvC,wCAAwC;QACxC,IAAI,QAAQ,KAAK,EAAE,OAAO,KAAK,2BAA2B;QAE1D,MAAM,aAAa,6BAA6B,QAAQ,KAAK;QAC7D,MAAM,WAAW,6BAA6B,QAAQ,GAAG;QAEzD,mDAAmD;QACnD,IAAI,eAAe,QAAQ,aAAa,QAAQ,YAAY,YAAY;YACtE,OAAO,MAAM,CAAC,WAAW,UAAU;QACrC;QACA,iEAAiE;QACjE,OAAO;IACT,GAAG;IACH,OAAO,KAAK,KAAK,CAAC,aAAa,KAAK,2CAA2C;AACjF;AAcA,gCAAgC;AAChC,MAAM,cAAqC;IACzC,QAAQ;IACR,OAAO;IACP,QAAQ;AACV;AACA,MAAM,cAAuB;IAAC;IAAQ;IAAO;CAAO;AACpD,MAAM,QAAgB;IAAC;IAAU;IAAU;CAAS;AACpD,MAAM,cAA2B;IAAC;IAAU;IAAU;CAAO;AAC7D,MAAM,mBAA8B;AAsCpC,MAAM,sBAAsB,GAAG,iCAAiC;AAEzD,SAAS,eAAe,EAAE,YAAY,EAAE,2BAA2B,IAAI,EAAuB;;IAGnG,qGAAqG;IACrG,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;QACzC;YAAE,IAAI,OAAO,UAAU;YAAI,UAAU;YAAS,QAAQ;QAAiB;QACvE;YACE,IAAI,OAAO,UAAU;YACrB,UAAU;YACV,QAAQ;QACV;KACD;IACD,+DAA+D;IAC/D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa;QAClE;YAAE,IAAI,OAAO,UAAU;YAAI,OAAO;YAAO,OAAO;YAAU,KAAK;QAAU;KAC1E;IACD,sEAAsE;IACtE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;QACvE;YAAE,IAAI,OAAO,UAAU;YAAI,OAAO;YAAQ,OAAO;YAAS,KAAK;QAAS;KACzE;IACD,gDAAgD;IAChD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB;QAC3D;YAAE,IAAI,OAAO,UAAU;YAAI,OAAO;YAAI,MAAM;YAAI,MAAM;YAAI,UAAU;YAAI,WAAW;QAAG,EAAE,6CAA6C;KACxI;IACD,gDAAgD;IAChD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAGrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,uBAAuB,eAAe;IACzF,oCAAoC;IACpC,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,iDAAiD;IACjD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,uEAAuE;IACvE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,kGAAkG;IACjG,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B,CAAC,IAAI,iCAAiC;IACjI,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B,CAAC;IAGzF,sDAAsD;IACtD,MAAM,gBAAgB,aAAa,kBAAkB,CAAC,SAAS;QAC3D,MAAM;QACN,OAAO;QACP,KAAK;IACT;IAGF,oEAAoE;IACpE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM,qBAAqB,MAAM,MAAM;+DAAC,CAAC,KAAK,OAAS,MAAM,uBAAuB,KAAK,QAAQ;8DAAG;YACpG,iBAAiB;YAEjB,MAAM,0BAA0B,uBAAuB,oBAAoB,eAAe;YAC1F,iBAAiB,2BAA2B,IAAI,0BAA0B,IAAI,sBAAsB;QAEtG;mCAAG;QAAC;KAAM,GAAG,2DAA2D;IAGxE,4FAA4F;IAC5F,MAAM,uBAAuB,CACvB,WACA,UACA,MACA,iBACA,eACA,cACA,gBAAgC,2CAA2C;;QAE3E,MAAM,WAAW,6BAA6B;QAC9C,MAAM,SAAS,6BAA6B;QAC5C,MAAM,cAAc,SAAS,aAAa,2BAA2B;QAErE,mBAAmB;QACnB,IAAI,aAAa,QAAQ,oBAAoB,MAAM,oBAAoB,OAAO,oBAAoB,KAAK,OAAO;QAC9G,IAAI,WAAW,QAAQ,kBAAkB,MAAM,kBAAkB,OAAO,kBAAkB,KAAK,OAAO;QACtG,IAAI,aAAa,QAAQ,WAAW,QAAQ,SAAS,UAAU,OAAO;QAEtE,iDAAiD;QACjD,IAAI,aAAa,QAAQ,WAAW,MAAM;YACtC,MAAM,gBAAgB,SAAS;YAC9B,IAAI,gBAAgB,qBAAqB;gBACrC,OAAO,CAAC,WAAW,EAAE,oBAAoB,aAAa,EAAE,cAAc,OAAO,CAAC,GAAG,GAAG,CAAC;YACzF;QACL;QAEA,yCAAyC;QACzC,MAAM,eAAe,SAAS,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QACtD,IAAI,iBAAiB,CAAC,KAAK,CAAC,cAAc,OAAO,WAAW,kDAAkD;QAE9G,sFAAsF;QACtF,MAAM,oBAAoB,YAAY,OAAO,CAAC,eAAe,oCAAoC;QAEjG,iFAAiF;QACjF,IAAI,kBAAwD;QAC5D,IAAI,yBAAoD,WAAW,uCAAuC;QAE1G,IAAI,sBAAsB,GAAG;YACzB,mEAAmE;YACnE,IAAI,SAAS,YAAY;gBACrB,yBAAyB,iBAAiB,WAAW;gBACpD,oEAAoE;gBACpE,uDAAuD;gBACvD,IAAI,2BAA2B,WAAW;oBACvC,iFAAiF;oBACjF,yBAAyB,MAAM,gBAAgB;gBAClD;YACL,OAAO;gBACF,gFAAgF;gBAChF,kBAAkB,SAAS,IAAI,CAAC,CAAC,GAAG,MAAQ,QAAQ,gBAAgB,EAAE,KAAK,KAAK;gBAChF,yBAAyB,iBAAiB;YAC/C;QAEJ,OAAO,IAAI,sBAAsB,CAAC,GAAG;YACjC,oDAAoD;YACpD,MAAM,qBAAqB,AAAC,sBAAsB,IAAK,IAAI,oBAAoB,GAAG,2EAA2E;YAC7J,MAAM,gBAAgB,WAAW,CAAC,mBAAmB;YACrD,kFAAkF;YAClF,kBAAkB,SAAS,IAAI,CAAC,CAAC,GAAG,MAAQ,QAAQ,gBAAgB,EAAE,KAAK,KAAK;YAChF,yBAAyB,iBAAiB;QAC9C;QACC,2HAA2H;QAE5H,+DAA+D;QAC/D,IAAI,2BAA2B,aAAa,2BAA2B,QAAQ,oBAAoB,IAAI;YACnG,MAAM,sBAAsB,WAAW;YACvC,IAAI,MAAM,sBAAsB;YAC3B,2EAA2E;YAC3E,8DAA8D;YAC9D,uEAAuE;YACvE,0FAA0F;YAC/F,OAAO,IAAI,aAAa,QAAQ,aAAa,qBAAqB;gBAC7D,MAAM,iBAAiB,AAAC,sBAAsB,IAAK,IAAI,oBAAoB;gBAC3E,MAAM,gBAAgB,sBAAsB,IAAI,kBAAkB,WAAW,CAAC,eAAe;gBAC7F,OAAO,CAAC,OAAO,EAAE,SAAS,2BAA2B,EAAE,oBAAoB,KAAK,EAAE,cAAc,OAAO,CAAC;YAC5G;QACL,OAAO,IAAI,2BAA2B,MAAM;QACvC,oFAAoF;QACpF,8DAA8D;QAClE;QACA,kHAAkH;QAGnH,OAAO,WAAW,WAAW;IAClC;IAGC,kFAAkF;IAClF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACN,4BAA4B;YAC5B,IAAI,2BAA2B;YAC/B,MAAM,oBAA4C,CAAC;YACnD,MAAM,wBAAwB,iBAAiB,MAAM;kEAAC,CAAA;oBAClD,MAAM,QAAQ,qBAAqB,EAAE,EAAE,EAAE,kBAAkB,YAAY,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK,EAAE;oBAC/F,IAAI,CAAC,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,KAAK,EAAE;wBAChC,iBAAiB,CAAC,EAAE,EAAE,CAAC,GAAG;wBAC1B,2BAA2B;wBAC3B,OAAO;oBACX;oBACD,IAAI,OAAO;wBACP,iBAAiB,CAAC,EAAE,EAAE,CAAC,GAAG;wBAC1B,2BAA2B;wBAC3B,OAAO;oBACX;oBACA,OAAO,MAAM,oCAAoC;gBACrD;;YAEA,yBAAyB,oBAAoB,qBAAqB;YAClE,qBAAqB,CAAC,2BAA2B,yBAAyB;YAE1E,MAAM,gBAAgB,6BAA6B;YACnD,wBAAwB;YAExB,0FAA0F;YAC1F,uEAAuE;YACvE,IAAI,gBAAgB,sBAAsB;gBACtC,QAAQ,IAAI,CAAC;gBACb,iEAAiE;gBAChE,qBAAqB;YAC1B;YAGA,2BAA2B;YAC3B,IAAI,0BAA0B;YAC9B,MAAM,mBAA2C,CAAC;YAClD,MAAM,uBAAuB,gBAAgB,MAAM;iEAAC,CAAA;oBAChD,yDAAyD;oBACxD,MAAM,QAAQ,qBAAqB,EAAE,EAAE,EAAE,iBAAiB,WAAW,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE,KAAK;oBAC3F,IAAI,CAAC,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,KAAK,EAAE;wBACjC,gBAAgB,CAAC,EAAE,EAAE,CAAC,GAAG;wBACzB,0BAA0B;wBAC1B,OAAO;oBACX;oBACA,IAAI,OAAO;wBACR,gBAAgB,CAAC,EAAE,EAAE,CAAC,GAAG;wBACzB,0BAA0B;wBAC1B,OAAO;oBACX;oBACA,OAAO;gBACX;;YAEA,wBAAwB;YACxB,oBAAoB,CAAC;YAErB,MAAM,eAAe,6BAA6B;YAClD,uBAAuB;YAEvB,IAAI,eAAe,sBAAsB;gBACrC,QAAQ,IAAI,CAAC;gBACZ,oBAAoB;YACzB;QAEC,uDAAuD;QAC5D;mCAAG;QAAC;QAAkB;QAAiB;KAAyB,GAAG,eAAe;IAGnF,iDAAiD;IACjD,gEAAgE;IAC/D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM,wBAAwB,aAAa,IAAI;kEAAC,CAAA,QAC5C,CAAC,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,QAAQ,IAAI,MAAM,SAAS,KAAK,CAAC,MAAM,KAAK,CAAC,6BAA6B;;YAEjH,kBAAkB;QACpB;mCAAG;QAAC;KAAa;IAGnB,MAAM,UAAU;QACd,SAAS;eAAI;YAAO;gBAAE,IAAI,OAAO,UAAU;gBAAI,UAAU;gBAAI,QAAQ;YAAG;SAAE;IAC5E;IAEA,8CAA8C;IAC9C,MAAM,qBAAqB;QACzB,oBAAoB;eAAI;YAAkB;gBAAE,IAAI,OAAO,UAAU;gBAAI,OAAO;gBAAI,OAAO;gBAAI,KAAK;YAAG;SAAE;IACvG;IAEA,6DAA6D;IAC7D,MAAM,oBAAoB;QACxB,mBAAmB;eAAI;YAAiB;gBAAE,IAAI,OAAO,UAAU;gBAAI,OAAO;gBAAI,OAAO;gBAAI,KAAK;YAAG;SAAE;IACrG;IAEC,+CAA+C;IAC/C,MAAM,gBAAgB;QACjB,gBAAgB;eAAI;YAAc;gBAAE,IAAI,OAAO,UAAU;gBAAI,OAAO;gBAAI,MAAM;gBAAI,MAAM;gBAAI,UAAU;gBAAI,WAAW;YAAG;SAAE;IAC/H;IAGD,MAAM,aAAa,CAAC;QAClB,SAAS,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;IAC5C;IAEA,MAAM,wBAAwB,CAAC;QAC7B,oBAAoB,iBAAiB,MAAM,CAAC,CAAA,UAAW,QAAQ,EAAE,KAAK;QACrE,0CAA0C;QAC1C,yBAAyB,CAAA;YACtB,MAAM,YAAY;gBAAE,GAAG,IAAI;YAAC;YAC5B,OAAO,SAAS,CAAC,GAAG;YACpB,OAAO;QACT;IACJ;IAEC,qCAAqC;IACtC,MAAM,uBAAuB,CAAC;QAC5B,mBAAmB,gBAAgB,MAAM,CAAC,CAAA,UAAW,QAAQ,EAAE,KAAK;QACnE,0CAA0C;QACzC,wBAAwB,CAAA;YACtB,MAAM,YAAY;gBAAE,GAAG,IAAI;YAAC;YAC5B,OAAO,SAAS,CAAC,GAAG;YACpB,OAAO;QACT;IACJ;IAEA,iCAAiC;IACjC,MAAM,mBAAmB,CAAC;QACxB,gBAAgB,aAAa,MAAM,CAAC,CAAA,QAAS,MAAM,EAAE,KAAK;IAC5D;IAED,yCAAyC;IACzC,MAAM,aAAa,CAAC,IAAY,OAA+B;QAC5D,SAAS,MAAM,GAAG,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,KAAK;gBAAE,GAAG,IAAI;gBAAE,CAAC,MAAM,EAAE;YAAM,IAAI;IAC7E;IAGA,mEAAmE;IACnE,MAAM,wBAAwB,CAAC,IAAY,OAA4C;QACpF,oBAAoB,CAAA,eAAgB,aAAa,GAAG,CAAC,CAAA;gBACjD,IAAI,QAAQ,EAAE,KAAK,IAAI;oBACnB,MAAM,iBAAiB;wBAAE,GAAG,OAAO;wBAAE,CAAC,MAAM,EAAE;oBAAM;oBAEpD,uEAAuE;oBACvE,yBAAyB,CAAA;wBACrB,MAAM,YAAY;4BAAE,GAAG,UAAU;wBAAC;wBAClC,OAAO,SAAS,CAAC,GAAG,EAAE,gCAAgC;wBACtD,OAAO;oBACX;oBAEA,4EAA4E;oBAC5E,OAAO;gBACX;gBACA,OAAO;YACX;IACH;IAEA,2GAA2G;IAC3G,MAAM,uBAAuB,CAAC,IAAY,OAAmD;QACzF,mBAAmB,CAAA,eAAgB,aAAa,GAAG,CAAC,CAAA;gBAChD,IAAI,QAAQ,EAAE,KAAK,IAAI;oBACnB,MAAM,iBAAiB;wBAAE,GAAG,OAAO;wBAAE,CAAC,MAAM,EAAE;oBAAM;oBAEpD,oDAAoD;oBACpD,wBAAwB,CAAA;wBACpB,MAAM,YAAY;4BAAE,GAAG,UAAU;wBAAC;wBAClC,OAAO,SAAS,CAAC,GAAG,EAAE,gCAAgC;wBACtD,OAAO;oBACX;oBAEA,qCAAqC;oBACrC,OAAO;gBACX;gBACA,OAAO;YACZ;IACH;IAGA,8DAA8D;IAC9D,MAAM,mBAAmB,CAAC,IAAY,OAAqC,OAAyB;QACjG,gBAAgB,aAAa,GAAG,CAAC,CAAA;YAC/B,IAAI,MAAM,EAAE,KAAK,IAAI;gBAClB,MAAM,eAAe;oBAAE,GAAG,KAAK;oBAAE,CAAC,MAAM,EAAE;gBAAM;gBAEhD,2CAA2C;gBAC3C,IAAI,UAAU,SAAS;oBACnB,aAAa,IAAI,GAAG,IAAI,gDAAgD;oBACxE,aAAa,IAAI,GAAG;oBACpB,aAAa,QAAQ,GAAG;oBACxB,aAAa,SAAS,GAAG,IAAI,sCAAsC;gBACvE,OAAO,IAAI,UAAU,QAAQ;oBACzB,aAAa,IAAI,GAAG,IAAI,wCAAwC;oBAChE,aAAa,QAAQ,GAAG;oBACvB,aAAa,SAAS,GAAG,IAAI,mCAAmC;gBACrE,OAAO,IAAI,UAAU,QAAQ;oBAC1B,aAAa,QAAQ,GAAG,IAAI,mCAAmC;oBAC9D,aAAa,SAAS,GAAG,IAAI,mCAAmC;gBACpE,OAAO,IAAI,UAAU,aAAa;oBAC7B,oEAAoE;oBACpE,aAAa,IAAI,GAAG;oBACpB,aAAa,IAAI,GAAG;oBACpB,aAAa,QAAQ,GAAG;gBAC7B;gBAEA,OAAO;YACV;YACA,OAAO;QACT;IACF;IAEA,oEAAoE;IACpE,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAEhB,0EAA0E;QACzE,IAAI,qBAAqB,oBAAoB,gBAAgB;YAC1D,QAAQ,KAAK,CAAC;YACd,0DAA0D;YAC1D,wIAAwI;YAExI,gDAAgD;YAChD,MAAM,uBAAuB,OAAO,IAAI,CAAC,uBAAuB,IAAI,CAAC,CAAA,KAAM,qBAAqB,CAAC,GAAG;YACpG,IAAI,sBAAsB;gBACtB,SAAS,cAAc,CAAC,CAAC,eAAe,EAAE,sBAAsB,GAAG;gBACnE;YACJ;YACA,MAAM,sBAAsB,OAAO,IAAI,CAAC,sBAAsB,IAAI,CAAC,CAAA,KAAM,oBAAoB,CAAC,GAAG;YAChG,IAAI,qBAAqB;gBACrB,SAAS,cAAc,CAAC,CAAC,cAAc,EAAE,qBAAqB,GAAG;gBAClE;YACH;YACA,+CAA+C;YAC/C,MAAM,uBAAuB,aAAa,IAAI,CAAC,CAAA,QAAS,CAAC,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,QAAQ,IAAI,MAAM,SAAS,KAAK,CAAC,MAAM,KAAK;YACvI,IAAI,sBAAsB;gBACtB,6DAA6D;gBAC7D,SAAS,cAAc,CAAC,CAAC,oBAAoB,EAAE,qBAAqB,EAAE,EAAE,GAAG;gBAC3E;YACJ;YAGD,QAAQ,kBAAkB;QAC9B;QAEA,sDAAsD;QACtD,QAAQ,GAAG,CAAC,+BAA+B;YACvC;YACA;YACA;YACA;YACA,4EAA4E;YAC5E;YACA;YACA;YACA;QACJ;IACA,4EAA4E;IAC5E,6CAA6C;IAC/C;IAGA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAoB;;;;;;kCAIzC,6LAAC;wBAAK,WAAU;kCAAiC;;;;;;;;;;;;0BAIlD,6LAAC;gBAAK,UAAU;0BACX,cAAA,6LAAC,mIAAA,CAAA,cAAW;oBAAC,WAAU;;wBAAgB;sCAGnC,6LAAC;4BAAI,WAAU;;gCAA0C;8CACrD,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAG,WAAU;sDAAwC;;;;;;sDACtD,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAO,MAAK;4CAAS,SAAS;4CAAS,WAAU;;8DAC7D,6LAAC,qMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;8CAIzC,6LAAC;oCAAI,WAAU;8CACX,cAAA,6LAAC,oIAAA,CAAA,QAAK;;0DACF,6LAAC,oIAAA,CAAA,cAAW;gDAAC,WAAU;0DACnB,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;sEACT,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAAoE;;;;;;sEAGzF,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAA0D;;;;;;sEAG/E,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;;;;;;;;;;;;0DAGzB,6LAAC,oIAAA,CAAA,YAAS;;oDACL,MAAM,GAAG,CAAC,CAAC,qBACZ,6LAAC,oIAAA,CAAA,WAAQ;4DAAe,WAAU;;8EAC9B,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EACrB,cAAA,6LAAC,oIAAA,CAAA,QAAK;wEACF,MAAK;wEACL,WAAU,qBAAqB,yBAAyB;;wEACxD,aAAY;wEACZ,OAAO,KAAK,QAAQ;wEACpB,UAAU,CAAC,IACX,WAAW,KAAK,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;8EAIlD,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EACrB,cAAA,6LAAC,oIAAA,CAAA,QAAK;wEACF,MAAK;wEACL,WAAU;wEACV,OAAO,KAAK,MAAM;wEAClB,UAAU,CAAC,IACX,WAAW,KAAK,EAAE,EAAE,UAAU,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;8EAIhD,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wEACH,SAAQ;wEACR,MAAK;wEACL,MAAK,SAAS,0BAA0B;;wEACxC,SAAS,IAAM,WAAW,KAAK,EAAE;wEACjC,WAAU;;0FAEV,6LAAC,uMAAA,CAAA,QAAK;gFAAC,WAAU;;;;;;0FACjB,6LAAC;gFAAK,WAAU;0FAAU;;;;;;;;;;;;;;;;;;2DA/BnB,KAAK,EAAE;;;;;oDAoCrB,MAAM,MAAM,KAAK,mBACd,6LAAC,oIAAA,CAAA,WAAQ;kEACL,cAAA,6LAAC,oIAAA,CAAA,YAAS;4DAAC,SAAS;4DAAG,WAAU;sEAAwC;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAQ7F,6LAAC;oCAAI,WAAU;;wCAAgD;sDAC7C,6LAAC;sDAAQ,4BAA4B;;;;;;;;;;;;;;;;;;sCAK3D,6LAAC;4BAAI,WAAU;;8CAEX,6LAAC;oCAAG,WAAU;8CAA6C;;;;;;8CAC3D,6LAAC;oCAAI,WAAU;;sDACX,6LAAC,oIAAA,CAAA,QAAK;4CAAC,SAAQ;4CAAsB,WAAU;sDAAgC;;;;;;sDAG/E,6LAAC,oIAAA,CAAA,QAAK;4CAAC,IAAG;4CAAsB,MAAK;4CAAO,OAAO,4BAA4B;4CAAgB,WAAU;4CAA2B,QAAQ;4CAAC,UAAU,CAAC;;;;;;;;;;;;;;;;;;sCAMhK,6LAAC;4BAAI,WAAU;;gCAA0C;8CACrD,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAG,WAAU;sDAAwC;;;;;;sDACtD,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAO,MAAK;4CAAS,WAAU;4CAAkC,SAAS;;8DACtF,6LAAC,qMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;gCAIxC,mCACG,6LAAC,oIAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAc,WAAU;;sDACnC,6LAAC,uNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;sDACvB,6LAAC,oIAAA,CAAA,mBAAgB;;gDAAC;gDACoG;gDAAoB;;;;;;;;;;;;;8CAIlJ,6LAAC;oCAAI,WAAU;8CACX,cAAA,6LAAC,oIAAA,CAAA,QAAK;;0DACF,6LAAC,oIAAA,CAAA,cAAW;gDAAC,WAAU;0DACnB,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;sEACT,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;;gEAAoE;gEAAoB;;;;;;;sEAG7G,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAA0D;;;;;;sEAG/E,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAA0D;;;;;;sEAG/E,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;;;;;;;;;;;;0DAGzB,6LAAC,oIAAA,CAAA,YAAS;;oDACL,iBAAiB,GAAG,CAAC,CAAC,wBACvB,6LAAC,oIAAA,CAAA,WAAQ;4DAAkB,WAAU;;8EAChC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;wEAAM;sFACxB,6LAAC,qIAAA,CAAA,SAAM;4EACH,OAAO,QAAQ,KAAK;4EACpB,eAAe,CAAC,QAAiB,sBAAsB,QAAQ,EAAE,EAAE,SAAS;;8FAE5E,6LAAC,qIAAA,CAAA,gBAAa;oFAAC,IAAI,CAAC,uBAAuB,EAAE,QAAQ,EAAE,EAAE;oFAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe,qBAAqB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,YAAY;8FAC5I,cAAA,6LAAC,qIAAA,CAAA,cAAW;wFAAC,aAAY;;;;;;;;;;;8FAE7B,6LAAC,qIAAA,CAAA,gBAAa;8FACT,YAAY,GAAG,CAAC,CAAA,kBACb,6LAAC,qIAAA,CAAA,aAAU;4FAAS,OAAO;;gGACtB;gGAAE;gGAAS,WAAW,CAAC,EAAE;gGAAC;;2FADd;;;;;;;;;;;;;;;;wEAM3B,qBAAqB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,0BAAY,6LAAC;4EAAE,WAAU;sFAAiC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;;;;;;;;;;;;8EAE7I,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;sFACrB,6LAAC,oIAAA,CAAA,QAAK;4EACF,IAAI,CAAC,eAAe,EAAE,QAAQ,EAAE,EAAE;4EAClC,MAAK,OAAO,gDAAgD;;4EAC5D,WAAU,UAAU,4BAA4B;;4EAChD,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB,qBAAqB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,YAAY;4EAClI,OAAO,QAAQ,KAAK;4EACpB,aAAY;4EACZ,UAAU,CAAC,IACX,sBAAsB,QAAQ,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK;4EAEzD,gBAAc,CAAC,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;4EACjD,oBAAkB,qBAAqB,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,EAAE,EAAE,GAAG;;;;;;wEAEzF,qBAAqB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,0BAAY,6LAAC;4EAAE,IAAI,CAAC,eAAe,EAAE,QAAQ,EAAE,EAAE;4EAAE,WAAU;sFAAiC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;;;;;;;;;;;;8EAEnN,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;sFACrB,6LAAC,oIAAA,CAAA,QAAK;4EACF,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,EAAE;4EAChC,MAAK,OAAO,gDAAgD;;4EAC5D,WAAU;4EACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB,qBAAqB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,YAAY;4EAClI,OAAO,QAAQ,GAAG;4EAClB,aAAY;4EACZ,UAAU,CAAC,IACX,sBAAsB,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4EAEtD,gBAAc,CAAC,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;4EACjD,oBAAkB,qBAAqB,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,EAAE,EAAE,GAAG;;;;;;wEAG3F,qBAAqB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,yBAAW,6LAAC;4EAAE,IAAI,CAAC,eAAe,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC;4EAAE,WAAU;sFAAiC,qBAAqB,CAAC,QAAQ,EAAE,CAAC;;;;;mFAAQ;;;;;;;8EAE7N,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wEACH,SAAQ;wEACR,MAAK;wEACL,MAAK,SAAS,0BAA0B;;wEACxC,SAAS,IAAM,sBAAsB,QAAQ,EAAE;wEAC/C,WAAU;;0FAEV,6LAAC,uMAAA,CAAA,QAAK;gFAAC,WAAU;;;;;;0FACjB,6LAAC;gFAAK,WAAU;0FAAU;;;;;;;;;;;;;;;;;;2DA7DnB,QAAQ,EAAE;;;;;oDAkExB,iBAAiB,MAAM,KAAK,mBACzB,6LAAC,oIAAA,CAAA,WAAQ;kEACL,cAAA,6LAAC,oIAAA,CAAA,YAAS;4DAAC,SAAS;4DAAG,WAAU;;gEAAwC;gEAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CASrH,6LAAC;oCAAI,WAAU;;wCAAgD;sDACpC,6LAAC;sDAAQ,4BAA4B;;;;;;;;;;;;;;;;;;sCAKpE,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAG,WAAU;sDAAwC;;;;;;sDACtD,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAO,MAAK;4CAAS,WAAU;4CAAkC,SAAS;;8DACtF,6LAAC,qMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;gCAIvC,kCACE,6LAAC,oIAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAc,WAAU;;sDACnC,6LAAC,uNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;sDACtB,6LAAC,oIAAA,CAAA,mBAAgB;;gDAAC;gDACkG;gDAAoB;;;;;;;;;;;;;8CAIjJ,6LAAC;oCAAI,WAAU;8CACX,cAAA,6LAAC,oIAAA,CAAA,QAAK;;0DACF,6LAAC,oIAAA,CAAA,cAAW;gDAAC,WAAU;0DACnB,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;sEACR,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;;gEAAoE;gEAAoB;;;;;;;sEAG9G,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAA0D;;;;;;sEAG/E,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAA0D;;;;;;sEAG/E,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;;;;;;;;;;;;0DAGzB,6LAAC,oIAAA,CAAA,YAAS;;oDACL,gBAAgB,GAAG,CAAC,CAAC,wBACtB,6LAAC,oIAAA,CAAA,WAAQ;4DAAkB,WAAU;;8EAChC,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;wEAAM;sFACxB,6LAAC,qIAAA,CAAA,SAAM;4EACH,OAAO,QAAQ,KAAK;4EACpB,eAAe,CAAC,QAAiB,qBAAqB,QAAQ,EAAE,EAAE,SAAS;;8FAE3E,6LAAC,qIAAA,CAAA,gBAAa;oFAAC,IAAI,CAAC,sBAAsB,EAAE,QAAQ,EAAE,EAAE;oFAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe,oBAAoB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,YAAY;8FAC1I,cAAA,6LAAC,qIAAA,CAAA,cAAW;wFAAC,aAAY;;;;;;;;;;;8FAE7B,6LAAC,qIAAA,CAAA,gBAAa;8FACT,YAAY,GAAG,CAAC,CAAA,kBACb,6LAAC,qIAAA,CAAA,aAAU;4FAAS,OAAO;;gGACtB;gGAAE;gGAAS,WAAW,CAAC,EAAE;gGAAC;;2FADd;;;;;;;;;;;;;;;;wEAM3B,oBAAoB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,0BAAY,6LAAC;4EAAE,WAAU;sFAAiC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;;;;;;;;;;;;8EAE3I,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;sFACrB,6LAAC,oIAAA,CAAA,QAAK;4EACF,IAAI,CAAC,cAAc,EAAE,QAAQ,EAAE,EAAE;4EACjC,MAAK,OAAO,gDAAgD;;4EAC5D,WAAU;4EACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB,oBAAoB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,YAAY;4EAChI,OAAO,QAAQ,KAAK;4EACpB,aAAY;4EACZ,UAAU,CAAC,IACX,qBAAqB,QAAQ,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK;4EAExD,gBAAc,CAAC,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;4EAChD,oBAAkB,oBAAoB,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,EAAE,EAAE,GAAG;;;;;;wEAExF,oBAAoB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,0BAAY,6LAAC;4EAAE,IAAI,CAAC,cAAc,EAAE,QAAQ,EAAE,EAAE;4EAAE,WAAU;sFAAiC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;;;;;;;;;;;;8EAE9M,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;sFACrB,6LAAC,oIAAA,CAAA,QAAK;4EACF,IAAI,CAAC,YAAY,EAAE,QAAQ,EAAE,EAAE;4EAC/B,MAAK,OAAO,gDAAgD;;4EAC5D,WAAU;4EACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB,oBAAoB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,YAAY;4EAChI,OAAO,QAAQ,GAAG;4EAClB,aAAY;4EACZ,UAAU,CAAC,IACX,qBAAqB,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK;4EAEtD,gBAAc,CAAC,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;4EAChD,oBAAkB,oBAAoB,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,QAAQ,EAAE,EAAE,GAAG;;;;;;wEAGvF,oBAAoB,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,yBAAW,6LAAC;4EAAE,IAAI,CAAC,cAAc,EAAE,QAAQ,EAAE,CAAC,IAAI,CAAC;4EAAE,WAAU;sFAAiC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;;;;;mFAAQ;;;;;;;8EAE1N,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wEACH,SAAQ;wEACR,MAAK;wEACL,MAAK,SAAS,0BAA0B;;wEACxC,SAAS,IAAM,qBAAqB,QAAQ,EAAE;wEAC9C,WAAU;;0FAEV,6LAAC,uMAAA,CAAA,QAAK;gFAAC,WAAU;;;;;;0FACjB,6LAAC;gFAAK,WAAU;0FAAU;;;;;;;;;;;;;;;;;;2DA7DnB,QAAQ,EAAE;;;;;oDAkExB,gBAAgB,MAAM,KAAK,mBACxB,6LAAC,oIAAA,CAAA,WAAQ;kEACL,cAAA,6LAAC,oIAAA,CAAA,YAAS;4DAAC,SAAS;4DAAG,WAAU;;gEAAwC;gEAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CASrH,6LAAC;oCAAI,WAAU;;wCAAgD;sDACrC,6LAAC;sDAAQ,4BAA4B;;;;;;;;;;;;;;;;;;sCAMnE,6LAAC;4BAAI,WAAU;;8CACX,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAG,WAAU;sDAAwC;;;;;;sDACtD,6LAAC,qIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAO,MAAK;4CAAS,WAAU;4CAAkC,SAAS;;8DAC1F,6LAAC,qMAAA,CAAA,OAAI;oDAAC,WAAU;;;;;;gDAAiB;;;;;;;;;;;;;gCAIpC,gCACG,6LAAC,oIAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAc,WAAU;;sDACnC,6LAAC,uNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;sDACvB,6LAAC,oIAAA,CAAA,mBAAgB;sDAAC;;;;;;;;;;;;8CAM1B,6LAAC;oCAAI,WAAU;8CACX,cAAA,6LAAC,oIAAA,CAAA,QAAK;;0DACN,6LAAC,oIAAA,CAAA,cAAW;gDAAC,WAAU;0DACnB,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;sEACT,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAAoE;;;;;;sEACzF,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAAoE;;;;;;sEACzF,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAAoE;;;;;;sEACzF,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;sEAA0D;;;;;;sEAC/E,6LAAC,oIAAA,CAAA,YAAS;4DAAC,WAAU;;;;;;;;;;;;;;;;;0DAGzB,6LAAC,oIAAA,CAAA,YAAS;;oDACL,aAAa,GAAG,CAAC,CAAC;wDACf,6CAA6C;wDAC7C,MAAM,aAAa,CAAC,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,QAAQ,IAAI,MAAM,SAAS,KAAK,CAAC,MAAM,KAAK,GAAG,oCAAoC;wDACzI,qBACI,6LAAC,oIAAA,CAAA,WAAQ;4DAAgB,WAAU;;8EAE/B,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;sFACjB,6LAAC,qIAAA,CAAA,SAAM;4EACH,OAAO,MAAM,KAAK;4EAClB,eAAe,CAAC,QAAiB,iBAAiB,MAAM,EAAE,EAAE,SAAS;;8FAErE,6LAAC,qIAAA,CAAA,gBAAa;oFAAC,IAAI,CAAC,oBAAoB,EAAE,MAAM,EAAE,EAAE;oFAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB,cAAc;8FACvG,cAAA,6LAAC,qIAAA,CAAA,cAAW;wFAAC,aAAY;;;;;;;;;;;8FAE7B,6LAAC,qIAAA,CAAA,gBAAa;8FACT,YAAY,GAAG,CAAC,CAAA,kBACb,6LAAC,qIAAA,CAAA,aAAU;4FAAS,OAAO;;gGACtB;gGAAE;;2FADU;;;;;;;;;;;;;;;;wEAM5B,4BAAc,6LAAC;4EAAE,WAAU;sFAAiC;;;;;;;;;;;;8EAGjE,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EACrB,cAAA,6LAAC;wEAAI,WAAU;kFACV,MAAM,GAAG,CAAC,CAAA,qBACX,6LAAC;gFAAe,WAAU;;kGACtB,6LAAC,uIAAA,CAAA,WAAQ;wFACT,IAAI,GAAG,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM;wFACzB,SAAS,MAAM,IAAI,KAAK;wFACxB,UAAU,CAAC,MAAM,KAAK;wFACtB,iBAAiB,CAAC,UAAY,iBAAiB,MAAM,EAAE,EAAE,QAAQ,UAAU,OAAO,IAAI;;;;;;kGAEtF,6LAAC,oIAAA,CAAA,QAAK;wFAAC,SAAS,GAAG,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM;wFAAE,WAAW,CAAC,oBAAoB,EAAE,CAAC,MAAM,KAAK,GAAG,0BAA0B,IAAI;kGAAG;;;;;;;+EAPnH;;;;;;;;;;;;;;;8EAad,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EACjB,cAAA,6LAAC;wEAAI,WAAU;;4EAEV,YAAY,GAAG,CAAC,CAAA,qBACjB,6LAAC;oFAAe,WAAU;;sGACtB,6LAAC,uIAAA,CAAA,WAAQ;4FACT,IAAI,GAAG,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM;4FACzB,SAAS,MAAM,IAAI,KAAK;4FACxB,UAAU,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,IAAI;4FACrC,iBAAiB,CAAC,UAAY,iBAAiB,MAAM,EAAE,EAAE,QAAQ,UAAU,OAAO,IAAI;;;;;;sGAEtF,6LAAC,oIAAA,CAAA,QAAK;4FAAC,SAAS,GAAG,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM;4FAAE,WAAW,CAAC,oBAAoB,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,IAAI,GAAG,0BAA0B,IAAI;sGAAG;;;;;;;mFAPlI;;;;;0FAWT,6LAAC;gFAA2B,WAAU;;kGACnC,6LAAC,uIAAA,CAAA,WAAQ;wFACL,IAAI,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC;wFAC3B,4DAA4D;wFAC5D,SAAS,CAAC,CAAC,MAAM,SAAS;wFAC1B,UAAU,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,MAAM,IAAI;wFACtC,iBAAiB,CAAC,UAAY,iBAAiB,MAAM,EAAE,EAAE,aAAa,UAAW,MAAM,SAAS,IAAI,UAAW,IAAI;;;;;;kGAEvH,6LAAC,oIAAA,CAAA,QAAK;wFAAC,SAAS,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC;wFAAE,WAAW,CAAC,oBAAoB,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,MAAM,IAAI,GAAG,0BAA0B,IAAI;kGAAG;;;;;;;+EARpI;;;;;;;;;;;;;;;;8EAanB,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;;wEAEhB,MAAM,IAAI,kBACP,6LAAC,oIAAA,CAAA,QAAK;4EACF,MAAK;4EACL,MAAK,OAAO,iBAAiB;;4EAC7B,KAAI;4EACJ,WAAU,0BAA0B,wBAAwB;;4EAC5D,aAAY;4EACZ,OAAO,MAAM,QAAQ;4EACrB,UAAU,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,IAAI;4EACrC,UAAU,CAAC,IAAM,iBAAiB,MAAM,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;wEAI7E,CAAC,CAAC,MAAM,SAAS,kBACb,6LAAC,oIAAA,CAAA,QAAK;4EACH,MAAK;4EACL,WAAU,0BAA0B,wBAAwB;;4EAC5D,OAAO,MAAM,SAAS;4EACtB,UAAU,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC,MAAM,IAAI;4EACtC,UAAU,CAAC,IAAM,iBAAiB,MAAM,EAAE,EAAE,aAAa,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;8EAKnF,6LAAC,oIAAA,CAAA,YAAS;oEAAC,WAAU;8EACrB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wEACH,SAAQ;wEACR,MAAK;wEACL,MAAK,SAAS,0BAA0B;;wEACxC,SAAS,IAAM,iBAAiB,MAAM,EAAE;wEACxC,WAAU,+EAA+E,wBAAwB;;;0FAEjH,6LAAC,uMAAA,CAAA,QAAK;gFAAC,WAAU;;;;;;0FACjB,6LAAC;gFAAK,WAAU;0FAAU;;;;;;;;;;;;;;;;;;2DApGnB,MAAM,EAAE;;;;;oDAyG/B;oDACC,aAAa,MAAM,KAAK,mBACrB,6LAAC,oIAAA,CAAA,WAAQ;kEACL,cAAA,6LAAC,oIAAA,CAAA,YAAS;4DAAC,SAAS;4DAAG,WAAU;;gEAAwC;gEAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAYrH,6LAAC;4BAAI,WAAU;;gCAAkC;8CAC7C,6LAAC,qIAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,SAAQ;8CAAU;;;;;;gCAA8B;8CACtE,6LAAC,qIAAA,CAAA,SAAM;oCAAC,MAAK;oCAAS,UAAU,qBAAqB,oBAAoB;;wCAAgB;wCAAiC;;;;;;;gCAEjH;;;;;;;;;;;;;;;;;;;;;;;;AAM7B;GA94BgB;KAAA","debugId":null}},
    {"offset": {"line": 4227, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/sections/index.tsx"],"sourcesContent":["export { Navigation } from \"./Navigation\";\nexport { DailyReport } from \"./DailyReport\";\nexport { ActivityReport } from \"./ActivityReport\";\nexport { TruckTracking } from \"./TruckTracking\";\nexport { R0Report } from \"./R0Report\";\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 4260, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\"; // Removed useEffect\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Bell, Calendar as CalendarIcon } from \"lucide-react\"; // Added CalendarIcon\nimport { Toaster } from \"@/components/ui/toaster\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\"; // Added Popover components\nimport { Calendar } from \"@/components/ui/calendar\"; // Added Calendar component\nimport { format } from \"date-fns\"; // Added date-fns format\nimport { fr } from \"date-fns/locale\"; // Added French locale for date formatting\n\nimport {\n  Navigation,\n  DailyReport,\n  ActivityReport,\n  TruckTracking,\n  R0Report,\n} from \"@/components/sections\"; // Adjusted import path\nimport Link from \"next/link\";\nimport { cn } from \"@/lib/utils\";\nimport { useAuth } from \"@/hooks/useAuth\"; // Import useAuth hook\nimport { useRouter } from \"next/navigation\"; // Import useRouter\n\nconst userName = \"JD\"; // Replace with actual user data if available\n\n// Type for Poste\ntype Poste = \"1er\" | \"2ème\" | \"3ème\";\n\n// Updated Poste times and order\nconst POSTE_TIMES: Record<Poste, string> = {\n  \"3ème\": \"22:30 - 06:30\",\n  \"1er\": \"06:30 - 14:30\",\n  \"2ème\": \"14:30 - 22:30\",\n};\nconst POSTE_ORDER: Poste[] = [\"3ème\", \"1er\", \"2ème\"];\n\n\nexport default function Home() {\n  const [activeTab, setActiveTab] = useState(\"daily-report\");\n  // Renamed currentDate to selectedDate and initialized with today's date\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date());\n  // selectedPoste state seems unused in this component's main logic after previous changes. Removed it for now.\n  // const [selectedPoste, setSelectedPoste] = useState<Poste>(\"1er\");\n  const { user, loading, logout } = useAuth(); // Use the auth hook\n  const router = useRouter(); // Initialize router\n\n  // Helper function to get formatted date string, handles undefined case\n  const getFormattedDate = (date: Date | undefined, options: Intl.DateTimeFormatOptions): string => {\n    if (!date) return \"Sélectionner une date\"; // Placeholder if no date selected\n    return date.toLocaleDateString(\"fr-FR\", options);\n  };\n\n  const dateOptions: Intl.DateTimeFormatOptions = {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n  };\n\n    // Handle logout\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login'); // Redirect to login page after logout\n    } catch (error) {\n      console.error(\"Logout failed:\", error);\n      // Optionally show an error message to the user\n    }\n  };\n\n    // Redirect to login if not authenticated and not loading\n  // Note: This check might need adjustment depending on how you handle protected routes\n  // For a simple case, we redirect from the main page if not logged in.\n  if (loading) {\n    return <div>Chargement...</div>; // Show loading state\n  }\n\n  if (!user) {\n     router.push('/login'); // Redirect if not logged in\n     return null; // Return null to prevent rendering the rest of the page during redirect\n  }\n\n  // TODO: Fetch previous day's 3rd shift end counter data here based on selectedDate\n  // Example placeholder:\n  const previousDayThirdShiftEnd = \"9341.0\"; // Replace with actual fetched data or null\n\n\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <div className=\"container mx-auto px-4 py-6 max-w-7xl\"> {/* Increased max-width */}\n        {/* Header */}\n        <header className=\"mb-8 border-b pb-4\">\n          <div className=\"flex justify-between items-center flex-wrap gap-4\"> {/* Added flex-wrap and gap */}\n            <div className=\"flex-shrink-0\">\n              <h1 className=\"text-2xl font-bold\">ReportZen</h1>\n              <p className=\"text-muted-foreground\">Application de rapport quotidien</p>\n            </div>\n\n            {/* Date Picker */}\n            <div className=\"flex-grow sm:flex-grow-0 order-3 sm:order-none w-full sm:w-auto\">\n                <Popover>\n                    <PopoverTrigger asChild>\n                    <Button\n                        variant={\"outline\"}\n                        className={cn(\n                        \"w-full sm:w-[280px] justify-start text-left font-normal\", // Adjusted width for full on small screens\n                        !selectedDate && \"text-muted-foreground\"\n                        )}\n                    >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {selectedDate ? format(selectedDate, \"PPP\", { locale: fr }) : <span>Choisir une date</span>}\n                    </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                    <Calendar\n                        mode=\"single\"\n                        selected={selectedDate}\n                        onSelect={setSelectedDate}\n                        initialFocus\n                        locale={fr} // Use French locale\n                    />\n                    </PopoverContent>\n                </Popover>\n             </div>\n\n\n            <div className=\"flex items-center space-x-4 order-2 sm:order-none\">\n              <Button className=\"rounded-full\" variant=\"ghost\" size=\"icon\">\n                <Bell className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Notifications</span>\n              </Button>\n              <Avatar className=\"w-10 h-10\">\n                 <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"@shadcn\" data-ai-hint=\"user profile picture\" />\n                 <AvatarFallback className=\"bg-primary text-primary-foreground font-bold\">\n                   {user?.email ? user.email.substring(0, 2).toUpperCase() : '??'}\n                </AvatarFallback>\n              </Avatar>\n              {/* Link to admin page - Conditionally render based on role */}\n               {user?.role === 'admin' && (\n                  <Link href=\"/admin\" passHref>\n                      <Button variant=\"outline\">Admin Panel</Button>\n                  </Link>\n               )}\n               {/* Logout Button */}\n                <Button variant=\"outline\" onClick={handleLogout}>Déconnexion</Button>\n            </div>\n          </div>\n        </header>\n\n        {/* Navigation Tabs */}\n        <Navigation activeTab={activeTab} setActiveTab={setActiveTab} />\n\n        {/* Tab Content */}\n        <main id=\"tab-content\" className=\"mt-6\">\n           {/* Render content only when selectedDate is available */}\n           {selectedDate ? (\n               <>\n                  {activeTab === \"daily-report\" && (\n                    <DailyReport selectedDate={selectedDate} /> // Pass Date object\n                  )}\n                  {activeTab === \"activity-report\" && (\n                    // Pass formatted date string or the Date object depending on component needs\n                    <ActivityReport selectedDate={selectedDate} previousDayThirdShiftEnd={previousDayThirdShiftEnd}/> // Pass Date object, add previousDay prop\n                  )}\n                   {activeTab === \"r0-report\" && (\n                    <R0Report selectedDate={selectedDate} previousDayThirdShiftEnd={previousDayThirdShiftEnd}/> // Pass Date object, add previousDay prop\n                  )}\n                  {activeTab === \"truck-tracking\" && (\n                    <TruckTracking selectedDate={selectedDate} /> // Pass Date object\n                  )}\n               </>\n           ) : ( // Show a message prompting date selection\n                 <div className=\"flex justify-center items-center h-64\">\n                    <p className=\"text-muted-foreground text-lg\">Veuillez sélectionner une date pour afficher les rapports.</p>\n                 </div>\n            )}\n        </main>\n\n        <Toaster />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}