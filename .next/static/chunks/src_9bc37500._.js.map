{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-8 w-8\", // Kept adjusted icon size\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/list-users.ts"],"sourcesContent":["\n'use server';\n\nimport { getAdminAuth } from '@/lib/firebase/admin'; // Import the getter function\nimport type { UserRecord } from 'firebase-admin/auth';\n\n// Define return type\ninterface ListUsersResult {\n  success: boolean;\n  message: string;\n  users?: {\n    uid: string;\n    email: string | undefined; // Email might be undefined\n    creationTime: string;\n    lastSignInTime: string;\n    disabled: boolean;\n    isAdmin: boolean; // Added isAdmin flag\n    allowedSections: string[]; // Added allowed sections\n  }[];\n}\n\nexport async function listUsersAction(): Promise<ListUsersResult> {\n  let adminAuth;\n  try {\n    adminAuth = getAdminAuth(); // Get the admin auth instance\n    // If getAdminAuth doesn't throw, SDK is initialized\n  } catch (error: any) {\n    console.error('Error getting Firebase Admin Auth instance in listUsersAction:', error.message);\n    // Return a specific error indicating initialization failure\n    return {\n      success: false,\n      message: `Erreur critique: Impossible d'initialiser Firebase Admin SDK. Vérifiez les logs du serveur. (${error.message})`,\n    };\n  }\n\n  // --- Authentication/Authorization Check ---\n  // Ensure the caller is an admin. This is crucial for security.\n  // For now, we assume page-level protection. In a real app, implement robust server-side auth checks here.\n  // Example (requires passing user token):\n  // const userToken = headers().get('Authorization')?.split('Bearer ')[1];\n  // if (!userToken) return { success: false, message: \"Non autorisé.\" };\n  // try {\n  //   const decodedToken = await adminAuth.verifyIdToken(userToken);\n  //   if (!decodedToken.admin) { return { success: false, message: \"Accès refusé.\" }; }\n  // } catch (error) {\n  //    console.error(\"Auth check failed:\", error);\n  //    return { success: false, message: \"Erreur d'authentification.\" };\n  // }\n  // --- End Auth Check ---\n\n  try {\n    const listUsersResult = await adminAuth.listUsers(1000); // List up to 1000 users\n\n    const users = listUsersResult.users.map((userRecord: UserRecord) => {\n        // Check for the admin custom claim\n        const isAdminByClaim = !!userRecord.customClaims?.admin;\n        // Check if UID matches the primary admin UID from env var\n        const isAdminByUID = !!process.env.NEXT_PUBLIC_ADMIN_UID && userRecord.uid === process.env.NEXT_PUBLIC_ADMIN_UID;\n        const isAdmin = isAdminByClaim || isAdminByUID; // User is admin if either is true\n\n        // Get allowed sections claim, default to empty array if missing or invalid\n        const allowedSections = Array.isArray(userRecord.customClaims?.allowedSections)\n                                  ? userRecord.customClaims?.allowedSections as string[]\n                                  : [];\n\n\n        return {\n            uid: userRecord.uid,\n            email: userRecord.email,\n            creationTime: userRecord.metadata.creationTime,\n            lastSignInTime: userRecord.metadata.lastSignInTime,\n            disabled: userRecord.disabled,\n            isAdmin: isAdmin,\n            allowedSections: allowedSections, // Include allowed sections\n        };\n    });\n\n    // Optionally sort users, e.g., by creation time or email\n    users.sort((a, b) => new Date(b.creationTime).getTime() - new Date(a.creationTime).getTime());\n\n\n    return {\n      success: true,\n      message: `Successfully fetched ${users.length} users.`,\n      users: users,\n    };\n  } catch (error: any) {\n    console.error('Error listing users:', error);\n    // Provide more context in the error message\n    return {\n      success: false,\n      message: `Erreur lors de la récupération des utilisateurs: ${error.message}. (Code: ${error.code || 'N/A'})`,\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;IAqBsB","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/set-user-role.ts"],"sourcesContent":["\n'use server';\n\nimport { getAdminAuth } from '@/lib/firebase/admin'; // Import the getter function\nimport { z } from 'zod';\n\n// Define input schema for validation\nconst SetUserRoleInputSchema = z.object({\n  uid: z.string().min(1, { message: \"UID utilisateur requis.\" }),\n  isAdmin: z.boolean(),\n});\n\n// Define return type\ninterface SetUserRoleResult {\n  success: boolean;\n  message: string;\n}\n\nexport async function setUserRoleAction(uid: string, isAdmin: boolean): Promise<SetUserRoleResult> {\n    const adminAuth = getAdminAuth(); // Get the admin auth instance\n\n    // --- Authorization Check ---\n    // Ensure the caller is an authenticated admin. This is CRUCIAL.\n    // For simplicity, we assume this check happens in the calling context (e.g., AdminPage)\n    // A more robust solution involves verifying an admin token here.\n    // --- End Auth Check ---\n\n    // Validate input (even though it comes from internal function call, good practice)\n    const validationResult = SetUserRoleInputSchema.safeParse({ uid, isAdmin });\n    if (!validationResult.success) {\n        const errorMessages = validationResult.error.errors.map(e => e.message).join(', ');\n        return { success: false, message: `Validation échouée: ${errorMessages}` };\n    }\n\n    // Prevent modifying the primary admin defined by environment variable\n    if (process.env.NEXT_PUBLIC_ADMIN_UID && uid === process.env.NEXT_PUBLIC_ADMIN_UID) {\n        return { success: false, message: \"Modification du rôle de l'administrateur principal non autorisée.\" };\n    }\n\n    try {\n        // Set custom claims\n        await adminAuth.setCustomUserClaims(uid, { admin: isAdmin });\n        console.log(`Successfully set admin claim to ${isAdmin} for user: ${uid}`);\n\n        // Optionally, force token refresh for the affected user if they are currently logged in\n        // This requires more complex logic, potentially involving Firestore or Realtime Database\n        // await adminAuth.revokeRefreshTokens(uid);\n\n        return {\n            success: true,\n            message: `Rôle admin ${isAdmin ? 'défini' : 'retiré'} avec succès pour l'utilisateur ${uid}.`,\n        };\n    } catch (error: any) {\n        console.error(`Error setting custom claims for user ${uid}:`, error);\n        let errorMessage = \"Erreur lors de la modification du rôle de l'utilisateur.\";\n        // Add more specific error handling based on Firebase Admin SDK errors if needed\n        if (error.code === 'auth/user-not-found') {\n            errorMessage = `User avec UID ${uid} non trouvé.`;\n        }\n        return { success: false, message: errorMessage };\n    }\n}\n"],"names":[],"mappings":";;;;;IAkBsB","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/toggle-user-status.ts"],"sourcesContent":["\n'use server';\n\nimport { getAdminAuth } from '@/lib/firebase/admin'; // Import the getter function\nimport { z } from 'zod';\n\n// Define input schema for validation\nconst ToggleUserStatusInputSchema = z.object({\n  uid: z.string().min(1, { message: \"UID utilisateur requis.\" }),\n  disable: z.boolean(), // true to disable, false to enable\n});\n\n// Define return type\ninterface ToggleUserStatusResult {\n  success: boolean;\n  message: string;\n}\n\nexport async function toggleUserStatusAction(uid: string, disable: boolean): Promise<ToggleUserStatusResult> {\n    const adminAuth = getAdminAuth(); // Get the admin auth instance\n\n    // --- Authorization Check ---\n    // Ensure the caller is an authenticated admin.\n    // --- End Auth Check ---\n\n    // Validate input\n    const validationResult = ToggleUserStatusInputSchema.safeParse({ uid, disable });\n    if (!validationResult.success) {\n        const errorMessages = validationResult.error.errors.map(e => e.message).join(', ');\n        return { success: false, message: `Validation échouée: ${errorMessages}` };\n    }\n\n     // Prevent disabling the primary admin defined by environment variable\n    if (disable && process.env.NEXT_PUBLIC_ADMIN_UID && uid === process.env.NEXT_PUBLIC_ADMIN_UID) {\n        return { success: false, message: \"Désactivation de l'administrateur principal non autorisée.\" };\n    }\n\n    try {\n        // Update user status\n        await adminAuth.updateUser(uid, { disabled: disable });\n        console.log(`Successfully ${disable ? 'disabled' : 'enabled'} user: ${uid}`);\n\n        return {\n            success: true,\n            message: `User ${disable ? 'désactivé' : 'activé'} avec succès.`,\n        };\n    } catch (error: any) {\n        console.error(`Error updating status for user ${uid}:`, error);\n        let errorMessage = \"Erreur lors de la modification du statut de l'utilisateur.\";\n        if (error.code === 'auth/user-not-found') {\n            errorMessage = `User avec UID ${uid} non trouvé.`;\n        }\n        return { success: false, message: errorMessage };\n    }\n}\n"],"names":[],"mappings":";;;;;IAkBsB","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/delete-user.ts"],"sourcesContent":["\n'use server';\n\nimport { getAdminAuth } from '@/lib/firebase/admin'; // Import the getter function\nimport { z } from 'zod';\n\n// Define input schema for validation\nconst DeleteUserInputSchema = z.object({\n  uid: z.string().min(1, { message: \"UID utilisateur requis.\" }),\n});\n\n// Define return type\ninterface DeleteUserResult {\n  success: boolean;\n  message: string;\n}\n\nexport async function deleteUserAction(uid: string): Promise<DeleteUserResult> {\n    const adminAuth = getAdminAuth(); // Get the admin auth instance\n\n    // --- Authorization Check ---\n    // Ensure the caller is an authenticated admin.\n    // --- End Auth Check ---\n\n    // Validate input\n    const validationResult = DeleteUserInputSchema.safeParse({ uid });\n    if (!validationResult.success) {\n        const errorMessages = validationResult.error.errors.map(e => e.message).join(', ');\n        return { success: false, message: `Validation échouée: ${errorMessages}` };\n    }\n\n     // Prevent deleting the primary admin defined by environment variable\n    if (process.env.NEXT_PUBLIC_ADMIN_UID && uid === process.env.NEXT_PUBLIC_ADMIN_UID) {\n        return { success: false, message: \"Suppression de l'administrateur principal non autorisée.\" };\n    }\n\n\n    try {\n        // Delete user\n        await adminAuth.deleteUser(uid);\n        console.log(`Successfully deleted user: ${uid}`);\n\n        return {\n            success: true,\n            message: `User supprimé avec succès.`,\n        };\n    } catch (error: any) {\n        console.error(`Error deleting user ${uid}:`, error);\n        let errorMessage = \"Erreur lors de la suppression de l'utilisateur.\";\n        if (error.code === 'auth/user-not-found') {\n            errorMessage = `User avec UID ${uid} non trouvé.`;\n        }\n        // Add more specific error handling based on Firebase Admin SDK errors if needed\n        return { success: false, message: errorMessage };\n    }\n}\n"],"names":[],"mappings":";;;;;IAiBsB","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, children, ...props }, ref) => ( // Accept children prop\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  >{children}</tr> // Render children directly without extra whitespace\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;kBACT;;;;;aAAe,oDAAoD;;;AAEvE,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-toast.ts"],"sourcesContent":["\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        // Added success variant - customize colors as needed via globals.css or direct HSL\n        success:\n          \"border-transparent bg-green-600 text-primary-foreground hover:bg-green-600/80\", // Example green\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AAEA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;YACT,mFAAmF;YACnF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1010, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1161, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1213, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  // Removed text-sm here, can be added via className if needed\n  \"font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)} // Apply base variants and custom className\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6DAA6D;AAC7D;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1253, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/set-user-permissions.ts"],"sourcesContent":["\n'use server';\n\nimport { getAdminAuth } from '@/lib/firebase/admin'; // Import the getter function\nimport { z } from 'zod';\n\n// Define input schema for validation\nconst SetUserPermissionsInputSchema = z.object({\n  uid: z.string().min(1, { message: \"UID utilisateur requis.\" }),\n  allowedSections: z.array(z.string()), // Expect an array of section IDs/names\n});\n\n// Define return type\ninterface SetUserPermissionsResult {\n  success: boolean;\n  message: string;\n}\n\nexport async function setUserPermissionsAction(uid: string, allowedSections: string[]): Promise<SetUserPermissionsResult> {\n    const adminAuth = getAdminAuth(); // Get the admin auth instance\n\n    // --- Authorization Check ---\n    // Ensure the caller is an authenticated admin. This is CRUCIAL.\n    // For simplicity, assume page-level protection or verify token here.\n    // --- End Auth Check ---\n\n    // Validate input\n    const validationResult = SetUserPermissionsInputSchema.safeParse({ uid, allowedSections });\n    if (!validationResult.success) {\n        const errorMessages = validationResult.error.errors.map(e => e.message).join(', ');\n        return { success: false, message: `Validation échouée: ${errorMessages}` };\n    }\n\n    // Prevent modifying the primary admin defined by environment variable\n    if (process.env.NEXT_PUBLIC_ADMIN_UID && uid === process.env.NEXT_PUBLIC_ADMIN_UID) {\n        return { success: false, message: \"Modification des permissions de l'administrateur principal non autorisée.\" };\n    }\n\n    try {\n        // Get existing claims to merge, ensuring 'admin' claim is preserved\n        const userRecord = await adminAuth.getUser(uid);\n        const existingClaims = userRecord.customClaims || {};\n\n        // Set or update the allowedSections claim, merging with existing claims\n        await adminAuth.setCustomUserClaims(uid, {\n             ...existingClaims, // Preserve existing claims\n             allowedSections: allowedSections // Set/Overwrite allowedSections\n        });\n        console.log(`Successfully set allowedSections for user: ${uid}`, allowedSections);\n\n        // Optionally force token refresh if the user might be currently logged in\n        // await adminAuth.revokeRefreshTokens(uid);\n\n        return {\n            success: true,\n            message: `Permissions mises à jour avec succès pour l'utilisateur ${uid}.`,\n        };\n    } catch (error: any) {\n        console.error(`Error setting custom claims for user ${uid}:`, error);\n        let errorMessage = \"Erreur lors de la modification des permissions de l'utilisateur.\";\n        if (error.code === 'auth/user-not-found') {\n            errorMessage = `User avec UID ${uid} non trouvé.`;\n        }\n        return { success: false, message: errorMessage };\n    }\n}\n"],"names":[],"mappings":";;;;;IAkBsB","debugId":null}},
    {"offset": {"line": 1265, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/user-permissions-dialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useTransition } from 'react';\nimport {\n    Dialog,\n    DialogContent,\n    DialogHeader,\n    DialogTitle,\n    DialogDescription,\n    DialogFooter,\n    DialogClose, // Import DialogClose\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { setUserPermissionsAction } from '@/actions/set-user-permissions'; // Import the action\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2 } from 'lucide-react'; // For loading indicator\n\ninterface UserPermissionsDialogProps {\n    open: boolean;\n    onOpenChange: (open: boolean) => void;\n    userId: string;\n    userEmail: string | undefined;\n    currentAllowedSections: string[];\n    onPermissionsUpdate: () => void; // Callback to refresh user list\n}\n\nconst ALL_SECTIONS = [\n    { id: 'daily-report', label: 'Activité TSUD' },\n    { id: 'activity-report', label: 'Activité TNR' },\n    { id: 'r0-report', label: 'Rapport R0' },\n    { id: 'truck-tracking', label: 'Pointage Camions' },\n];\n\nexport function UserPermissionsDialog({\n    open,\n    onOpenChange,\n    userId,\n    userEmail,\n    currentAllowedSections,\n    onPermissionsUpdate,\n}: UserPermissionsDialogProps) {\n    const { toast } = useToast();\n    const [isPending, startTransition] = useTransition();\n    // Initialize selected sections based on currentAllowedSections prop\n    const [selectedSections, setSelectedSections] = useState<string[]>([]);\n\n    // Update state when currentAllowedSections prop changes (e.g., dialog reopens for same user after update)\n    useEffect(() => {\n        setSelectedSections(currentAllowedSections);\n    }, [currentAllowedSections, open]); // Update when prop changes or dialog opens\n\n\n    const handleCheckboxChange = (sectionId: string, checked: boolean | \"indeterminate\") => {\n         setSelectedSections(prev =>\n            checked === true\n                ? [...prev, sectionId] // Add section\n                : prev.filter(id => id !== sectionId) // Remove section\n        );\n    };\n\n    const handleSaveChanges = async () => {\n        startTransition(async () => {\n            const result = await setUserPermissionsAction(userId, selectedSections);\n            toast({\n                title: result.success ? \"Succès\" : \"Erreur\",\n                description: result.message,\n                variant: result.success ? \"default\" : \"destructive\",\n            });\n            if (result.success) {\n                onPermissionsUpdate(); // Refresh the user list in the parent\n                onOpenChange(false); // Close the dialog\n            }\n        });\n    };\n\n    // Determine if any changes have been made\n    const hasChanges = JSON.stringify(selectedSections.sort()) !== JSON.stringify(currentAllowedSections.sort());\n\n\n    return (\n        <Dialog open={open} onOpenChange={onOpenChange}>\n            <DialogContent>\n                <DialogHeader>\n                    <DialogTitle>Gérer les Permissions pour {userEmail || userId}</DialogTitle>\n                    <DialogDescription>\n                        Sélectionnez les sections de rapport auxquelles cet utilisateur aura accès.\n                    </DialogDescription>\n                </DialogHeader>\n                <div className=\"py-4 space-y-4\">\n                    {ALL_SECTIONS.map((section) => (\n                        <div key={section.id} className=\"flex items-center space-x-3\">\n                            <Checkbox\n                                id={`perm-${section.id}`}\n                                checked={selectedSections.includes(section.id)}\n                                onCheckedChange={(checked) => handleCheckboxChange(section.id, checked)}\n                                disabled={isPending}\n                            />\n                            <Label\n                                htmlFor={`perm-${section.id}`}\n                                className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n                            >\n                                {section.label}\n                            </Label>\n                        </div>\n                    ))}\n                </div>\n                <DialogFooter>\n                    {/* Use DialogClose for the Cancel button */}\n                    <DialogClose asChild>\n                         <Button variant=\"outline\" disabled={isPending}>Annuler</Button>\n                    </DialogClose>\n                    <Button onClick={handleSaveChanges} disabled={isPending || !hasChanges}>\n                        {isPending ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : null}\n                        Enregistrer\n                    </Button>\n                </DialogFooter>\n            </DialogContent>\n        </Dialog>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1482, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useTransition } from 'react';\nimport { useAuth } from '@/hooks/useAuth'; // Corrected extension\nimport { useRouter } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'; // Added CardDescription\nimport { Button, buttonVariants } from '@/components/ui/button'; // Import buttonVariants\nimport Link from 'next/link';\nimport { listUsersAction } from '@/actions/list-users';\nimport { setUserRoleAction } from '@/actions/set-user-role'; // Import new action\nimport { toggleUserStatusAction } from '@/actions/toggle-user-status'; // Import new action\nimport { deleteUserAction } from '@/actions/delete-user'; // Import new action\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useToast } from '@/hooks/use-toast';\nimport { Badge } from '@/components/ui/badge'; // For displaying role/status\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n    AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\"\nimport { ShieldCheck, ShieldOff, UserCog, Trash2, Ban, CheckCircle, Plus, KeyRound } from 'lucide-react'; // Icons\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger, DropdownMenuSeparator } from '@/components/ui/dropdown-menu'; // Dropdown for actions\nimport { UserPermissionsDialog } from '@/components/admin/user-permissions-dialog'; // Import the new dialog component\n\n\n// Define a type for the user data we expect from the action\ninterface DisplayUser {\n  uid: string;\n  email: string | undefined;\n  creationTime: string;\n  lastSignInTime: string;\n  disabled: boolean;\n  isAdmin: boolean;\n  allowedSections: string[]; // Add allowedSections\n}\n\n// Define type for the user being edited in the permissions dialog\ninterface UserBeingEdited {\n    uid: string;\n    email: string | undefined;\n    allowedSections: string[];\n}\n\nexport default function AdminPage() {\n  const { user: currentUser, loading: authLoading } = useAuth();\n  const router = useRouter();\n  const { toast } = useToast();\n  const [users, setUsers] = useState<DisplayUser[]>([]);\n  const [listLoading, setListLoading] = useState(true);\n  const [isPending, startTransition] = useTransition();\n  // State for managing the permissions dialog\n  const [isPermissionsDialogOpen, setIsPermissionsDialogOpen] = useState(false);\n  const [userToEditPermissions, setUserToEditPermissions] = useState<UserBeingEdited | null>(null);\n\n\n  // Redirect non-admins or unauthenticated users\n  useEffect(() => {\n    if (!authLoading && (!currentUser || currentUser.role !== 'admin')) {\n      router.push('/'); // Redirect to home if not admin\n    }\n  }, [currentUser, authLoading, router]);\n\n  // Function to fetch users\n  const fetchUsers = React.useCallback(async () => { // Wrap in useCallback\n      console.log(\"AdminPage: Fetching users...\");\n      setListLoading(true);\n      const result = await listUsersAction();\n      console.log(\"AdminPage: listUsersAction result:\", result); // Log the result\n\n      if (result.success && result.users) {\n        setUsers(result.users);\n        console.log(\"AdminPage: Users state updated:\", result.users); // Log the updated state\n      } else {\n        toast({\n          title: \"Erreur\",\n          description: `Impossible de charger les utilisateurs: ${result.message}`, // Show more detailed message\n          variant: \"destructive\",\n        });\n        console.error(\"AdminPage: Failed to fetch users:\", result.message);\n        setUsers([]); // Ensure users list is empty on failure\n      }\n      setListLoading(false);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [toast]); // Add toast as dependency\n\n\n  // Fetch users when the component mounts and user is confirmed as admin\n  useEffect(() => {\n    // Ensure auth loading is complete and user is admin before fetching\n    if (!authLoading && currentUser?.role === 'admin') {\n        fetchUsers();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentUser, authLoading]); // Removed fetchUsers from dependency array as it's stable due to useCallback\n\n\n  // --- Action Handlers ---\n\n  const handleSetAdmin = (uid: string, isAdmin: boolean) => {\n    startTransition(async () => {\n        const result = await setUserRoleAction(uid, isAdmin);\n        toast({\n            title: result.success ? \"Succès\" : \"Erreur\",\n            description: result.message,\n            variant: result.success ? \"default\" : \"destructive\",\n        });\n        if (result.success) {\n            fetchUsers(); // Refresh user list\n        }\n    });\n  };\n\n  const handleToggleStatus = (uid: string, isDisabled: boolean) => {\n     startTransition(async () => {\n        const result = await toggleUserStatusAction(uid, isDisabled);\n        toast({\n            title: result.success ? \"Succès\" : \"Erreur\",\n            description: result.message,\n            variant: result.success ? \"default\" : \"destructive\",\n        });\n         if (result.success) {\n            fetchUsers(); // Refresh user list\n        }\n     });\n  };\n\n  const handleDeleteUser = (uid: string) => {\n     startTransition(async () => {\n        const result = await deleteUserAction(uid);\n        toast({\n            title: result.success ? \"Succès\" : \"Erreur\",\n            description: result.message,\n            variant: result.success ? \"default\" : \"destructive\",\n        });\n         if (result.success) {\n            fetchUsers(); // Refresh user list\n        }\n     });\n  };\n\n   // Handler to open the permissions dialog\n    const openPermissionsDialog = (user: DisplayUser) => {\n        setUserToEditPermissions({\n            uid: user.uid,\n            email: user.email,\n            allowedSections: user.allowedSections,\n        });\n        setIsPermissionsDialogOpen(true);\n    };\n\n    // Handler called when permissions are updated in the dialog\n    const handlePermissionsUpdate = () => {\n        fetchUsers(); // Re-fetch users to reflect changes\n    };\n\n  // --- Rendering Logic ---\n\n  if (authLoading || !currentUser || currentUser.role !== 'admin') {\n    return <div className=\"flex justify-center items-center min-h-screen\">Chargement ou redirection...</div>;\n  }\n\n  // Debug log for render\n  console.log(\"AdminPage: Rendering with users:\", users, \"Loading:\", listLoading);\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex justify-between items-center mb-6 flex-wrap gap-4\">\n             <h1 className=\"text-3xl font-bold\">Panneau d'administration</h1>\n            <Link href=\"/admin/create-user\" passHref>\n                <Button><Plus className=\"mr-2 h-4 w-4\"/>Créer User</Button>\n            </Link>\n        </div>\n\n        {/* User List Section */}\n        <Card>\n            <CardHeader>\n                <CardTitle>Gestion des Utilisateurs</CardTitle>\n                <CardDescription>Gérer les utilisateurs, leurs rôles, leur statut et leurs permissions.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                {listLoading ? (\n                    <div className=\"space-y-2\">\n                        <Skeleton className=\"h-12 w-full\" />\n                        <Skeleton className=\"h-12 w-full\" />\n                        <Skeleton className=\"h-12 w-full\" />\n                    </div>\n                ) : (\n                    <div className=\"overflow-x-auto\">\n                        <Table>\n                            <TableHeader>\n                                <TableRow>\n                                    <TableHead>User</TableHead>\n                                    <TableHead>Rôle</TableHead>\n                                    <TableHead>Statut</TableHead>\n                                    <TableHead>Permissions</TableHead>{/* Permissions Column */}\n                                    <TableHead>UID</TableHead>\n                                    <TableHead>Créé le</TableHead>\n                                    <TableHead>Dernière connexion</TableHead>\n                                    <TableHead className=\"text-right\">Actions</TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {users.length > 0 ? (\n                                    users.map((usr) => (\n                                    <TableRow key={usr.uid} className={usr.disabled ? 'opacity-60' : ''}>\n                                        <TableCell className=\"font-medium\">{usr.email || 'N/A'}</TableCell>\n                                        <TableCell>\n                                            {/* Display Admin badge if user is admin, User otherwise */}\n                                            {usr.isAdmin ? (\n                                                <Badge variant=\"secondary\"><ShieldCheck className=\"mr-1 h-3 w-3\" /> Admin</Badge>\n                                            ) : (\n                                                <Badge variant=\"outline\">User</Badge>\n                                            )}\n                                        </TableCell>\n                                         <TableCell>\n                                            {usr.disabled ? (\n                                                <Badge variant=\"destructive\"><Ban className=\"mr-1 h-3 w-3\" />Désactivé</Badge>\n                                            ) : (\n                                                <Badge variant=\"default\" className=\"bg-green-600 hover:bg-green-700\"><CheckCircle className=\"mr-1 h-3 w-3\" />Activé</Badge>\n                                            )}\n                                        </TableCell>\n                                        <TableCell> {/* Permissions Cell */}\n                                            {/* Show number of allowed sections or 'All' for admin */}\n                                             {usr.isAdmin ? (\n                                                 <Badge variant=\"outline\">Toutes</Badge>\n                                            ) : (\n                                                 <Badge variant=\"outline\" className=\"cursor-pointer hover:bg-muted\" onClick={() => openPermissionsDialog(usr)}>\n                                                    {usr.allowedSections.length} section(s)\n                                                </Badge>\n                                            )}\n                                        </TableCell>\n                                        <TableCell className=\"text-xs text-muted-foreground\">{usr.uid}</TableCell>\n                                        <TableCell>{new Date(usr.creationTime).toLocaleDateString()}</TableCell>\n                                        <TableCell>{usr.lastSignInTime ? new Date(usr.lastSignInTime).toLocaleDateString() : 'Jamais'}</TableCell>\n                                        <TableCell className=\"text-right\">\n                                            {/* Prevent modifying the primary admin defined by UID */}\n                                            {(process.env.NEXT_PUBLIC_ADMIN_UID && usr.uid === process.env.NEXT_PUBLIC_ADMIN_UID) ? (\n                                                 <Badge variant=\"outline\">Principal</Badge>\n                                            ) : (\n                                                <DropdownMenu>\n                                                    <DropdownMenuTrigger asChild>\n                                                        <Button variant=\"ghost\" size=\"icon\" disabled={isPending}>\n                                                            <UserCog className=\"h-4 w-4\" />\n                                                            <span className=\"sr-only\">Actions</span>\n                                                        </Button>\n                                                    </DropdownMenuTrigger>\n                                                    <DropdownMenuContent align=\"end\">\n                                                        {/* --- Manage Permissions --- */}\n                                                         <DropdownMenuItem onSelect={() => openPermissionsDialog(usr)} disabled={isPending}>\n                                                            <KeyRound className=\"mr-2 h-4 w-4\" /> Gérer Permissions\n                                                         </DropdownMenuItem>\n\n                                                         <DropdownMenuSeparator />\n\n\n                                                        {/* --- Role Management --- */}\n                                                         {usr.isAdmin ? (\n                                                            <AlertDialog>\n                                                                <AlertDialogTrigger asChild>\n                                                                    <DropdownMenuItem onSelect={(e) => e.preventDefault()} disabled={isPending}>\n                                                                        <ShieldOff className=\"mr-2 h-4 w-4\"/> Retirer Admin\n                                                                    </DropdownMenuItem>\n                                                                </AlertDialogTrigger>\n                                                                <AlertDialogContent>\n                                                                    <AlertDialogHeader>\n                                                                        <AlertDialogTitle>Retirer le Rôle Admin?</AlertDialogTitle>\n                                                                        <AlertDialogDescription>\n                                                                            Confirmez-vous la révocation des privilèges admin pour {usr.email || usr.uid}?\n                                                                        </AlertDialogDescription>\n                                                                    </AlertDialogHeader>\n                                                                    <AlertDialogFooter>\n                                                                        <AlertDialogCancel disabled={isPending}>Annuler</AlertDialogCancel>\n                                                                        <AlertDialogAction onClick={() => handleSetAdmin(usr.uid, false)} disabled={isPending}>\n                                                                            Confirmer\n                                                                        </AlertDialogAction>\n                                                                    </AlertDialogFooter>\n                                                                </AlertDialogContent>\n                                                            </AlertDialog>\n                                                        ) : (\n                                                            <AlertDialog>\n                                                                <AlertDialogTrigger asChild>\n                                                                     <DropdownMenuItem onSelect={(e) => e.preventDefault()} disabled={isPending}>\n                                                                        <ShieldCheck className=\"mr-2 h-4 w-4\"/> Définir Admin\n                                                                    </DropdownMenuItem>\n                                                                </AlertDialogTrigger>\n                                                                 <AlertDialogContent>\n                                                                    <AlertDialogHeader>\n                                                                        <AlertDialogTitle>Définir comme Admin?</AlertDialogTitle>\n                                                                        <AlertDialogDescription>\n                                                                            Confirmez-vous l'attribution des privilèges admin à {usr.email || usr.uid}?\n                                                                        </AlertDialogDescription>\n                                                                    </AlertDialogHeader>\n                                                                    <AlertDialogFooter>\n                                                                        <AlertDialogCancel disabled={isPending}>Annuler</AlertDialogCancel>\n                                                                        <AlertDialogAction onClick={() => handleSetAdmin(usr.uid, true)} disabled={isPending}>\n                                                                            Confirmer\n                                                                        </AlertDialogAction>\n                                                                    </AlertDialogFooter>\n                                                                </AlertDialogContent>\n                                                            </AlertDialog>\n                                                        )}\n\n                                                        {/* --- Status Management --- */}\n                                                         {usr.disabled ? (\n                                                             <AlertDialog>\n                                                                <AlertDialogTrigger asChild>\n                                                                    <DropdownMenuItem onSelect={(e) => e.preventDefault()} disabled={isPending}>\n                                                                        <CheckCircle className=\"mr-2 h-4 w-4\"/> Activer\n                                                                    </DropdownMenuItem>\n                                                                </AlertDialogTrigger>\n                                                                <AlertDialogContent>\n                                                                    <AlertDialogHeader>\n                                                                        <AlertDialogTitle>Activer l'Utilisateur?</AlertDialogTitle>\n                                                                        <AlertDialogDescription>\n                                                                            Confirmez-vous l'activation du compte pour {usr.email || usr.uid}?\n                                                                        </AlertDialogDescription>\n                                                                    </AlertDialogHeader>\n                                                                    <AlertDialogFooter>\n                                                                        <AlertDialogCancel disabled={isPending}>Annuler</AlertDialogCancel>\n                                                                        <AlertDialogAction onClick={() => handleToggleStatus(usr.uid, false)} disabled={isPending}>\n                                                                            Confirmer\n                                                                        </AlertDialogAction>\n                                                                    </AlertDialogFooter>\n                                                                </AlertDialogContent>\n                                                            </AlertDialog>\n                                                        ) : (\n                                                            <AlertDialog>\n                                                                <AlertDialogTrigger asChild>\n                                                                     <DropdownMenuItem onSelect={(e) => e.preventDefault()} disabled={isPending} className=\"text-destructive focus:text-destructive\">\n                                                                        <Ban className=\"mr-2 h-4 w-4\"/> Désactiver\n                                                                    </DropdownMenuItem>\n                                                                </AlertDialogTrigger>\n                                                                 <AlertDialogContent>\n                                                                    <AlertDialogHeader>\n                                                                        <AlertDialogTitle>Désactiver l'Utilisateur?</AlertDialogTitle>\n                                                                        <AlertDialogDescription>\n                                                                             Confirmez-vous la désactivation du compte pour {usr.email || usr.uid}? L'utilisateur ne pourra plus se connecter.\n                                                                        </AlertDialogDescription>\n                                                                    </AlertDialogHeader>\n                                                                    <AlertDialogFooter>\n                                                                        <AlertDialogCancel disabled={isPending}>Annuler</AlertDialogCancel>\n                                                                        {/* Use Button directly for destructive variant */}\n                                                                        <Button\n                                                                            variant=\"destructive\"\n                                                                            onClick={() => handleToggleStatus(usr.uid, true)}\n                                                                            disabled={isPending}\n                                                                        >\n                                                                            Désactiver\n                                                                        </Button>\n                                                                    </AlertDialogFooter>\n                                                                </AlertDialogContent>\n                                                            </AlertDialog>\n                                                        )}\n\n                                                        {/* --- Delete User --- */}\n                                                        <AlertDialog>\n                                                            <AlertDialogTrigger asChild>\n                                                                <DropdownMenuItem onSelect={(e) => e.preventDefault()} disabled={isPending} className=\"text-destructive focus:text-destructive\">\n                                                                    <Trash2 className=\"mr-2 h-4 w-4\"/> Supprimer\n                                                                </DropdownMenuItem>\n                                                            </AlertDialogTrigger>\n                                                            <AlertDialogContent>\n                                                                <AlertDialogHeader>\n                                                                    <AlertDialogTitle>Supprimer l'Utilisateur?</AlertDialogTitle>\n                                                                    <AlertDialogDescription>\n                                                                        Cette action est irréversible. Confirmez-vous la suppression définitive de {usr.email || usr.uid}?\n                                                                    </AlertDialogDescription>\n                                                                </AlertDialogHeader>\n                                                                <AlertDialogFooter>\n                                                                    <AlertDialogCancel disabled={isPending}>Annuler</AlertDialogCancel>\n                                                                    {/* Use Button directly for destructive variant */}\n                                                                    <Button\n                                                                        variant=\"destructive\"\n                                                                        onClick={() => handleDeleteUser(usr.uid)}\n                                                                        disabled={isPending}\n                                                                    >\n                                                                        Supprimer\n                                                                    </Button>\n                                                                </AlertDialogFooter>\n                                                            </AlertDialogContent>\n                                                        </AlertDialog>\n                                                    </DropdownMenuContent>\n                                                </DropdownMenu>\n                                            )}\n                                        </TableCell>\n                                    </TableRow>\n                                    ))\n                                ) : (\n                                    <TableRow>\n                                        <TableCell colSpan={8} className=\"text-center text-muted-foreground\"> {/* Adjusted colSpan */}\n                                            Aucun utilisateur trouvé ou erreur lors du chargement.\n                                        </TableCell>\n                                    </TableRow>\n                                )}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )}\n            </CardContent>\n        </Card>\n\n        {/* Permissions Dialog */}\n        {userToEditPermissions && (\n             <UserPermissionsDialog\n                open={isPermissionsDialogOpen}\n                onOpenChange={setIsPermissionsDialogOpen}\n                userId={userToEditPermissions.uid}\n                userEmail={userToEditPermissions.email}\n                currentAllowedSections={userToEditPermissions.allowedSections}\n                onPermissionsUpdate={handlePermissionsUpdate}\n             />\n        )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}